{"repository_name":"dppm","body":"![DP logo](https://avatars.githubusercontent.com/u/19499073)\n\n# DPPM\n\n[![Build Status](https://cloud.drone.io/api/badges/DFabric/dppm/status.svg)](https://cloud.drone.io/DFabric/dppm)\n[![Gitter](https://img.shields.io/badge/chat-on_gitter-red.svg?style=flat-square)](https://gitter.im/DFabric/Lobby)\n[![ISC](https://img.shields.io/badge/License-ISC-blue.svg?style=flat-square)](https://en.wikipedia.org/wiki/ISC_license)\n\nDedicated Platform Package Manager - an easy way to install and manage server applications.\n\n## Features\n\n- Choice among [dozens of applications](https://github.com/DFabric/packages-source)\n- Unified interface for easy install, backup and modification of configurations\n- Support a wide range of systems (UN*Xes, x86, ARM) - distribution agnostic\n- Can use systemd or OpenRC system services with dedicated users/groups\n- Independent of the OS package manager - self-contained, statically linked binaries\n- Standalone installations bundled with all dependencies - DPPM can be safely removed\n- Compatible with manual system administration (like editions \"by hand\" on the file system)\n\n## Documentation\n\nhttps://dfabric.github.io/dppm\n\n## Install\n\n### 1. Get the `dppm` binary\n\nThere are 3 methods:\n\n- Automatic\n\nDownload `dppm` with the helper:\n\n`sh -c \"APP=dppm-static $(wget -qO- https://raw.githubusercontent.com/DFabric/apps-static/master/helper.sh)\"`\n\n(`wget -qO-` can be replaced by `curl -s`)\n\nThe binary is `bin/dppm` in the directory.\n\n- Manual\n\nGet [the pre-compiled binary](https://bintray.com/dfabric/apps-static/builds#files) called `dppm-static_*`, and extract it.\n\n- Clone the repository and compile the project\n\nSee the `Development` section\n\n### 2. Run the installation command\n\n`sudo bin/dppm app install`\n\nYou don't *need* to install it as root, but no system services nor dedicated users will be available. You will have to rely on `sudo dppm app exec`\n\n## Usage\n\nTo show the help:\n\n`dppm --help`\n\nTo list [available packages](https://github.com/DFabric/package-sources) (applications, built and available packages):\n\n`dppm list`\n\nA typical installation can be:\n\n```sh\n# add a new application to the system\nsudo dppm app add [application]\n\n# start the service and auto start the service at boot\nsudo dppm service start [application]\nsudo dppm service boot [application] true\n```\n\nIf not specified, an user, group and application name will be created.\n\nNote that `add` will `build` the missing required packages.\n\nRoot execution is needed to add a system service (systemd or OpenRC)\n\nTo show the services status:\n\n`dppm service status`\n\nTo follow last application logs:\n\n`sudo dppm logs [application] output`\n\n## Uninstall\n\n`sudo dppm app uninstall`\n\n## Supported environments\n\nSupported architectures are `x86-64` and `arm64` (thanks to [@jirutka](https://github.com/jirutka)).\n\n32-bit architectures are partially supported, but discouraged since nowadays more and more applications are designed for 64-bit, particularly databases ([TiDB](https://github.com/pingcap/tidb/issues/5224), [MongoDB](https://www.mongodb.com/blog/post/32-bit-limitations)...)\n\nFor Rapberry Pi 3, a 64-bit OS like [Armbian](https://www.armbian.com/) is recommended, and needed to run DPPM, instead of a 32-bit Raspbian.\n\nStill, [an issue is open](https://github.com/crystal-lang/crystal/issues/5467) for `armhf`.\n\n## Development\n\nYou will need a [Crystal](https://crystal-lang.org) development environment\n\nYou can either [install it](https://crystal-lang.org/docs/installation) or use a [Docker image](https://hub.docker.com/r/jrei/crystal-alpine)\n\nYou may also find useful this variables `config=./config.con` and `source=../packages-source`\n\n### How to build\n\nInstall dependencies and build `dppm`:\n\n`shards build`\n\nRun it\n\n`bin/dppm --help`\n\nFor more informations, see the [official docs](https://crystal-lang.org/docs/using_the_compiler/)\n\n### Run tests\n\nIntegration tests are stateful and need to be runned all in a batch sequentially.\n\nTo run them: `crystal spec spec/integration_spec.cr`\n\nOther tests are stateless and can be runned independently to each other\n\nTo run all tests: `crystal spec`\n\n## License                                                                                                 \n\nCopyright (c) 2018-2020 Julien Reichardt - ISC License\n","program":{"html_id":"dppm/toplevel","path":"toplevel.html","kind":"module","full_name":"Top Level Namespace","name":"Top Level Namespace","abstract":false,"superclass":null,"ancestors":[],"locations":[],"repository_name":"dppm","program":true,"enum":false,"alias":false,"aliased":"","const":false,"constants":[{"id":"REDIRECT_THRESH","name":"REDIRECT_THRESH","value":"{% if threshold = flag?(:redirect_threshold) %}\n                    {{ threshold }}\n                  {% else %}\n                    10\n                  {% end %}","doc":null,"summary":null}],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":null,"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[{"html_id":"dppm/Config","path":"Config.html","kind":"module","full_name":"Config","name":"Config","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"src/config.cr","line_number":4,"url":"https://github.com/DFabric/dppm/blob/4a1bc37bc6872377dbc36759a4d46e84ec35bbb5/src/config.cr#L4"},{"filename":"src/config/format.cr","line_number":1,"url":"https://github.com/DFabric/dppm/blob/4a1bc37bc6872377dbc36759a4d46e84ec35bbb5/src/config/format.cr#L1"}],"repository_name":"dppm","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[{"html_id":"dppm/Config","kind":"module","full_name":"Config","name":"Config"}],"subclasses":[],"including_types":[],"namespace":null,"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[{"id":"read(file:Path):Types-instance-method","html_id":"read(file:Path):Types-instance-method","name":"read","doc":"Yield the block when the file format is supported, and return the corresponding `Config::Types`, else raise.","summary":"<p>Yield the block when the file format is supported, and return the corresponding <code><a href=\"Config/Types.html\">Config::Types</a></code>, else raise.</p>","abstract":false,"args":[{"name":"file","doc":null,"default_value":"","external_name":"file","restriction":"Path"}],"args_string":"(file : Path) : Types","source_link":"https://github.com/DFabric/dppm/blob/4a1bc37bc6872377dbc36759a4d46e84ec35bbb5/src/config.cr#L9","def":{"name":"read","args":[{"name":"file","doc":null,"default_value":"","external_name":"file","restriction":"Path"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Types","visibility":"Public","body":"to_type(file.extension.to_s.lchop) do\n  File.read(file.to_s)\nend"}},{"id":"read?(file:Path):Types?-instance-method","html_id":"read?(file:Path):Types?-instance-method","name":"read?","doc":"Yield the block when the file format is supported, and return the corresponding `Config::Types`.","summary":"<p>Yield the block when the file format is supported, and return the corresponding <code><a href=\"Config/Types.html\">Config::Types</a></code>.</p>","abstract":false,"args":[{"name":"file","doc":null,"default_value":"","external_name":"file","restriction":"Path"}],"args_string":"(file : Path) : Types?","source_link":"https://github.com/DFabric/dppm/blob/4a1bc37bc6872377dbc36759a4d46e84ec35bbb5/src/config.cr#L19","def":{"name":"read?","args":[{"name":"file","doc":null,"default_value":"","external_name":"file","restriction":"Path"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Types | ::Nil","visibility":"Public","body":"to_type?(file.extension.to_s.lchop) do\n  File.read(file.to_s)\nend"}},{"id":"to_type(format:String,&block:Proc(String)):Types-instance-method","html_id":"to_type(format:String,&block:Proc(String)):Types-instance-method","name":"to_type","doc":"Yield the block when the file format is supported, and return the corresponding `Config::Types`, else raise.","summary":"<p>Yield the block when the file format is supported, and return the corresponding <code><a href=\"Config/Types.html\">Config::Types</a></code>, else raise.</p>","abstract":false,"args":[{"name":"format","doc":null,"default_value":"","external_name":"format","restriction":"String"}],"args_string":"(format : String, &block : Proc(String)) : Types","source_link":"https://github.com/DFabric/dppm/blob/4a1bc37bc6872377dbc36759a4d46e84ec35bbb5/src/config.cr#L14","def":{"name":"to_type","args":[{"name":"format","doc":null,"default_value":"","external_name":"format","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":0,"block_arg":{"name":"block","doc":null,"default_value":"","external_name":"block","restriction":"Proc(String)"},"return_type":"Types","visibility":"Public","body":"(to_type?(format) do\n  yield\nend) || (raise(\"Unsupported file format: #{format}\"))"}},{"id":"to_type?(format:String,&block:Proc(String)):Types?-instance-method","html_id":"to_type?(format:String,&block:Proc(String)):Types?-instance-method","name":"to_type?","doc":"Yield the block when the file format is supported, and return the corresponding `Config::Types`.","summary":"<p>Yield the block when the file format is supported, and return the corresponding <code><a href=\"Config/Types.html\">Config::Types</a></code>.</p>","abstract":false,"args":[{"name":"format","doc":null,"default_value":"","external_name":"format","restriction":"String"}],"args_string":"(format : String, &block : Proc(String)) : Types?","source_link":"https://github.com/DFabric/dppm/blob/4a1bc37bc6872377dbc36759a4d46e84ec35bbb5/src/config.cr#L24","def":{"name":"to_type?","args":[{"name":"format","doc":null,"default_value":"","external_name":"format","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":0,"block_arg":{"name":"block","doc":null,"default_value":"","external_name":"block","restriction":"Proc(String)"},"return_type":"Types | ::Nil","visibility":"Public","body":"case format\nwhen \"con\"\n  Config::CON.new(yield)\nwhen \"json\"\n  Config::JSON.new(yield)\nwhen \"ini\", \"INI\"\n  Config::INI.new(yield)\nwhen \"yml\", \"yaml\"\n  Config::YAML.new(yield)\nwhen \"toml\"\n  Config::TOML.new(yield)\nend"}}],"macros":[],"types":[{"html_id":"dppm/Config/CON","path":"Config/CON.html","kind":"struct","full_name":"Config::CON","name":"CON","abstract":false,"superclass":{"html_id":"dppm/Struct","kind":"struct","full_name":"Struct","name":"Struct"},"ancestors":[{"html_id":"dppm/Config/Format","kind":"module","full_name":"Config::Format","name":"Format"},{"html_id":"dppm/Struct","kind":"struct","full_name":"Struct","name":"Struct"},{"html_id":"dppm/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"dppm/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/config/con.cr","line_number":4,"url":"https://github.com/DFabric/dppm/blob/4a1bc37bc6872377dbc36759a4d46e84ec35bbb5/src/config/con.cr#L4"}],"repository_name":"dppm","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[{"html_id":"dppm/Config/Format","kind":"module","full_name":"Config::Format","name":"Format"}],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"dppm/Config","kind":"module","full_name":"Config","name":"Config"},"doc":null,"summary":null,"class_methods":[],"constructors":[{"id":"new(data:::CON::Any)-class-method","html_id":"new(data:::CON::Any)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"data","doc":null,"default_value":"","external_name":"data","restriction":"::CON::Any"}],"args_string":"(data : ::CON::Any)","source_link":"https://github.com/DFabric/dppm/blob/4a1bc37bc6872377dbc36759a4d46e84ec35bbb5/src/config/con.cr#L8","def":{"name":"new","args":[{"name":"data","doc":null,"default_value":"","external_name":"data","restriction":"::CON::Any"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(data)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}},{"id":"new(content:String)-class-method","html_id":"new(content:String)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"content","doc":null,"default_value":"","external_name":"content","restriction":"String"}],"args_string":"(content : String)","source_link":"https://github.com/DFabric/dppm/blob/4a1bc37bc6872377dbc36759a4d46e84ec35bbb5/src/config/con.cr#L11","def":{"name":"new","args":[{"name":"content","doc":null,"default_value":"","external_name":"content","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"new(::CON.parse(content))"}}],"instance_methods":[{"id":"build:String-instance-method","html_id":"build:String-instance-method","name":"build","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : String","source_link":"https://github.com/DFabric/dppm/blob/4a1bc37bc6872377dbc36759a4d46e84ec35bbb5/src/config/con.cr#L32","def":{"name":"build","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"String","visibility":"Public","body":"@data.to_pretty_con"}},{"id":"data:::CON::Any-instance-method","html_id":"data:::CON::Any-instance-method","name":"data","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : ::CON::Any","source_link":"https://github.com/DFabric/dppm/blob/4a1bc37bc6872377dbc36759a4d46e84ec35bbb5/src/config/con.cr#L6","def":{"name":"data","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"::CON::Any","visibility":"Public","body":"@data"}},{"id":"del(path:Array)-instance-method","html_id":"del(path:Array)-instance-method","name":"del","doc":null,"summary":null,"abstract":false,"args":[{"name":"path","doc":null,"default_value":"","external_name":"path","restriction":"Array"}],"args_string":"(path : Array)","source_link":"https://github.com/DFabric/dppm/blob/4a1bc37bc6872377dbc36759a4d46e84ec35bbb5/src/config/con.cr#L28","def":{"name":"del","args":[{"name":"path","doc":null,"default_value":"","external_name":"path","restriction":"Array"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@data.delete(path)"}},{"id":"get(path:Array)-instance-method","html_id":"get(path:Array)-instance-method","name":"get","doc":null,"summary":null,"abstract":false,"args":[{"name":"path","doc":null,"default_value":"","external_name":"path","restriction":"Array"}],"args_string":"(path : Array)","source_link":"https://github.com/DFabric/dppm/blob/4a1bc37bc6872377dbc36759a4d46e84ec35bbb5/src/config/con.cr#L15","def":{"name":"get","args":[{"name":"path","doc":null,"default_value":"","external_name":"path","restriction":"Array"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@data[path]?"}},{"id":"set(path:Array,value)-instance-method","html_id":"set(path:Array,value)-instance-method","name":"set","doc":null,"summary":null,"abstract":false,"args":[{"name":"path","doc":null,"default_value":"","external_name":"path","restriction":"Array"},{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":""}],"args_string":"(path : Array, value)","source_link":"https://github.com/DFabric/dppm/blob/4a1bc37bc6872377dbc36759a4d46e84ec35bbb5/src/config/con.cr#L19","def":{"name":"set","args":[{"name":"path","doc":null,"default_value":"","external_name":"path","restriction":"Array"},{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"value = to_type(value)\n@data[path] = ::CON::Any.new(case value\nwhen Hash(String, String)\n  Hash(String, ::CON::Any).new\nwhen Array(String)\n  Array(::CON::Any).new\nelse\n  value\nend)\n"}}],"macros":[],"types":[]},{"html_id":"dppm/Config/Format","path":"Config/Format.html","kind":"module","full_name":"Config::Format","name":"Format","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"src/config/format.cr","line_number":1,"url":"https://github.com/DFabric/dppm/blob/4a1bc37bc6872377dbc36759a4d46e84ec35bbb5/src/config/format.cr#L1"}],"repository_name":"dppm","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[{"html_id":"dppm/Config/CON","kind":"struct","full_name":"Config::CON","name":"CON"},{"html_id":"dppm/Config/INI","kind":"struct","full_name":"Config::INI","name":"INI"},{"html_id":"dppm/Config/JSON","kind":"struct","full_name":"Config::JSON","name":"JSON"},{"html_id":"dppm/Config/TOML","kind":"struct","full_name":"Config::TOML","name":"TOML"},{"html_id":"dppm/Config/YAML","kind":"struct","full_name":"Config::YAML","name":"YAML"}],"namespace":{"html_id":"dppm/Config","kind":"module","full_name":"Config","name":"Config"},"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[{"id":"del(path:String)-instance-method","html_id":"del(path:String)-instance-method","name":"del","doc":null,"summary":null,"abstract":false,"args":[{"name":"path","doc":null,"default_value":"","external_name":"path","restriction":"String"}],"args_string":"(path : String)","source_link":"https://github.com/DFabric/dppm/blob/4a1bc37bc6872377dbc36759a4d46e84ec35bbb5/src/config/format.cr#L10","def":{"name":"del","args":[{"name":"path","doc":null,"default_value":"","external_name":"path","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"del(to_array(path))"}},{"id":"get(path:String)-instance-method","html_id":"get(path:String)-instance-method","name":"get","doc":null,"summary":null,"abstract":false,"args":[{"name":"path","doc":null,"default_value":"","external_name":"path","restriction":"String"}],"args_string":"(path : String)","source_link":"https://github.com/DFabric/dppm/blob/4a1bc37bc6872377dbc36759a4d46e84ec35bbb5/src/config/format.cr#L2","def":{"name":"get","args":[{"name":"path","doc":null,"default_value":"","external_name":"path","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"get(to_array(path))"}},{"id":"set(path:String,value)-instance-method","html_id":"set(path:String,value)-instance-method","name":"set","doc":null,"summary":null,"abstract":false,"args":[{"name":"path","doc":null,"default_value":"","external_name":"path","restriction":"String"},{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":""}],"args_string":"(path : String, value)","source_link":"https://github.com/DFabric/dppm/blob/4a1bc37bc6872377dbc36759a4d46e84ec35bbb5/src/config/format.cr#L6","def":{"name":"set","args":[{"name":"path","doc":null,"default_value":"","external_name":"path","restriction":"String"},{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"set(to_array(path), value)"}}],"macros":[],"types":[]},{"html_id":"dppm/Config/INI","path":"Config/INI.html","kind":"struct","full_name":"Config::INI","name":"INI","abstract":false,"superclass":{"html_id":"dppm/Struct","kind":"struct","full_name":"Struct","name":"Struct"},"ancestors":[{"html_id":"dppm/Config/Format","kind":"module","full_name":"Config::Format","name":"Format"},{"html_id":"dppm/Config/INI/Helper","kind":"module","full_name":"Config::INI::Helper","name":"Helper"},{"html_id":"dppm/Struct","kind":"struct","full_name":"Struct","name":"Struct"},{"html_id":"dppm/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"dppm/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/config/ini.cr","line_number":4,"url":"https://github.com/DFabric/dppm/blob/4a1bc37bc6872377dbc36759a4d46e84ec35bbb5/src/config/ini.cr#L4"}],"repository_name":"dppm","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[{"html_id":"dppm/Config/Format","kind":"module","full_name":"Config::Format","name":"Format"},{"html_id":"dppm/Config/INI/Helper","kind":"module","full_name":"Config::INI::Helper","name":"Helper"}],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"dppm/Config","kind":"module","full_name":"Config","name":"Config"},"doc":null,"summary":null,"class_methods":[],"constructors":[{"id":"new(data:Hash(String,Hash(String,String)))-class-method","html_id":"new(data:Hash(String,Hash(String,String)))-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"data","doc":null,"default_value":"","external_name":"data","restriction":"Hash(String, Hash(String, String))"}],"args_string":"(data : Hash(String, Hash(String, String)))","source_link":"https://github.com/DFabric/dppm/blob/4a1bc37bc6872377dbc36759a4d46e84ec35bbb5/src/config/ini.cr#L29","def":{"name":"new","args":[{"name":"data","doc":null,"default_value":"","external_name":"data","restriction":"Hash(String, Hash(String, String))"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(data)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}},{"id":"new(content:String)-class-method","html_id":"new(content:String)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"content","doc":null,"default_value":"","external_name":"content","restriction":"String"}],"args_string":"(content : String)","source_link":"https://github.com/DFabric/dppm/blob/4a1bc37bc6872377dbc36759a4d46e84ec35bbb5/src/config/ini.cr#L32","def":{"name":"new","args":[{"name":"content","doc":null,"default_value":"","external_name":"content","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"new(::INI.parse(content))"}}],"instance_methods":[{"id":"build:String-instance-method","html_id":"build:String-instance-method","name":"build","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : String","source_link":"https://github.com/DFabric/dppm/blob/4a1bc37bc6872377dbc36759a4d46e84ec35bbb5/src/config/ini.cr#L50","def":{"name":"build","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"String","visibility":"Public","body":"::INI.build(@data, true)"}},{"id":"data:Hash(String,Hash(String,String))-instance-method","html_id":"data:Hash(String,Hash(String,String))-instance-method","name":"data","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Hash(String, Hash(String, String))","source_link":"https://github.com/DFabric/dppm/blob/4a1bc37bc6872377dbc36759a4d46e84ec35bbb5/src/config/ini.cr#L27","def":{"name":"data","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Hash(String, Hash(String, String))","visibility":"Public","body":"@data"}},{"id":"get(path:Array)-instance-method","html_id":"get(path:Array)-instance-method","name":"get","doc":null,"summary":null,"abstract":false,"args":[{"name":"path","doc":null,"default_value":"","external_name":"path","restriction":"Array"}],"args_string":"(path : Array)","source_link":"https://github.com/DFabric/dppm/blob/4a1bc37bc6872377dbc36759a4d46e84ec35bbb5/src/config/ini.cr#L36","def":{"name":"get","args":[{"name":"path","doc":null,"default_value":"","external_name":"path","restriction":"Array"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"case key_path = ini_key_path(path)\nwhen String\n  @data[key_path]?\nelse\n  @data[key_path[0]]?.try(&.[]?(key_path[1]))\nend"}},{"id":"set(path:Array,value)-instance-method","html_id":"set(path:Array,value)-instance-method","name":"set","doc":null,"summary":null,"abstract":false,"args":[{"name":"path","doc":null,"default_value":"","external_name":"path","restriction":"Array"},{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":""}],"args_string":"(path : Array, value)","source_link":"https://github.com/DFabric/dppm/blob/4a1bc37bc6872377dbc36759a4d46e84ec35bbb5/src/config/ini.cr#L43","def":{"name":"set","args":[{"name":"path","doc":null,"default_value":"","external_name":"path","restriction":"Array"},{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"case key_path = ini_key_path(path)\nwhen String\n  @data[\"\"][key_path] = value.to_s\nelse\n  @data[key_path[0]][key_path[1]] = value.to_s\nend"}}],"macros":[],"types":[{"html_id":"dppm/Config/INI/Helper","path":"Config/INI/Helper.html","kind":"module","full_name":"Config::INI::Helper","name":"Helper","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"src/config/ini.cr","line_number":5,"url":"https://github.com/DFabric/dppm/blob/4a1bc37bc6872377dbc36759a4d46e84ec35bbb5/src/config/ini.cr#L5"}],"repository_name":"dppm","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[{"html_id":"dppm/Config/INI","kind":"struct","full_name":"Config::INI","name":"INI"},{"html_id":"dppm/Config/TOML","kind":"struct","full_name":"Config::TOML","name":"TOML"}],"namespace":{"html_id":"dppm/Config/INI","kind":"struct","full_name":"Config::INI","name":"INI"},"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[{"id":"del(path:Array)-instance-method","html_id":"del(path:Array)-instance-method","name":"del","doc":null,"summary":null,"abstract":false,"args":[{"name":"path","doc":null,"default_value":"","external_name":"path","restriction":"Array"}],"args_string":"(path : Array)","source_link":"https://github.com/DFabric/dppm/blob/4a1bc37bc6872377dbc36759a4d46e84ec35bbb5/src/config/ini.cr#L17","def":{"name":"del","args":[{"name":"path","doc":null,"default_value":"","external_name":"path","restriction":"Array"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"case key_path = ini_key_path(path)\nwhen String\n  @data.delete(key_path)\nelse\n  @data[key_path[0]].delete(key_path[1])\nend"}}],"macros":[],"types":[]}]},{"html_id":"dppm/Config/JSON","path":"Config/JSON.html","kind":"struct","full_name":"Config::JSON","name":"JSON","abstract":false,"superclass":{"html_id":"dppm/Struct","kind":"struct","full_name":"Struct","name":"Struct"},"ancestors":[{"html_id":"dppm/Config/Format","kind":"module","full_name":"Config::Format","name":"Format"},{"html_id":"dppm/Struct","kind":"struct","full_name":"Struct","name":"Struct"},{"html_id":"dppm/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"dppm/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/config/json.cr","line_number":4,"url":"https://github.com/DFabric/dppm/blob/4a1bc37bc6872377dbc36759a4d46e84ec35bbb5/src/config/json.cr#L4"}],"repository_name":"dppm","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[{"html_id":"dppm/Config/Format","kind":"module","full_name":"Config::Format","name":"Format"}],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"dppm/Config","kind":"module","full_name":"Config","name":"Config"},"doc":null,"summary":null,"class_methods":[],"constructors":[{"id":"new(data:::JSON::Any)-class-method","html_id":"new(data:::JSON::Any)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"data","doc":null,"default_value":"","external_name":"data","restriction":"::JSON::Any"}],"args_string":"(data : ::JSON::Any)","source_link":"https://github.com/DFabric/dppm/blob/4a1bc37bc6872377dbc36759a4d46e84ec35bbb5/src/config/json.cr#L8","def":{"name":"new","args":[{"name":"data","doc":null,"default_value":"","external_name":"data","restriction":"::JSON::Any"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(data)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}},{"id":"new(content:String)-class-method","html_id":"new(content:String)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"content","doc":null,"default_value":"","external_name":"content","restriction":"String"}],"args_string":"(content : String)","source_link":"https://github.com/DFabric/dppm/blob/4a1bc37bc6872377dbc36759a4d46e84ec35bbb5/src/config/json.cr#L11","def":{"name":"new","args":[{"name":"content","doc":null,"default_value":"","external_name":"content","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"new(::JSON.parse(content))"}}],"instance_methods":[{"id":"build:String-instance-method","html_id":"build:String-instance-method","name":"build","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : String","source_link":"https://github.com/DFabric/dppm/blob/4a1bc37bc6872377dbc36759a4d46e84ec35bbb5/src/config/json.cr#L32","def":{"name":"build","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"String","visibility":"Public","body":"@data.to_pretty_json"}},{"id":"data:::JSON::Any-instance-method","html_id":"data:::JSON::Any-instance-method","name":"data","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : ::JSON::Any","source_link":"https://github.com/DFabric/dppm/blob/4a1bc37bc6872377dbc36759a4d46e84ec35bbb5/src/config/json.cr#L6","def":{"name":"data","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"::JSON::Any","visibility":"Public","body":"@data"}},{"id":"del(path:Array)-instance-method","html_id":"del(path:Array)-instance-method","name":"del","doc":null,"summary":null,"abstract":false,"args":[{"name":"path","doc":null,"default_value":"","external_name":"path","restriction":"Array"}],"args_string":"(path : Array)","source_link":"https://github.com/DFabric/dppm/blob/4a1bc37bc6872377dbc36759a4d46e84ec35bbb5/src/config/json.cr#L28","def":{"name":"del","args":[{"name":"path","doc":null,"default_value":"","external_name":"path","restriction":"Array"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@data.delete(path)"}},{"id":"get(path:Array)-instance-method","html_id":"get(path:Array)-instance-method","name":"get","doc":null,"summary":null,"abstract":false,"args":[{"name":"path","doc":null,"default_value":"","external_name":"path","restriction":"Array"}],"args_string":"(path : Array)","source_link":"https://github.com/DFabric/dppm/blob/4a1bc37bc6872377dbc36759a4d46e84ec35bbb5/src/config/json.cr#L15","def":{"name":"get","args":[{"name":"path","doc":null,"default_value":"","external_name":"path","restriction":"Array"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@data[path]?"}},{"id":"set(path:Array,value)-instance-method","html_id":"set(path:Array,value)-instance-method","name":"set","doc":null,"summary":null,"abstract":false,"args":[{"name":"path","doc":null,"default_value":"","external_name":"path","restriction":"Array"},{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":""}],"args_string":"(path : Array, value)","source_link":"https://github.com/DFabric/dppm/blob/4a1bc37bc6872377dbc36759a4d46e84ec35bbb5/src/config/json.cr#L19","def":{"name":"set","args":[{"name":"path","doc":null,"default_value":"","external_name":"path","restriction":"Array"},{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"value = to_type(value)\n@data[path] = ::JSON::Any.new(case value\nwhen Hash(String, String)\n  Hash(String, ::JSON::Any).new\nwhen Array(String)\n  Array(::JSON::Any).new\nelse\n  value\nend)\n"}}],"macros":[],"types":[]},{"html_id":"dppm/Config/TOML","path":"Config/TOML.html","kind":"struct","full_name":"Config::TOML","name":"TOML","abstract":false,"superclass":{"html_id":"dppm/Struct","kind":"struct","full_name":"Struct","name":"Struct"},"ancestors":[{"html_id":"dppm/Config/INI/Helper","kind":"module","full_name":"Config::INI::Helper","name":"Helper"},{"html_id":"dppm/Config/Format","kind":"module","full_name":"Config::Format","name":"Format"},{"html_id":"dppm/Struct","kind":"struct","full_name":"Struct","name":"Struct"},{"html_id":"dppm/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"dppm/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/config/toml.cr","line_number":5,"url":"https://github.com/DFabric/dppm/blob/4a1bc37bc6872377dbc36759a4d46e84ec35bbb5/src/config/toml.cr#L5"}],"repository_name":"dppm","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[{"html_id":"dppm/Config/Format","kind":"module","full_name":"Config::Format","name":"Format"},{"html_id":"dppm/Config/INI/Helper","kind":"module","full_name":"Config::INI::Helper","name":"Helper"}],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"dppm/Config","kind":"module","full_name":"Config","name":"Config"},"doc":"Basic ugly 2-level toml parser for TiDB configuration","summary":"<p>Basic ugly 2-level toml parser for TiDB configuration</p>","class_methods":[],"constructors":[{"id":"new(data:Hash(String,Hash(String,String)))-class-method","html_id":"new(data:Hash(String,Hash(String,String)))-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"data","doc":null,"default_value":"","external_name":"data","restriction":"Hash(String, Hash(String, String))"}],"args_string":"(data : Hash(String, Hash(String, String)))","source_link":"https://github.com/DFabric/dppm/blob/4a1bc37bc6872377dbc36759a4d46e84ec35bbb5/src/config/toml.cr#L10","def":{"name":"new","args":[{"name":"data","doc":null,"default_value":"","external_name":"data","restriction":"Hash(String, Hash(String, String))"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(data)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}},{"id":"new(content:String)-class-method","html_id":"new(content:String)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"content","doc":null,"default_value":"","external_name":"content","restriction":"String"}],"args_string":"(content : String)","source_link":"https://github.com/DFabric/dppm/blob/4a1bc37bc6872377dbc36759a4d46e84ec35bbb5/src/config/toml.cr#L13","def":{"name":"new","args":[{"name":"content","doc":null,"default_value":"","external_name":"content","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"new(::INI.parse(content))"}}],"instance_methods":[{"id":"build:String-instance-method","html_id":"build:String-instance-method","name":"build","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : String","source_link":"https://github.com/DFabric/dppm/blob/4a1bc37bc6872377dbc36759a4d46e84ec35bbb5/src/config/toml.cr#L54","def":{"name":"build","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"String","visibility":"Public","body":"(::INI.build(@data, space: true)).lchop(\"[]\\n\")"}},{"id":"data:Hash(String,Hash(String,String))-instance-method","html_id":"data:Hash(String,Hash(String,String))-instance-method","name":"data","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Hash(String, Hash(String, String))","source_link":"https://github.com/DFabric/dppm/blob/4a1bc37bc6872377dbc36759a4d46e84ec35bbb5/src/config/toml.cr#L8","def":{"name":"data","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Hash(String, Hash(String, String))","visibility":"Public","body":"@data"}},{"id":"get(path:Array)-instance-method","html_id":"get(path:Array)-instance-method","name":"get","doc":null,"summary":null,"abstract":false,"args":[{"name":"path","doc":null,"default_value":"","external_name":"path","restriction":"Array"}],"args_string":"(path : Array)","source_link":"https://github.com/DFabric/dppm/blob/4a1bc37bc6872377dbc36759a4d46e84ec35bbb5/src/config/toml.cr#L17","def":{"name":"get","args":[{"name":"path","doc":null,"default_value":"","external_name":"path","restriction":"Array"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"case key_path = ini_key_path(path)\nwhen String\n  @data[key_path]?\nelse\n  if section = @data[key_path[0]]?\n    internal_to_type(section[key_path[1]]?)\n  end\nend"}},{"id":"set(path:Array,value)-instance-method","html_id":"set(path:Array,value)-instance-method","name":"set","doc":null,"summary":null,"abstract":false,"args":[{"name":"path","doc":null,"default_value":"","external_name":"path","restriction":"Array"},{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":""}],"args_string":"(path : Array, value)","source_link":"https://github.com/DFabric/dppm/blob/4a1bc37bc6872377dbc36759a4d46e84ec35bbb5/src/config/toml.cr#L27","def":{"name":"set","args":[{"name":"path","doc":null,"default_value":"","external_name":"path","restriction":"Array"},{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"value = to_type(value)\nif value.is_a?(String)\n  value = ('\"' + value) + '\"'\nend\ncase key_path = ini_key_path(path)\nwhen String\n  @data[\"\"][key_path] = value.to_s\nelse\n  @data[key_path[0]][key_path[1]] = value.to_s\nend\n"}}],"macros":[],"types":[]},{"html_id":"dppm/Config/Types","path":"Config/Types.html","kind":"alias","full_name":"Config::Types","name":"Types","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"src/config.cr","line_number":6,"url":"https://github.com/DFabric/dppm/blob/4a1bc37bc6872377dbc36759a4d46e84ec35bbb5/src/config.cr#L6"}],"repository_name":"dppm","program":false,"enum":false,"alias":true,"aliased":"(Config::CON | Config::INI | Config::JSON | Config::TOML | Config::YAML)","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"dppm/Config","kind":"module","full_name":"Config","name":"Config"},"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[]},{"html_id":"dppm/Config/YAML","path":"Config/YAML.html","kind":"struct","full_name":"Config::YAML","name":"YAML","abstract":false,"superclass":{"html_id":"dppm/Struct","kind":"struct","full_name":"Struct","name":"Struct"},"ancestors":[{"html_id":"dppm/Config/Format","kind":"module","full_name":"Config::Format","name":"Format"},{"html_id":"dppm/Struct","kind":"struct","full_name":"Struct","name":"Struct"},{"html_id":"dppm/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"dppm/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/config/yaml.cr","line_number":4,"url":"https://github.com/DFabric/dppm/blob/4a1bc37bc6872377dbc36759a4d46e84ec35bbb5/src/config/yaml.cr#L4"}],"repository_name":"dppm","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[{"html_id":"dppm/Config/Format","kind":"module","full_name":"Config::Format","name":"Format"}],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"dppm/Config","kind":"module","full_name":"Config","name":"Config"},"doc":null,"summary":null,"class_methods":[],"constructors":[{"id":"new(data:::YAML::Any)-class-method","html_id":"new(data:::YAML::Any)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"data","doc":null,"default_value":"","external_name":"data","restriction":"::YAML::Any"}],"args_string":"(data : ::YAML::Any)","source_link":"https://github.com/DFabric/dppm/blob/4a1bc37bc6872377dbc36759a4d46e84ec35bbb5/src/config/yaml.cr#L8","def":{"name":"new","args":[{"name":"data","doc":null,"default_value":"","external_name":"data","restriction":"::YAML::Any"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(data)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}},{"id":"new(content:String)-class-method","html_id":"new(content:String)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"content","doc":null,"default_value":"","external_name":"content","restriction":"String"}],"args_string":"(content : String)","source_link":"https://github.com/DFabric/dppm/blob/4a1bc37bc6872377dbc36759a4d46e84ec35bbb5/src/config/yaml.cr#L11","def":{"name":"new","args":[{"name":"content","doc":null,"default_value":"","external_name":"content","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"new(::YAML.parse(content))"}}],"instance_methods":[{"id":"build:String-instance-method","html_id":"build:String-instance-method","name":"build","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : String","source_link":"https://github.com/DFabric/dppm/blob/4a1bc37bc6872377dbc36759a4d46e84ec35bbb5/src/config/yaml.cr#L32","def":{"name":"build","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"String","visibility":"Public","body":"@data.to_yaml"}},{"id":"data:::YAML::Any-instance-method","html_id":"data:::YAML::Any-instance-method","name":"data","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : ::YAML::Any","source_link":"https://github.com/DFabric/dppm/blob/4a1bc37bc6872377dbc36759a4d46e84ec35bbb5/src/config/yaml.cr#L6","def":{"name":"data","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"::YAML::Any","visibility":"Public","body":"@data"}},{"id":"del(path:Array)-instance-method","html_id":"del(path:Array)-instance-method","name":"del","doc":null,"summary":null,"abstract":false,"args":[{"name":"path","doc":null,"default_value":"","external_name":"path","restriction":"Array"}],"args_string":"(path : Array)","source_link":"https://github.com/DFabric/dppm/blob/4a1bc37bc6872377dbc36759a4d46e84ec35bbb5/src/config/yaml.cr#L28","def":{"name":"del","args":[{"name":"path","doc":null,"default_value":"","external_name":"path","restriction":"Array"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@data.delete(path)"}},{"id":"get(path:Array)-instance-method","html_id":"get(path:Array)-instance-method","name":"get","doc":null,"summary":null,"abstract":false,"args":[{"name":"path","doc":null,"default_value":"","external_name":"path","restriction":"Array"}],"args_string":"(path : Array)","source_link":"https://github.com/DFabric/dppm/blob/4a1bc37bc6872377dbc36759a4d46e84ec35bbb5/src/config/yaml.cr#L15","def":{"name":"get","args":[{"name":"path","doc":null,"default_value":"","external_name":"path","restriction":"Array"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@data[path]?"}},{"id":"set(path:Array,value)-instance-method","html_id":"set(path:Array,value)-instance-method","name":"set","doc":null,"summary":null,"abstract":false,"args":[{"name":"path","doc":null,"default_value":"","external_name":"path","restriction":"Array"},{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":""}],"args_string":"(path : Array, value)","source_link":"https://github.com/DFabric/dppm/blob/4a1bc37bc6872377dbc36759a4d46e84ec35bbb5/src/config/yaml.cr#L19","def":{"name":"set","args":[{"name":"path","doc":null,"default_value":"","external_name":"path","restriction":"Array"},{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"value = to_type(value)\n@data[path] = ::YAML::Any.new(case value\nwhen Hash(String, String)\n  Hash(::YAML::Any, ::YAML::Any).new\nwhen Array(String)\n  Array(::YAML::Any).new\nelse\n  value\nend)\n"}}],"macros":[],"types":[]}]},{"html_id":"dppm/DPPM","path":"DPPM.html","kind":"module","full_name":"DPPM","name":"DPPM","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"src/dppm.cr","line_number":1,"url":"https://github.com/DFabric/dppm/blob/4a1bc37bc6872377dbc36759a4d46e84ec35bbb5/src/dppm.cr#L1"}],"repository_name":"dppm","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[{"html_id":"dppm/DPPM","kind":"module","full_name":"DPPM","name":"DPPM"}],"subclasses":[],"including_types":[],"namespace":null,"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[{"id":"build_commit:String-instance-method","html_id":"build_commit:String-instance-method","name":"build_commit","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : String","source_link":"https://github.com/DFabric/dppm/blob/4a1bc37bc6872377dbc36759a4d46e84ec35bbb5/src/dppm.cr#L11","def":{"name":"build_commit","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"String","visibility":"Public","body":"{{ (`git rev-parse --short HEAD`).stringify.chomp }}"}},{"id":"build_date:String-instance-method","html_id":"build_date:String-instance-method","name":"build_date","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : String","source_link":"https://github.com/DFabric/dppm/blob/4a1bc37bc6872377dbc36759a4d46e84ec35bbb5/src/dppm.cr#L7","def":{"name":"build_date","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"String","visibility":"Public","body":"{{ (`date --utc -Iminutes`).stringify.chomp }}"}},{"id":"version:String-instance-method","html_id":"version:String-instance-method","name":"version","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : String","source_link":"https://github.com/DFabric/dppm/blob/4a1bc37bc6872377dbc36759a4d46e84ec35bbb5/src/dppm.cr#L15","def":{"name":"version","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"String","visibility":"Public","body":"{{ ((`git show -s --format=%ci`).split(' '))[0].gsub(/-/, \".\") }}"}}],"macros":[],"types":[{"html_id":"dppm/DPPM/CLI","path":"DPPM/CLI.html","kind":"module","full_name":"DPPM::CLI","name":"CLI","abstract":false,"superclass":null,"ancestors":[{"html_id":"dppm/Clicr","kind":"module","full_name":"Clicr","name":"Clicr"}],"locations":[{"filename":"src/cli.cr","line_number":5,"url":"https://github.com/DFabric/dppm/blob/4a1bc37bc6872377dbc36759a4d46e84ec35bbb5/src/cli.cr#L5"},{"filename":"src/cli/app.cr","line_number":1,"url":"https://github.com/DFabric/dppm/blob/4a1bc37bc6872377dbc36759a4d46e84ec35bbb5/src/cli/app.cr#L1"}],"repository_name":"dppm","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[{"html_id":"dppm/Clicr","kind":"module","full_name":"Clicr","name":"Clicr"}],"extended_modules":[{"html_id":"dppm/DPPM/CLI","kind":"module","full_name":"DPPM::CLI","name":"CLI"}],"subclasses":[],"including_types":[],"namespace":{"html_id":"dppm/DPPM","kind":"module","full_name":"DPPM","name":"DPPM"},"doc":null,"summary":null,"class_methods":[{"id":"internal_run(**additional_commands)-class-method","html_id":"internal_run(**additional_commands)-class-method","name":"internal_run","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"(**additional_commands)","source_link":"https://github.com/DFabric/dppm/blob/4a1bc37bc6872377dbc36759a4d46e84ec35bbb5/src/dppm_cli.cr#L3","def":{"name":"internal_run","args":[],"double_splat":{"name":"additional_commands","doc":null,"default_value":"","external_name":"additional_commands","restriction":""},"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"begin\n  Clicr.create(name: \"dppm\", info: \"The DPlatform Package Manager\", variables: {prefix: {info: \"Base path for dppm packages, sources and apps\", default: Prefix.default}, config: {info: \"Configuration file path\"}, source_name: {info: \"Name of the source to get packages and configuration\", default: Prefix.default_source_name}, source_path: {info: \"Source path/url of the packages and configurations (default in the config file)\"}}, options: {no_confirm: {short: 'y', info: \"No confirmations\"}}, commands: {app: {alias: 'a', info: \"Manage applications\", inherit: [\"config\", \"no_confirm\", \"prefix\", \"source_name\", \"source_path\"] of ::String, variables: {group: {info: \"Group namespace where installing applications\", default: Prefix.default_group}}, commands: {add: {alias: 'a', info: \"Add a new application (builds its missing dependencies)\", action: \"App.add\", arguments: [\"application\", \"custom_vars...\"] of ::String, inherit: [\"config\", \"group\", \"no_confirm\", \"prefix\", \"source_name\", \"source_path\"] of ::String, options: {contained: {short: 'c', info: \"No shared dependencies, copy instead of symlinks\"}, noservice: {short: 'n', info: \"Don't add a system service\"}, socket: {short: 's', info: \"Use of an UNIX socket instead of a port\"}}, variables: {database: {info: \"Application name of the database to use\"}, name: {info: \"Name of the application to install\"}, tag: {info: \"Package version's tag (e.g: latest)\"}, url: {info: \"URL address (like https://myapp.example.net or http://[::1]/myapp), usually used with a web server\"}, version: {info: \"Package version\"}, web_server: {info: \"Application name of the web server serving this application as a public website\"}}}, config: {alias: 'c', info: \"Manage application's configuration\", inherit: [\"group\", \"nopkg\", \"prefix\"] of ::String, options: {nopkg: {short: 'n', info: \"Don't use pkg file, directly use the application's configuration file\"}}, commands: {get: {info: \"Get a value. Single dot path `.` for all keys\", action: \"App.config_get\", arguments: [\"application\", \"path\"] of ::String, inherit: [\"group\", \"nopkg\", \"prefix\"] of ::String}, set: {info: \"Set a value\", action: \"App.config_set() && Logger.output.puts \\\"done\\\"\", arguments: [\"application\", \"path\", \"value\"] of ::String, inherit: [\"group\", \"nopkg\", \"prefix\"] of ::String}, del: {info: \"Delete a path\", action: \"App.config_del() && Logger.output.puts \\\"done\\\"\", arguments: [\"application\", \"path\"] of ::String, inherit: [\"group\", \"nopkg\", \"prefix\"] of ::String}}}, delete: {alias: 'd', info: \"Delete an added application\", action: \"App.delete\", arguments: [\"application\"] of ::String, inherit: [\"group\", \"no_confirm\", \"prefix\"] of ::String, options: {keep_user_group: {short: 'k', info: \"Don't delete the system user and groupof the application\"}, preserve_database: {short: 'p', info: \"Preserve the database used by the application from deletion\"}}}, exec: {alias: 'e', info: \"Execute an application in the foreground\", action: \"App.exec\", arguments: [\"application\"] of ::String, inherit: [\"prefix\", \"group\"] of ::String}, query: {info: \"Get information of an application - `.` for the whole document\", action: \"Logger.output.puts App.info\", arguments: [\"application\", \"path\"] of ::String, inherit: [\"prefix\", \"group\"] of ::String}, install: {alias: 'i', info: \"Install DPPM to a new defined prefix\", action: \"install_dppm\", inherit: [\"no_confirm\", \"config\", \"prefix\", \"group\", \"source_name\", \"source_path\"] of ::String}, list: {alias: 'l', info: \"List applications\", action: \"List.app\", inherit: [\"prefix\"] of ::String}, logs: {alias: 'L', info: \"Read logs of the application's service - list log names if empty\", action: \"App.logs() { |log| Logger.output << log }\", arguments: [\"application\", \"stream_names...\"] of ::String, inherit: [\"prefix\", \"group\"] of ::String, options: {follow: {short: 'f', info: \"Follow new lines, starting to the last 10 lines by default\"}}, variables: {lines: {info: \"Number of last lines to print. All lines when no set\"}}}, uninstall: {alias: 'U', info: \"Uninstall DPPM with all its applications\", action: \"uninstall_dppm\", inherit: [\"config\", \"group\", \"no_confirm\", \"prefix\", \"source_name\", \"source_path\"] of ::String}, upgrade: {alias: 'u', info: \"Upgrade the application to a version\", action: \"App.upgrade\", arguments: [\"application\", \"custom_vars...\"] of ::String, inherit: [\"config\", \"group\", \"no_confirm\", \"prefix\", \"source_name\", \"source_path\"] of ::String, options: {contained: {short: 'c', info: \"No shared dependencies, copy instead of symlinks\"}}, variables: {tag: {info: \"Package version's tag (e.g: latest)\"}, version: {info: \"Package version\"}}}, version: {alias: 'v', info: \"Returns application's version\", action: \"Logger.output.puts App.version\", arguments: [\"application\"] of ::String, inherit: [\"group\", \"prefix\"] of ::String}}}, list: {alias: 'l', info: \"List all applications, packages and sources\", action: \"List.all\", inherit: [\"group\", \"prefix\", \"source_name\", \"source_path\"] of ::String}, package: {alias: 'p', info: \"Manage built packages\", inherit: [\"config\", \"no_confirm\", \"prefix\", \"source_name\", \"source_path\"] of ::String, variables: {tag: {info: \"Package version's tag (e.g: latest)\"}, version: {info: \"Package version\"}}, commands: {build: {alias: 'b', info: \"Build a new a package\", action: \"Pkg.build\", arguments: [\"package\", \"custom_vars...\"] of ::String, inherit: [\"config\", \"no_confirm\", \"prefix\", \"source_name\", \"source_path\", \"tag\", \"version\"] of ::String}, clean: {alias: 'C', info: \"Clean unused built packages by the applications\", action: \"Pkg.clean_unused_packages\", inherit: [\"no_confirm\", \"prefix\", \"source_name\"] of ::String}, delete: {alias: 'd', info: \"Delete a built package\", action: \"Pkg.delete\", arguments: [\"package\"] of ::String, inherit: [\"no_confirm\", \"prefix\", \"source_name\", \"version\"] of ::String}, info: {info: \"Get information of a package - `.` for the whole document.\", action: \"Logger.output.puts Pkg.info\", arguments: [\"package\", \"path\"] of ::String, inherit: [\"prefix\", \"source_name\"] of ::String}, list: {alias: 'l', info: \"List packages\", action: \"List.pkg\", inherit: [\"prefix\"] of ::String}}}, service: {alias: 'S', info: \"Manage application services\", inherit: [\"debug\", \"prefix\"] of ::String, commands: {boot: {info: \"Auto-start the service at boot\", action: \"Service.boot\", arguments: [\"service\", \"state\"] of ::String}, reload: {info: \"Reload the service\", action: \"Service.new().reload || exit 1\", arguments: [\"service\"] of ::String}, restart: {info: \"Restart the service\", action: \"Service.new().restart || exit 1\", arguments: [\"service\"] of ::String}, start: {info: \"Start the service\", action: \"Service.new().start || exit 1\", arguments: [\"service\"] of ::String}, status: {info: \"Status for specified services or all services if none set\", action: \"Service.status\", arguments: [\"services...\"] of ::String, inherit: [\"prefix\"] of ::String, options: {all: {short: 'a', info: \"list all system services\"}, noboot: {info: \"don't include booting status\"}, norun: {info: \"don't include running status\"}}}, stop: {info: \"Stop the service\", arguments: [\"service\"] of ::String, action: \"Service.new().stop || exit 1\"}}}, source: {alias: 's', info: \"Manage packages sources\", inherit: [\"config\", \"no_confirm\", \"prefix\", \"source_name\", \"source_path\"] of ::String, commands: {list: {alias: 'l', info: \"List source packages\", action: \"List.src\", inherit: [\"prefix\"] of ::String}, info: {info: \"Get information of a source package - `.` for the whole document\", action: \"Logger.output.puts Src.info\", arguments: [\"package\", \"path\"] of ::String, inherit: [\"prefix\", \"source_name\"] of ::String}, update: {alias: 'u', info: \"Check for packages source updates. `-y` to force update\", action: \"Src.update\", inherit: [\"config\", \"no_confirm\", \"prefix\", \"source_name\", \"source_path\"] of ::String}}}, version: {alias: 'v', info: \"Version with general system information\", action: \"version\"}})\nrescue ex : Help\n  Logger.output.puts(ex)\nrescue ex : ArgumentRequired | UnknownCommand | UnknownOption | UnknownVariable\n  abort(ex)\nrescue ex\n  if ENV[\"DEBUG\"]?\n    ex.inspect_with_backtrace(Logger.error)\n  else\n    Logger.error(ex)\n  end\n  exit(1)\nend"}}],"constructors":[],"instance_methods":[{"id":"confirm_prompt(&)-instance-method","html_id":"confirm_prompt(&)-instance-method","name":"confirm_prompt","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"(&)","source_link":"https://github.com/DFabric/dppm/blob/4a1bc37bc6872377dbc36759a4d46e84ec35bbb5/src/cli.cr#L442","def":{"name":"confirm_prompt","args":[],"double_splat":null,"splat_index":null,"yields":0,"block_arg":null,"return_type":"","visibility":"Public","body":"Logger.output.puts(\"\\nContinue? [N/y]\")\ncase gets\nwhen \"Y\", \"y\"\n  true\nelse\n  yield\nend\n"}},{"id":"confirm_prompt-instance-method","html_id":"confirm_prompt-instance-method","name":"confirm_prompt","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/DFabric/dppm/blob/4a1bc37bc6872377dbc36759a4d46e84ec35bbb5/src/cli.cr#L450","def":{"name":"confirm_prompt","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"confirm_prompt do\n  abort(\"cancelled.\")\nend"}},{"id":"info(any:CON::Any,path:String):CON::Any?-instance-method","html_id":"info(any:CON::Any,path:String):CON::Any?-instance-method","name":"info","doc":null,"summary":null,"abstract":false,"args":[{"name":"any","doc":null,"default_value":"","external_name":"any","restriction":"CON::Any"},{"name":"path","doc":null,"default_value":"","external_name":"path","restriction":"String"}],"args_string":"(any : CON::Any, path : String) : CON::Any?","source_link":"https://github.com/DFabric/dppm/blob/4a1bc37bc6872377dbc36759a4d46e84ec35bbb5/src/cli.cr#L376","def":{"name":"info","args":[{"name":"any","doc":null,"default_value":"","external_name":"any","restriction":"CON::Any"},{"name":"path","doc":null,"default_value":"","external_name":"path","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"CON::Any | ::Nil","visibility":"Public","body":"case path\nwhen \".\"\n  any\nelse\n  (Config::CON.new(any)).get(path)\nend"}},{"id":"install_dppm(no_confirm,config,prefix,group,source_name,source_path)-instance-method","html_id":"install_dppm(no_confirm,config,prefix,group,source_name,source_path)-instance-method","name":"install_dppm","doc":null,"summary":null,"abstract":false,"args":[{"name":"no_confirm","doc":null,"default_value":"","external_name":"no_confirm","restriction":""},{"name":"config","doc":null,"default_value":"","external_name":"config","restriction":""},{"name":"prefix","doc":null,"default_value":"","external_name":"prefix","restriction":""},{"name":"group","doc":null,"default_value":"","external_name":"group","restriction":""},{"name":"source_name","doc":null,"default_value":"","external_name":"source_name","restriction":""},{"name":"source_path","doc":null,"default_value":"","external_name":"source_path","restriction":""}],"args_string":"(no_confirm, config, prefix, group, source_name, source_path)","source_link":"https://github.com/DFabric/dppm/blob/4a1bc37bc6872377dbc36759a4d46e84ec35bbb5/src/cli.cr#L383","def":{"name":"install_dppm","args":[{"name":"no_confirm","doc":null,"default_value":"","external_name":"no_confirm","restriction":""},{"name":"config","doc":null,"default_value":"","external_name":"config","restriction":""},{"name":"prefix","doc":null,"default_value":"","external_name":"prefix","restriction":""},{"name":"group","doc":null,"default_value":"","external_name":"group","restriction":""},{"name":"source_name","doc":null,"default_value":"","external_name":"source_name","restriction":""},{"name":"source_path","doc":null,"default_value":"","external_name":"source_path","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"root_prefix = Prefix.new(prefix, group: group, source_name: source_name, source_path: source_path)\nif root_prefix.dppm.exists?\n  raise(\"DPPM already installed: #{root_prefix.path}\")\nend\nroot_prefix.create\nbegin\n  root_prefix.update\n  dppm_package = root_prefix.new_pkg(\"dppm\", DPPM.version)\n  dppm_package.copy_src_to_path\n  Dir.mkdir_p(dppm_package.app_bin_path.to_s)\n  dppm_bin_path = dppm_package.app_bin_path / \"dppm\"\n  FileUtils.cp(PROGRAM_NAME, dppm_bin_path.to_s)\n  app = dppm_package.new_app(\"dppm\")\n  app.add(vars: {\"uid\" => Process.uid.to_s, \"gid\" => Process.gid.to_s}, shared: true, confirmation: !no_confirm, add_service: !(!Host.service_available?)) do\n    no_confirm || CLI.confirm_prompt do\n      raise(\"DPPM installation canceled.\")\n    end\n  end\nrescue ex\n  root_prefix.delete\n  raise(Error.new(\"DPPM installation failed, #{root_prefix.path} deleted\", ex))\nend\nif Process.root?\n  app.pkg?.try(&.create_global_bin_symlinks(force: true))\nend\nLogger.info(\"DPPM installation complete\", \"you can now manage applications with the `#{Process.root? ? \"dppm\" : dppm_bin_path}` command\")\n"}},{"id":"uninstall_dppm(no_confirm,config,prefix,group,source_name,source_path)-instance-method","html_id":"uninstall_dppm(no_confirm,config,prefix,group,source_name,source_path)-instance-method","name":"uninstall_dppm","doc":null,"summary":null,"abstract":false,"args":[{"name":"no_confirm","doc":null,"default_value":"","external_name":"no_confirm","restriction":""},{"name":"config","doc":null,"default_value":"","external_name":"config","restriction":""},{"name":"prefix","doc":null,"default_value":"","external_name":"prefix","restriction":""},{"name":"group","doc":null,"default_value":"","external_name":"group","restriction":""},{"name":"source_name","doc":null,"default_value":"","external_name":"source_name","restriction":""},{"name":"source_path","doc":null,"default_value":"","external_name":"source_path","restriction":""}],"args_string":"(no_confirm, config, prefix, group, source_name, source_path)","source_link":"https://github.com/DFabric/dppm/blob/4a1bc37bc6872377dbc36759a4d46e84ec35bbb5/src/cli.cr#L418","def":{"name":"uninstall_dppm","args":[{"name":"no_confirm","doc":null,"default_value":"","external_name":"no_confirm","restriction":""},{"name":"config","doc":null,"default_value":"","external_name":"config","restriction":""},{"name":"prefix","doc":null,"default_value":"","external_name":"prefix","restriction":""},{"name":"group","doc":null,"default_value":"","external_name":"group","restriction":""},{"name":"source_name","doc":null,"default_value":"","external_name":"source_name","restriction":""},{"name":"source_path","doc":null,"default_value":"","external_name":"source_path","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"root_prefix = Prefix.new(prefix, group: group, source_name: source_name, source_path: source_path)\nif !root_prefix.dppm.exists?\n  raise(\"DPPM not installed in #{root_prefix.path}\")\nend\nif !(File.writable?(root_prefix.path.to_s))\n  raise(\"DPPM path not removable - root permission needed #{root_prefix.path}\")\nend\nroot_prefix.each_app do |app|\n  app.delete(confirmation: !no_confirm, preserve_database: false, keep_user_group: false) do\n    if no_confirm || CLI.confirm_prompt\n      app.pkg?.try(&.delete_global_bin_symlinks)\n      true\n    end\n  end\nend\nif (apps = (Dir.children(root_prefix.app.to_s)).join(\", \")).empty?\n  root_prefix.delete\n  Logger.info(\"DPPM uninstallation complete\", root_prefix.path.to_s)\nelse\n  Logger.warn(\"DPPM uninstallation not complete, there are remaining applications\", apps)\nend\n"}},{"id":"version(**args)-instance-method","html_id":"version(**args)-instance-method","name":"version","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"(**args)","source_link":"https://github.com/DFabric/dppm/blob/4a1bc37bc6872377dbc36759a4d46e84ec35bbb5/src/cli.cr#L367","def":{"name":"version","args":[],"double_splat":{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""},"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"((Logger.output << \"DPPM version: \") << DPPM.version) << '\\n'\n((Logger.output << \"DPPM build commit: \") << DPPM.build_commit) << '\\n'\n((Logger.output << \"DPPM build date: \") << DPPM.build_date) << '\\n'\nHost.vars.each do |variable, value|\n  (((Logger.output << variable) << \": \") << value) << '\\n'\nend\n"}}],"macros":[{"id":"run(**additional_commands)-macro","html_id":"run(**additional_commands)-macro","name":"run","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"(**additional_commands)","source_link":"https://github.com/DFabric/dppm/blob/4a1bc37bc6872377dbc36759a4d46e84ec35bbb5/src/cli.cr#L9","def":{"name":"run","args":[],"double_splat":{"name":"additional_commands","doc":null,"default_value":"","external_name":"additional_commands","restriction":""},"splat_index":null,"block_arg":null,"visibility":"Public","body":"  def DPPM::CLI.internal_run(**additional_commands)\n    Clicr.create(\n      name: \"dppm\",\n      info: \"The DPlatform Package Manager\",\n      variables: \n{\n        prefix: \n{\n          info:    \"Base path for dppm packages, sources and apps\",\n          default: Prefix.default,\n        },\n        config: \n{\n          info: \"Configuration file path\",\n        },\n        source_name: \n{\n          info:    \"Name of the source to get packages and configuration\",\n          default: Prefix.default_source_name,\n        },\n        source_path: \n{\n          info: \"Source path/url of the packages and configurations (default in the config file)\",\n        },\n      },\n      options: \n{\n        no_confirm: \n{\n          short: 'y',\n          info:  \"No confirmations\",\n        },\n      },\n      commands: \n{\n        app: \n{\n          alias:    'a',\n          info:     \"Manage applications\",\n          inherit:   \n%\nw(config no_confirm prefix source_name source_path),\n          variables: \n{\n            group: \n{\n              info:    \"Group namespace where installing applications\",\n              default: Prefix.default_group,\n            },\n          },\n          commands: \n{\n            add: \n{\n              alias:     'a',\n              info:      \"Add a new application (builds its missing dependencies)\",\n              action:    \"App.add\",\n              arguments: \n%\nw(application custom_vars...),\n              inherit:   \n%\nw(config group no_confirm prefix source_name source_path),\n              options:   \n{\n                contained: \n{\n                  short: 'c',\n                  info:  \"No shared dependencies, copy instead of symlinks\",\n                },\n                noservice: \n{\n                  short: 'n',\n                  info:  \"Don't add a system service\",\n                },\n                socket: \n{\n                  short: 's',\n                  info:  \"Use of an UNIX socket instead of a port\",\n                },\n              },\n              variables: \n{\n                database: \n{\n                  info: \"Application name of the database to use\",\n                },\n                name: \n{\n                  info: \"Name of the application to install\",\n                },\n                tag: \n{\n                  info: \"Package version's tag (e.g: latest)\",\n                },\n                url: \n{\n                  info: \"URL address (like https://myapp.example.net or http://[::1]/myapp), usually used with a web server\",\n                },\n                version: \n{\n                  info: \"Package version\",\n                },\n                web_server: \n{\n                  info: \"Application name of the web server serving this application as a public website\",\n                },\n              },\n            },\n            config: \n{\n              alias:   'c',\n              info:    \"Manage application's configuration\",\n              inherit: \n%\nw(group nopkg prefix),\n              options: \n{\n                nopkg: \n{\n                  short: 'n',\n                  info:  \"Don't use pkg file, directly use the application's configuration file\",\n                },\n              },\n              commands: \n{\n                get: \n{\n                  info:      \"Get a value. Single dot path `.` for all keys\",\n                  action:    \"App.config_get\",\n                  arguments: \n%\nw(application path),\n                  inherit:   \n%\nw(group nopkg prefix),\n                },\n                set: \n{\n                  info:      \"Set a value\",\n                  action:    \n%\n(App.config_set() && Logger.output.puts \"done\"),\n                  arguments: \n%\nw(application path value),\n                  inherit:   \n%\nw(group nopkg prefix),\n                },\n                del: \n{\n                  info:      \"Delete a path\",\n                  action:    \n%\n(App.config_del() && Logger.output.puts \"done\"),\n                  arguments: \n%\nw(application path),\n                  inherit:   \n%\nw(group nopkg prefix),\n                },\n              },\n            },\n            delete: \n{\n              alias:     'd',\n              info:      \"Delete an added application\",\n              action:    \"App.delete\",\n              arguments: \n%\nw(application),\n              inherit:   \n%\nw(group no_confirm prefix),\n              options:   \n{\n                keep_user_group: \n{\n                  short: 'k',\n                  info:  \"Don't delete the system user and groupof the application\",\n                },\n                preserve_database: \n{\n                  short: 'p',\n                  info:  \"Preserve the database used by the application from deletion\",\n                },\n              },\n            },\n            \nexec: \n{\n              alias:     'e',\n              info:      \"Execute an application in the foreground\",\n              action:    \"App.exec\",\n              arguments: \n%\nw(application),\n              inherit:   \n%\nw(prefix group),\n            },\n            query: \n{\n              info:      \"Get information of an application - `.` for the whole document\",\n              action:    \"Logger.output.puts App.info\",\n              arguments: \n%\nw(application path),\n              inherit:   \n%\nw(prefix group),\n            },\n            install: \n{\n              alias:   'i',\n              info:    \"Install DPPM to a new defined prefix\",\n              action:  \"install_dppm\",\n              inherit: \n%\nw(no_confirm config prefix group source_name source_path),\n            },\n            list: \n{\n              alias:   'l',\n              info:    \"List applications\",\n              action:  \"List.app\",\n              inherit: \n%\nw(prefix),\n            },\n            logs: \n{\n              alias:     'L',\n              info:      \"Read logs of the application's service - list log names if empty\",\n              action:    \"App.logs() \n{ |log| Logger.output << log }\",\n              arguments: \n%\nw(application stream_names...),\n              inherit:   \n%\nw(prefix group),\n              options:   \n{\n                follow: \n{\n                  short: 'f',\n                  info:  \"Follow new lines, starting to the last 10 lines by default\",\n                },\n              },\n              variables: \n{\n                lines: \n{\n                  info: \"Number of last lines to print. All lines when no set\",\n                },\n              },\n            },\n            uninstall: \n{\n              alias:  'U',\n              info:   \"Uninstall DPPM with all its applications\",\n              action: \"uninstall_dppm\",\n              inherit:   \n%\nw(config group no_confirm prefix source_name source_path),\n            },\n            upgrade: \n{\n              alias:     'u',\n              info:      \"Upgrade the application to a version\",\n              action:    \"App.upgrade\",\n              arguments: \n%\nw(application custom_vars...),\n              inherit:   \n%\nw(config group no_confirm prefix source_name source_path),\n              options: \n{\n                contained: \n{\n                  short: 'c',\n                  info:  \"No shared dependencies, copy instead of symlinks\",\n                },\n              },\n              variables: \n{\n                tag: \n{\n                  info: \"Package version's tag (e.g: latest)\",\n                },\n                version: \n{\n                  info: \"Package version\",\n                },\n              },\n            },\n            version: \n{\n              alias:     'v',\n              info:      \"Returns application's version\",\n              action:    \"Logger.output.puts App.version\",\n              arguments: \n%\nw(application),\n              inherit:   \n%\nw(group prefix),\n            },\n          },\n        },\n        list: \n{\n          alias:   'l',\n          info:    \"List all applications, packages and sources\",\n          action:  \"List.all\",\n          inherit: \n%\nw(group prefix source_name source_path),\n        },\n        package: \n{\n          alias:     'p',\n          info:      \"Manage built packages\",\n          inherit:   \n%\nw(config no_confirm prefix source_name source_path),\n          variables: \n{\n            tag: \n{\n              info: \"Package version's tag (e.g: latest)\",\n            },\n            version: \n{\n              info: \"Package version\",\n            },\n          },\n          commands: \n{\n            build: \n{\n              alias:     'b',\n              info:      \"Build a new a package\",\n              action:    \"Pkg.build\",\n              arguments: \n%\nw(package custom_vars...),\n              inherit:   \n%\nw(config no_confirm prefix source_name source_path tag version),\n            },\n            clean: \n{\n              alias:   'C',\n              info:    \"Clean unused built packages by the applications\",\n              action:  \"Pkg.clean_unused_packages\",\n              inherit: \n%\nw(no_confirm prefix source_name),\n            },\n            delete: \n{\n              alias:     'd',\n              info:      \"Delete a built package\",\n              action:    \"Pkg.delete\",\n              arguments: \n%\nw(package),\n              inherit:   \n%\nw(no_confirm prefix source_name version),\n            },\n            info: \n{\n              info:      \"Get information of a package - `.` for the whole document.\",\n              action:    \"Logger.output.puts Pkg.info\",\n              arguments: \n%\nw(package path),\n              inherit:   \n%\nw(prefix source_name),\n            },\n            list: \n{\n              alias:   'l',\n              info:    \"List packages\",\n              action:  \"List.pkg\",\n              inherit: \n%\nw(prefix),\n            },\n          },\n        },\n        service: \n{\n          alias:    'S',\n          info:     \"Manage application services\",\n          inherit:  \n%\nw(debug prefix),\n          commands: \n{\n            boot: \n{\n              info:      \"Auto-start the service at boot\",\n              action:    \"Service.boot\",\n              arguments: \n%\nw(service state),\n            },\n            reload: \n{\n              info:      \"Reload the service\",\n              action:    \"Service.new().reload || exit 1\",\n              arguments: \n%\nw(service),\n            },\n            restart: \n{\n              info:      \"Restart the service\",\n              action:    \"Service.new().restart || exit 1\",\n              arguments: \n%\nw(service),\n            },\n            start: \n{\n              info:      \"Start the service\",\n              action:    \"Service.new().start || exit 1\",\n              arguments: \n%\nw(service),\n            },\n            status: \n{\n              info:      \"Status for specified services or all services if none set\",\n              action:    \"Service.status\",\n              arguments: \n%\nw(services...),\n              inherit:   \n%\nw(prefix),\n              options:   \n{\n                all: \n{\n                  short: 'a',\n                  info:  \"list all system services\",\n                },\n                noboot: \n{\n                  info: \"don't include booting status\",\n                },\n                norun: \n{\n                  info: \"don't include running status\",\n                },\n              },\n            },\n            stop: \n{\n              info:      \"Stop the service\",\n              arguments: \n%\nw(service),\n              action:    \"Service.new().stop || exit 1\",\n            },\n          },\n        },\n        source: \n{\n          alias:    's',\n          info:     \"Manage packages sources\",\n          inherit:   \n%\nw(config no_confirm prefix source_name source_path),\n          commands: \n{\n            list: \n{\n              alias:   'l',\n              info:    \"List source packages\",\n              action:  \"List.src\",\n              inherit: \n%\nw(prefix),\n            },\n            info: \n{\n              info:      \"Get information of a source package - `.` for the whole document\",\n              action:    \"Logger.output.puts Src.info\",\n              arguments: \n%\nw(package path),\n              inherit:   \n%\nw(prefix source_name),\n            },\n            update: \n{\n              alias:   'u',\n              info:    \"Check for packages source updates. `-y` to force update\",\n              action:  \"Src.update\",\n              inherit: \n%\nw(config no_confirm prefix source_name source_path),\n            },\n          },\n        },\n        version: \n{\n          alias:  'v',\n          info:   \"Version with general system information\",\n          action: \"version\",\n        },\n        \n{{ **additional_commands }}\n\n      }\n    )\n  rescue \nex : Help\n    Logger.output.puts \nex\n  rescue \nex : ArgumentRequired | UnknownCommand | UnknownOption | UnknownVariable\n    abort \nex\n  rescue \nex\n    if ENV[\"DEBUG\"]?\n      \nex.inspect_with_backtrace Logger.error\n    \nelse\n      Logger.error \nex\n    \nend\n    \nexit 1\n  \nend\n  DPPM::CLI.internal_run\n  \n"}}],"types":[{"html_id":"dppm/DPPM/CLI/App","path":"DPPM/CLI/App.html","kind":"module","full_name":"DPPM::CLI::App","name":"App","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"src/cli/app.cr","line_number":1,"url":"https://github.com/DFabric/dppm/blob/4a1bc37bc6872377dbc36759a4d46e84ec35bbb5/src/cli/app.cr#L1"}],"repository_name":"dppm","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[{"html_id":"dppm/DPPM/CLI/App","kind":"module","full_name":"DPPM::CLI::App","name":"App"}],"subclasses":[],"including_types":[],"namespace":{"html_id":"dppm/DPPM/CLI","kind":"module","full_name":"DPPM::CLI","name":"CLI"},"doc":null,"summary":null,"class_methods":[{"id":"logs(prefix:String,group:String,stream_names:Array(String),lines:String?,follow:Bool,application:String,&block:String->)-class-method","html_id":"logs(prefix:String,group:String,stream_names:Array(String),lines:String?,follow:Bool,application:String,&block:String->)-class-method","name":"logs","doc":null,"summary":null,"abstract":false,"args":[{"name":"prefix","doc":null,"default_value":"","external_name":"prefix","restriction":"String"},{"name":"group","doc":null,"default_value":"","external_name":"group","restriction":"String"},{"name":"stream_names","doc":null,"default_value":"","external_name":"stream_names","restriction":"Array(String)"},{"name":"lines","doc":null,"default_value":"","external_name":"lines","restriction":"String | ::Nil"},{"name":"follow","doc":null,"default_value":"","external_name":"follow","restriction":"Bool"},{"name":"application","doc":null,"default_value":"","external_name":"application","restriction":"String"}],"args_string":"(prefix : String, group : String, stream_names : Array(String), lines : String?, follow : Bool, application : String, &block : String -> )","source_link":"https://github.com/DFabric/dppm/blob/4a1bc37bc6872377dbc36759a4d46e84ec35bbb5/src/cli/app.cr#L176","def":{"name":"logs","args":[{"name":"prefix","doc":null,"default_value":"","external_name":"prefix","restriction":"String"},{"name":"group","doc":null,"default_value":"","external_name":"group","restriction":"String"},{"name":"stream_names","doc":null,"default_value":"","external_name":"stream_names","restriction":"Array(String)"},{"name":"lines","doc":null,"default_value":"","external_name":"lines","restriction":"String | ::Nil"},{"name":"follow","doc":null,"default_value":"","external_name":"follow","restriction":"Bool"},{"name":"application","doc":null,"default_value":"","external_name":"application","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":1,"block_arg":{"name":"block","doc":null,"default_value":"","external_name":"block","restriction":"(String -> )"},"return_type":"","visibility":"Public","body":"app = (Prefix.new(prefix, group: group)).new_app(application)\nif stream_names.empty?\n  Logger.output << \"LOG NAMES\\n\"\n  app.each_log_stream do |stream|\n    (Logger.output << stream) << '\\n'\n  end\nelse\n  channel = Channel(String).new\n  stream_names.each do |stream_name|\n    spawn do\n      app.get_logs(stream_name, follow, lines.try(&.to_i)) do |line|\n        channel.send(line)\n      end\n    end\n  end\n  if follow\n    loop do\n      yield channel.receive\n    end\n  else\n    stream_names.size.times do\n      yield channel.receive\n    end\n  end\nend\n"}}],"constructors":[],"instance_methods":[{"id":"add(no_confirm,config,prefix,source_name,source_path,group,application,contained,noservice,socket,custom_vars=Array(String).new,version=nil,tag=nil,name=nil,database=nil,url=nil,web_server=nil)-instance-method","html_id":"add(no_confirm,config,prefix,source_name,source_path,group,application,contained,noservice,socket,custom_vars=Array(String).new,version=nil,tag=nil,name=nil,database=nil,url=nil,web_server=nil)-instance-method","name":"add","doc":null,"summary":null,"abstract":false,"args":[{"name":"no_confirm","doc":null,"default_value":"","external_name":"no_confirm","restriction":""},{"name":"config","doc":null,"default_value":"","external_name":"config","restriction":""},{"name":"prefix","doc":null,"default_value":"","external_name":"prefix","restriction":""},{"name":"source_name","doc":null,"default_value":"","external_name":"source_name","restriction":""},{"name":"source_path","doc":null,"default_value":"","external_name":"source_path","restriction":""},{"name":"group","doc":null,"default_value":"","external_name":"group","restriction":""},{"name":"application","doc":null,"default_value":"","external_name":"application","restriction":""},{"name":"contained","doc":null,"default_value":"","external_name":"contained","restriction":""},{"name":"noservice","doc":null,"default_value":"","external_name":"noservice","restriction":""},{"name":"socket","doc":null,"default_value":"","external_name":"socket","restriction":""},{"name":"custom_vars","doc":null,"default_value":"Array(String).new","external_name":"custom_vars","restriction":""},{"name":"version","doc":null,"default_value":"nil","external_name":"version","restriction":""},{"name":"tag","doc":null,"default_value":"nil","external_name":"tag","restriction":""},{"name":"name","doc":null,"default_value":"nil","external_name":"name","restriction":""},{"name":"database","doc":null,"default_value":"nil","external_name":"database","restriction":""},{"name":"url","doc":null,"default_value":"nil","external_name":"url","restriction":""},{"name":"web_server","doc":null,"default_value":"nil","external_name":"web_server","restriction":""}],"args_string":"(no_confirm, config, prefix, source_name, source_path, group, application, contained, noservice, socket, custom_vars = <span class=\"t\">Array</span>(<span class=\"t\">String</span>).<span class=\"k\">new</span>, version = <span class=\"n\">nil</span>, tag = <span class=\"n\">nil</span>, name = <span class=\"n\">nil</span>, database = <span class=\"n\">nil</span>, url = <span class=\"n\">nil</span>, web_server = <span class=\"n\">nil</span>)","source_link":"https://github.com/DFabric/dppm/blob/4a1bc37bc6872377dbc36759a4d46e84ec35bbb5/src/cli/app.cr#L53","def":{"name":"add","args":[{"name":"no_confirm","doc":null,"default_value":"","external_name":"no_confirm","restriction":""},{"name":"config","doc":null,"default_value":"","external_name":"config","restriction":""},{"name":"prefix","doc":null,"default_value":"","external_name":"prefix","restriction":""},{"name":"source_name","doc":null,"default_value":"","external_name":"source_name","restriction":""},{"name":"source_path","doc":null,"default_value":"","external_name":"source_path","restriction":""},{"name":"group","doc":null,"default_value":"","external_name":"group","restriction":""},{"name":"application","doc":null,"default_value":"","external_name":"application","restriction":""},{"name":"contained","doc":null,"default_value":"","external_name":"contained","restriction":""},{"name":"noservice","doc":null,"default_value":"","external_name":"noservice","restriction":""},{"name":"socket","doc":null,"default_value":"","external_name":"socket","restriction":""},{"name":"custom_vars","doc":null,"default_value":"Array(String).new","external_name":"custom_vars","restriction":""},{"name":"version","doc":null,"default_value":"nil","external_name":"version","restriction":""},{"name":"tag","doc":null,"default_value":"nil","external_name":"tag","restriction":""},{"name":"name","doc":null,"default_value":"nil","external_name":"name","restriction":""},{"name":"database","doc":null,"default_value":"nil","external_name":"database","restriction":""},{"name":"url","doc":null,"default_value":"nil","external_name":"url","restriction":""},{"name":"web_server","doc":null,"default_value":"nil","external_name":"web_server","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Logger.info(\"initializing\", \"add\")\nvars = vars_parser(custom_vars)\nroot_prefix = Prefix.new(prefix, group: group, source_name: source_name, source_path: source_path)\nroot_prefix.check\nif config\n  root_prefix.dppm_config = Prefix::Config.new(File.read(config))\nend\nroot_prefix.update\npkg = root_prefix.new_pkg(application, version, tag)\napp = pkg.new_app(name)\napp.add(vars: vars, shared: !contained, add_service: !noservice, socket: socket, database: database, url: url, web_server: web_server, confirmation: !no_confirm) do\n  no_confirm || CLI.confirm_prompt\nend\napp\n"}},{"id":"config_del(prefix,group,nopkg:Bool,application,path)-instance-method","html_id":"config_del(prefix,group,nopkg:Bool,application,path)-instance-method","name":"config_del","doc":null,"summary":null,"abstract":false,"args":[{"name":"prefix","doc":null,"default_value":"","external_name":"prefix","restriction":""},{"name":"group","doc":null,"default_value":"","external_name":"group","restriction":""},{"name":"nopkg","doc":null,"default_value":"","external_name":"nopkg","restriction":"Bool"},{"name":"application","doc":null,"default_value":"","external_name":"application","restriction":""},{"name":"path","doc":null,"default_value":"","external_name":"path","restriction":""}],"args_string":"(prefix, group, nopkg : Bool, application, path)","source_link":"https://github.com/DFabric/dppm/blob/4a1bc37bc6872377dbc36759a4d46e84ec35bbb5/src/cli/app.cr#L166","def":{"name":"config_del","args":[{"name":"prefix","doc":null,"default_value":"","external_name":"prefix","restriction":""},{"name":"group","doc":null,"default_value":"","external_name":"group","restriction":""},{"name":"nopkg","doc":null,"default_value":"","external_name":"nopkg","restriction":"Bool"},{"name":"application","doc":null,"default_value":"","external_name":"application","restriction":""},{"name":"path","doc":null,"default_value":"","external_name":"path","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"app = (Prefix.new(prefix, group: group)).new_app(application)\nif nopkg\n  app.config!.del(path)\nelse\n  app.del_config(path)\nend\napp.write_configs\n"}},{"id":"config_get(prefix,group,nopkg:Bool,application,path)-instance-method","html_id":"config_get(prefix,group,nopkg:Bool,application,path)-instance-method","name":"config_get","doc":null,"summary":null,"abstract":false,"args":[{"name":"prefix","doc":null,"default_value":"","external_name":"prefix","restriction":""},{"name":"group","doc":null,"default_value":"","external_name":"group","restriction":""},{"name":"nopkg","doc":null,"default_value":"","external_name":"nopkg","restriction":"Bool"},{"name":"application","doc":null,"default_value":"","external_name":"application","restriction":""},{"name":"path","doc":null,"default_value":"","external_name":"path","restriction":""}],"args_string":"(prefix, group, nopkg : Bool, application, path)","source_link":"https://github.com/DFabric/dppm/blob/4a1bc37bc6872377dbc36759a4d46e84ec35bbb5/src/cli/app.cr#L139","def":{"name":"config_get","args":[{"name":"prefix","doc":null,"default_value":"","external_name":"prefix","restriction":""},{"name":"group","doc":null,"default_value":"","external_name":"group","restriction":""},{"name":"nopkg","doc":null,"default_value":"","external_name":"nopkg","restriction":"Bool"},{"name":"application","doc":null,"default_value":"","external_name":"application","restriction":""},{"name":"path","doc":null,"default_value":"","external_name":"path","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"app = (Prefix.new(prefix, group: group)).new_app(application)\nif nopkg\n  if nopkg && (path == \".\")\n    Logger.output.puts(app.config!.data)\n  else\n    Logger.output.puts(app.config!.get(path))\n  end\nelse\n  if path == \".\"\n    app.each_config_key do |key|\n      (((Logger.output << key) << \": \") << (app.get_config(key))) << '\\n'\n    end\n  else\n    Logger.output.puts(app.get_config(path))\n  end\nend\n"}},{"id":"config_set(prefix,group,nopkg:Bool,application,path,value)-instance-method","html_id":"config_set(prefix,group,nopkg:Bool,application,path,value)-instance-method","name":"config_set","doc":null,"summary":null,"abstract":false,"args":[{"name":"prefix","doc":null,"default_value":"","external_name":"prefix","restriction":""},{"name":"group","doc":null,"default_value":"","external_name":"group","restriction":""},{"name":"nopkg","doc":null,"default_value":"","external_name":"nopkg","restriction":"Bool"},{"name":"application","doc":null,"default_value":"","external_name":"application","restriction":""},{"name":"path","doc":null,"default_value":"","external_name":"path","restriction":""},{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":""}],"args_string":"(prefix, group, nopkg : Bool, application, path, value)","source_link":"https://github.com/DFabric/dppm/blob/4a1bc37bc6872377dbc36759a4d46e84ec35bbb5/src/cli/app.cr#L156","def":{"name":"config_set","args":[{"name":"prefix","doc":null,"default_value":"","external_name":"prefix","restriction":""},{"name":"group","doc":null,"default_value":"","external_name":"group","restriction":""},{"name":"nopkg","doc":null,"default_value":"","external_name":"nopkg","restriction":"Bool"},{"name":"application","doc":null,"default_value":"","external_name":"application","restriction":""},{"name":"path","doc":null,"default_value":"","external_name":"path","restriction":""},{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"app = (Prefix.new(prefix, group: group)).new_app(application)\nif nopkg\n  app.config!.set(path, value)\nelse\n  app.set_config(path, value)\nend\napp.write_configs\n"}},{"id":"delete(no_confirm,prefix,group,application,keep_user_group,preserve_database)-instance-method","html_id":"delete(no_confirm,prefix,group,application,keep_user_group,preserve_database)-instance-method","name":"delete","doc":null,"summary":null,"abstract":false,"args":[{"name":"no_confirm","doc":null,"default_value":"","external_name":"no_confirm","restriction":""},{"name":"prefix","doc":null,"default_value":"","external_name":"prefix","restriction":""},{"name":"group","doc":null,"default_value":"","external_name":"group","restriction":""},{"name":"application","doc":null,"default_value":"","external_name":"application","restriction":""},{"name":"keep_user_group","doc":null,"default_value":"","external_name":"keep_user_group","restriction":""},{"name":"preserve_database","doc":null,"default_value":"","external_name":"preserve_database","restriction":""}],"args_string":"(no_confirm, prefix, group, application, keep_user_group, preserve_database)","source_link":"https://github.com/DFabric/dppm/blob/4a1bc37bc6872377dbc36759a4d46e84ec35bbb5/src/cli/app.cr#L9","def":{"name":"delete","args":[{"name":"no_confirm","doc":null,"default_value":"","external_name":"no_confirm","restriction":""},{"name":"prefix","doc":null,"default_value":"","external_name":"prefix","restriction":""},{"name":"group","doc":null,"default_value":"","external_name":"group","restriction":""},{"name":"application","doc":null,"default_value":"","external_name":"application","restriction":""},{"name":"keep_user_group","doc":null,"default_value":"","external_name":"keep_user_group","restriction":""},{"name":"preserve_database","doc":null,"default_value":"","external_name":"preserve_database","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"((Prefix.new(prefix, group: group)).new_app(application)).delete(!no_confirm, keep_user_group, preserve_database) do\n  CLI.confirm_prompt\nend"}},{"id":"exec(prefix,group,application)-instance-method","html_id":"exec(prefix,group,application)-instance-method","name":"exec","doc":null,"summary":null,"abstract":false,"args":[{"name":"prefix","doc":null,"default_value":"","external_name":"prefix","restriction":""},{"name":"group","doc":null,"default_value":"","external_name":"group","restriction":""},{"name":"application","doc":null,"default_value":"","external_name":"application","restriction":""}],"args_string":"(prefix, group, application)","source_link":"https://github.com/DFabric/dppm/blob/4a1bc37bc6872377dbc36759a4d46e84ec35bbb5/src/cli/app.cr#L120","def":{"name":"exec","args":[{"name":"prefix","doc":null,"default_value":"","external_name":"prefix","restriction":""},{"name":"group","doc":null,"default_value":"","external_name":"group","restriction":""},{"name":"application","doc":null,"default_value":"","external_name":"application","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"app = (Prefix.new(prefix, group: group)).new_app(application)\nenv_vars = app.pkg_file.env || Hash(String, String).new\nenv_vars[\"PATH\"] = app.path_env_var\nexec_start = app.exec[\"start\"]\nLogger.info(\"executing command\", exec_start)\nif port = app.get_config(\"port\")\n  Logger.info(\"listening on port\", port.to_s)\nend\nExec.run(cmd: exec_start, env: env_vars, output: Logger.output, error: Logger.error, chdir: app.path.to_s&.wait)\n"}},{"id":"info(prefix,group,application,path):String-instance-method","html_id":"info(prefix,group,application,path):String-instance-method","name":"info","doc":null,"summary":null,"abstract":false,"args":[{"name":"prefix","doc":null,"default_value":"","external_name":"prefix","restriction":""},{"name":"group","doc":null,"default_value":"","external_name":"group","restriction":""},{"name":"application","doc":null,"default_value":"","external_name":"application","restriction":""},{"name":"path","doc":null,"default_value":"","external_name":"path","restriction":""}],"args_string":"(prefix, group, application, path) : String","source_link":"https://github.com/DFabric/dppm/blob/4a1bc37bc6872377dbc36759a4d46e84ec35bbb5/src/cli/app.cr#L4","def":{"name":"info","args":[{"name":"prefix","doc":null,"default_value":"","external_name":"prefix","restriction":""},{"name":"group","doc":null,"default_value":"","external_name":"group","restriction":""},{"name":"application","doc":null,"default_value":"","external_name":"application","restriction":""},{"name":"path","doc":null,"default_value":"","external_name":"path","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"String","visibility":"Public","body":"pkg_file = ((Prefix.new(prefix, group: group)).new_app(application)).pkg_file\n(CLI.info(pkg_file.any, path)).to_pretty_con\n"}},{"id":"upgrade(no_confirm,config,prefix,source_name,source_path,group,application,contained,custom_vars=Array(String).new,version=nil,tag=nil)-instance-method","html_id":"upgrade(no_confirm,config,prefix,source_name,source_path,group,application,contained,custom_vars=Array(String).new,version=nil,tag=nil)-instance-method","name":"upgrade","doc":null,"summary":null,"abstract":false,"args":[{"name":"no_confirm","doc":null,"default_value":"","external_name":"no_confirm","restriction":""},{"name":"config","doc":null,"default_value":"","external_name":"config","restriction":""},{"name":"prefix","doc":null,"default_value":"","external_name":"prefix","restriction":""},{"name":"source_name","doc":null,"default_value":"","external_name":"source_name","restriction":""},{"name":"source_path","doc":null,"default_value":"","external_name":"source_path","restriction":""},{"name":"group","doc":null,"default_value":"","external_name":"group","restriction":""},{"name":"application","doc":null,"default_value":"","external_name":"application","restriction":""},{"name":"contained","doc":null,"default_value":"","external_name":"contained","restriction":""},{"name":"custom_vars","doc":null,"default_value":"Array(String).new","external_name":"custom_vars","restriction":""},{"name":"version","doc":null,"default_value":"nil","external_name":"version","restriction":""},{"name":"tag","doc":null,"default_value":"nil","external_name":"tag","restriction":""}],"args_string":"(no_confirm, config, prefix, source_name, source_path, group, application, contained, custom_vars = <span class=\"t\">Array</span>(<span class=\"t\">String</span>).<span class=\"k\">new</span>, version = <span class=\"n\">nil</span>, tag = <span class=\"n\">nil</span>)","source_link":"https://github.com/DFabric/dppm/blob/4a1bc37bc6872377dbc36759a4d46e84ec35bbb5/src/cli/app.cr#L15","def":{"name":"upgrade","args":[{"name":"no_confirm","doc":null,"default_value":"","external_name":"no_confirm","restriction":""},{"name":"config","doc":null,"default_value":"","external_name":"config","restriction":""},{"name":"prefix","doc":null,"default_value":"","external_name":"prefix","restriction":""},{"name":"source_name","doc":null,"default_value":"","external_name":"source_name","restriction":""},{"name":"source_path","doc":null,"default_value":"","external_name":"source_path","restriction":""},{"name":"group","doc":null,"default_value":"","external_name":"group","restriction":""},{"name":"application","doc":null,"default_value":"","external_name":"application","restriction":""},{"name":"contained","doc":null,"default_value":"","external_name":"contained","restriction":""},{"name":"custom_vars","doc":null,"default_value":"Array(String).new","external_name":"custom_vars","restriction":""},{"name":"version","doc":null,"default_value":"nil","external_name":"version","restriction":""},{"name":"tag","doc":null,"default_value":"nil","external_name":"tag","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Logger.info(\"initializing\", \"upgrade\")\nvars = vars_parser(custom_vars)\nroot_prefix = Prefix.new(prefix, group: group, source_name: source_name, source_path: source_path)\nroot_prefix.check\nif config\n  root_prefix.dppm_config = Prefix::Config.new(File.read(config))\nend\nroot_prefix.update\napp = (Prefix.new(prefix, group: group)).new_app(application)\napp.upgrade(tag, version, vars: vars, shared: !contained, confirmation: !no_confirm) do\n  no_confirm || CLI.confirm_prompt\nend\napp\n"}},{"id":"vars_parser(custom_vars:Array(String)):Hash(String,String)-instance-method","html_id":"vars_parser(custom_vars:Array(String)):Hash(String,String)-instance-method","name":"vars_parser","doc":null,"summary":null,"abstract":false,"args":[{"name":"custom_vars","doc":null,"default_value":"","external_name":"custom_vars","restriction":"Array(String)"}],"args_string":"(custom_vars : Array(String)) : Hash(String, String)","source_link":"https://github.com/DFabric/dppm/blob/4a1bc37bc6872377dbc36759a4d46e84ec35bbb5/src/cli/app.cr#L101","def":{"name":"vars_parser","args":[{"name":"custom_vars","doc":null,"default_value":"","external_name":"custom_vars","restriction":"Array(String)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Hash(String, String)","visibility":"Public","body":"vars = Hash(String, String).new\ncustom_vars.each do |arg|\n  case arg\n  when .includes?('=')\n    key, _, value = arg.partition('=')\n    if !(Utils.ascii_alphanumeric_underscore?(key))\n      raise(\"Only `a-z`, `A-Z`, `0-9` and `_` are allowed as variable name: \" + arg)\n    end\n    vars[key] = value\n  else\n    raise(\"Invalid variable: #{arg}\")\n  end\nend\nvars\n"}},{"id":"version(prefix,group,application):String-instance-method","html_id":"version(prefix,group,application):String-instance-method","name":"version","doc":null,"summary":null,"abstract":false,"args":[{"name":"prefix","doc":null,"default_value":"","external_name":"prefix","restriction":""},{"name":"group","doc":null,"default_value":"","external_name":"group","restriction":""},{"name":"application","doc":null,"default_value":"","external_name":"application","restriction":""}],"args_string":"(prefix, group, application) : String","source_link":"https://github.com/DFabric/dppm/blob/4a1bc37bc6872377dbc36759a4d46e84ec35bbb5/src/cli/app.cr#L116","def":{"name":"version","args":[{"name":"prefix","doc":null,"default_value":"","external_name":"prefix","restriction":""},{"name":"group","doc":null,"default_value":"","external_name":"group","restriction":""},{"name":"application","doc":null,"default_value":"","external_name":"application","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"String","visibility":"Public","body":"((Prefix.new(prefix, group: group)).new_app(application)).pkg.version"}}],"macros":[],"types":[]},{"html_id":"dppm/DPPM/CLI/List","path":"DPPM/CLI/List.html","kind":"module","full_name":"DPPM::CLI::List","name":"List","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"src/cli/list.cr","line_number":1,"url":"https://github.com/DFabric/dppm/blob/4a1bc37bc6872377dbc36759a4d46e84ec35bbb5/src/cli/list.cr#L1"}],"repository_name":"dppm","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[{"html_id":"dppm/DPPM/CLI/List","kind":"module","full_name":"DPPM::CLI::List","name":"List"}],"subclasses":[],"including_types":[],"namespace":{"html_id":"dppm/DPPM/CLI","kind":"module","full_name":"DPPM::CLI","name":"CLI"},"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[{"id":"all(prefix,source_name,source_path,group=nil)-instance-method","html_id":"all(prefix,source_name,source_path,group=nil)-instance-method","name":"all","doc":null,"summary":null,"abstract":false,"args":[{"name":"prefix","doc":null,"default_value":"","external_name":"prefix","restriction":""},{"name":"source_name","doc":null,"default_value":"","external_name":"source_name","restriction":""},{"name":"source_path","doc":null,"default_value":"","external_name":"source_path","restriction":""},{"name":"group","doc":null,"default_value":"nil","external_name":"group","restriction":""}],"args_string":"(prefix, source_name, source_path, group = <span class=\"n\">nil</span>)","source_link":"https://github.com/DFabric/dppm/blob/4a1bc37bc6872377dbc36759a4d46e84ec35bbb5/src/cli/list.cr#L4","def":{"name":"all","args":[{"name":"prefix","doc":null,"default_value":"","external_name":"prefix","restriction":""},{"name":"source_name","doc":null,"default_value":"","external_name":"source_name","restriction":""},{"name":"source_path","doc":null,"default_value":"","external_name":"source_path","restriction":""},{"name":"group","doc":null,"default_value":"nil","external_name":"group","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"root_prefix = Prefix.new(prefix, group: group || Prefix.default_group, source_name: source_name, source_path: source_path)\nLogger.output.puts(\"applications:\")\nroot_prefix.each_app do |app|\n  Logger.output.puts(app.name)\nend\nLogger.output.puts(\"\\npackages:\")\nroot_prefix.each_pkg do |pkg|\n  Logger.output.puts(pkg.name)\nend\nLogger.output.puts(\"\\nsources:\")\nroot_prefix.each_src do |src|\n  Logger.output.puts(src.name)\nend\n"}},{"id":"app(prefix)-instance-method","html_id":"app(prefix)-instance-method","name":"app","doc":null,"summary":null,"abstract":false,"args":[{"name":"prefix","doc":null,"default_value":"","external_name":"prefix","restriction":""}],"args_string":"(prefix)","source_link":"https://github.com/DFabric/dppm/blob/4a1bc37bc6872377dbc36759a4d46e84ec35bbb5/src/cli/list.cr#L14","def":{"name":"app","args":[{"name":"prefix","doc":null,"default_value":"","external_name":"prefix","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"(Prefix.new(prefix)).each_app do |el|\n  Logger.output.puts(el.name)\nend"}},{"id":"pkg(prefix)-instance-method","html_id":"pkg(prefix)-instance-method","name":"pkg","doc":null,"summary":null,"abstract":false,"args":[{"name":"prefix","doc":null,"default_value":"","external_name":"prefix","restriction":""}],"args_string":"(prefix)","source_link":"https://github.com/DFabric/dppm/blob/4a1bc37bc6872377dbc36759a4d46e84ec35bbb5/src/cli/list.cr#L14","def":{"name":"pkg","args":[{"name":"prefix","doc":null,"default_value":"","external_name":"prefix","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"(Prefix.new(prefix)).each_pkg do |el|\n  Logger.output.puts(el.name)\nend"}},{"id":"src(prefix)-instance-method","html_id":"src(prefix)-instance-method","name":"src","doc":null,"summary":null,"abstract":false,"args":[{"name":"prefix","doc":null,"default_value":"","external_name":"prefix","restriction":""}],"args_string":"(prefix)","source_link":"https://github.com/DFabric/dppm/blob/4a1bc37bc6872377dbc36759a4d46e84ec35bbb5/src/cli/list.cr#L14","def":{"name":"src","args":[{"name":"prefix","doc":null,"default_value":"","external_name":"prefix","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"(Prefix.new(prefix)).each_src do |el|\n  Logger.output.puts(el.name)\nend"}}],"macros":[],"types":[]},{"html_id":"dppm/DPPM/CLI/Pkg","path":"DPPM/CLI/Pkg.html","kind":"module","full_name":"DPPM::CLI::Pkg","name":"Pkg","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"src/cli/pkg.cr","line_number":1,"url":"https://github.com/DFabric/dppm/blob/4a1bc37bc6872377dbc36759a4d46e84ec35bbb5/src/cli/pkg.cr#L1"}],"repository_name":"dppm","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[{"html_id":"dppm/DPPM/CLI/Pkg","kind":"module","full_name":"DPPM::CLI::Pkg","name":"Pkg"}],"subclasses":[],"including_types":[],"namespace":{"html_id":"dppm/DPPM/CLI","kind":"module","full_name":"DPPM::CLI","name":"CLI"},"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[{"id":"build(no_confirm,config,prefix,source_name,source_path,package,custom_vars,version=nil,tag=nil)-instance-method","html_id":"build(no_confirm,config,prefix,source_name,source_path,package,custom_vars,version=nil,tag=nil)-instance-method","name":"build","doc":null,"summary":null,"abstract":false,"args":[{"name":"no_confirm","doc":null,"default_value":"","external_name":"no_confirm","restriction":""},{"name":"config","doc":null,"default_value":"","external_name":"config","restriction":""},{"name":"prefix","doc":null,"default_value":"","external_name":"prefix","restriction":""},{"name":"source_name","doc":null,"default_value":"","external_name":"source_name","restriction":""},{"name":"source_path","doc":null,"default_value":"","external_name":"source_path","restriction":""},{"name":"package","doc":null,"default_value":"","external_name":"package","restriction":""},{"name":"custom_vars","doc":null,"default_value":"","external_name":"custom_vars","restriction":""},{"name":"version","doc":null,"default_value":"nil","external_name":"version","restriction":""},{"name":"tag","doc":null,"default_value":"nil","external_name":"tag","restriction":""}],"args_string":"(no_confirm, config, prefix, source_name, source_path, package, custom_vars, version = <span class=\"n\">nil</span>, tag = <span class=\"n\">nil</span>)","source_link":"https://github.com/DFabric/dppm/blob/4a1bc37bc6872377dbc36759a4d46e84ec35bbb5/src/cli/pkg.cr#L21","def":{"name":"build","args":[{"name":"no_confirm","doc":null,"default_value":"","external_name":"no_confirm","restriction":""},{"name":"config","doc":null,"default_value":"","external_name":"config","restriction":""},{"name":"prefix","doc":null,"default_value":"","external_name":"prefix","restriction":""},{"name":"source_name","doc":null,"default_value":"","external_name":"source_name","restriction":""},{"name":"source_path","doc":null,"default_value":"","external_name":"source_path","restriction":""},{"name":"package","doc":null,"default_value":"","external_name":"package","restriction":""},{"name":"custom_vars","doc":null,"default_value":"","external_name":"custom_vars","restriction":""},{"name":"version","doc":null,"default_value":"nil","external_name":"version","restriction":""},{"name":"tag","doc":null,"default_value":"nil","external_name":"tag","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Logger.info(\"initializing\", \"build\")\nroot_prefix = Prefix.new(prefix, source_name: source_name, source_path: source_path)\nroot_prefix.check\nif config\n  root_prefix.dppm_config = Prefix::Config.new(File.read(config))\nend\nroot_prefix.update\npkg = root_prefix.new_pkg(package, version, tag)\npkg.build(confirmation: !no_confirm) do\n  no_confirm || CLI.confirm_prompt\nend\npkg\n"}},{"id":"clean_unused_packages(no_confirm,prefix,source_name)-instance-method","html_id":"clean_unused_packages(no_confirm,prefix,source_name)-instance-method","name":"clean_unused_packages","doc":null,"summary":null,"abstract":false,"args":[{"name":"no_confirm","doc":null,"default_value":"","external_name":"no_confirm","restriction":""},{"name":"prefix","doc":null,"default_value":"","external_name":"prefix","restriction":""},{"name":"source_name","doc":null,"default_value":"","external_name":"source_name","restriction":""}],"args_string":"(no_confirm, prefix, source_name)","source_link":"https://github.com/DFabric/dppm/blob/4a1bc37bc6872377dbc36759a4d46e84ec35bbb5/src/cli/pkg.cr#L9","def":{"name":"clean_unused_packages","args":[{"name":"no_confirm","doc":null,"default_value":"","external_name":"no_confirm","restriction":""},{"name":"prefix","doc":null,"default_value":"","external_name":"prefix","restriction":""},{"name":"source_name","doc":null,"default_value":"","external_name":"source_name","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"(Prefix.new(prefix, source_name: source_name)).clean_unused_packages(!no_confirm) do\n  CLI.confirm_prompt\nend"}},{"id":"delete(no_confirm,prefix,source_name,package,version)-instance-method","html_id":"delete(no_confirm,prefix,source_name,package,version)-instance-method","name":"delete","doc":null,"summary":null,"abstract":false,"args":[{"name":"no_confirm","doc":null,"default_value":"","external_name":"no_confirm","restriction":""},{"name":"prefix","doc":null,"default_value":"","external_name":"prefix","restriction":""},{"name":"source_name","doc":null,"default_value":"","external_name":"source_name","restriction":""},{"name":"package","doc":null,"default_value":"","external_name":"package","restriction":""},{"name":"version","doc":null,"default_value":"","external_name":"version","restriction":""}],"args_string":"(no_confirm, prefix, source_name, package, version)","source_link":"https://github.com/DFabric/dppm/blob/4a1bc37bc6872377dbc36759a4d46e84ec35bbb5/src/cli/pkg.cr#L15","def":{"name":"delete","args":[{"name":"no_confirm","doc":null,"default_value":"","external_name":"no_confirm","restriction":""},{"name":"prefix","doc":null,"default_value":"","external_name":"prefix","restriction":""},{"name":"source_name","doc":null,"default_value":"","external_name":"source_name","restriction":""},{"name":"package","doc":null,"default_value":"","external_name":"package","restriction":""},{"name":"version","doc":null,"default_value":"","external_name":"version","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"((Prefix.new(prefix, source_name: source_name)).new_pkg(package, version)).delete(!no_confirm) do\n  CLI.confirm_prompt\nend"}},{"id":"info(prefix,source_name,package,path)-instance-method","html_id":"info(prefix,source_name,package,path)-instance-method","name":"info","doc":null,"summary":null,"abstract":false,"args":[{"name":"prefix","doc":null,"default_value":"","external_name":"prefix","restriction":""},{"name":"source_name","doc":null,"default_value":"","external_name":"source_name","restriction":""},{"name":"package","doc":null,"default_value":"","external_name":"package","restriction":""},{"name":"path","doc":null,"default_value":"","external_name":"path","restriction":""}],"args_string":"(prefix, source_name, package, path)","source_link":"https://github.com/DFabric/dppm/blob/4a1bc37bc6872377dbc36759a4d46e84ec35bbb5/src/cli/pkg.cr#L4","def":{"name":"info","args":[{"name":"prefix","doc":null,"default_value":"","external_name":"prefix","restriction":""},{"name":"source_name","doc":null,"default_value":"","external_name":"source_name","restriction":""},{"name":"package","doc":null,"default_value":"","external_name":"package","restriction":""},{"name":"path","doc":null,"default_value":"","external_name":"path","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"pkg_file = ((Prefix.new(prefix, source_name: source_name)).new_pkg(package)).pkg_file\n(CLI.info(pkg_file.any, path)).to_pretty_con\n"}}],"macros":[],"types":[]},{"html_id":"dppm/DPPM/CLI/Service","path":"DPPM/CLI/Service.html","kind":"module","full_name":"DPPM::CLI::Service","name":"Service","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"src/cli/service.cr","line_number":1,"url":"https://github.com/DFabric/dppm/blob/4a1bc37bc6872377dbc36759a4d46e84ec35bbb5/src/cli/service.cr#L1"}],"repository_name":"dppm","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[{"html_id":"dppm/DPPM/CLI/Service","kind":"module","full_name":"DPPM::CLI::Service","name":"Service"}],"subclasses":[],"including_types":[],"namespace":{"html_id":"dppm/DPPM/CLI","kind":"module","full_name":"DPPM::CLI","name":"CLI"},"doc":null,"summary":null,"class_methods":[],"constructors":[{"id":"new(service)-class-method","html_id":"new(service)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"service","doc":null,"default_value":"","external_name":"service","restriction":""}],"args_string":"(service)","source_link":"https://github.com/DFabric/dppm/blob/4a1bc37bc6872377dbc36759a4d46e84ec35bbb5/src/cli/service.cr#L4","def":{"name":"new","args":[{"name":"service","doc":null,"default_value":"","external_name":"service","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"::Service.init.new(service)"}}],"instance_methods":[{"id":"all_status(&)-instance-method","html_id":"all_status(&)-instance-method","name":"all_status","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"(&)","source_link":"https://github.com/DFabric/dppm/blob/4a1bc37bc6872377dbc36759a4d46e84ec35bbb5/src/cli/service.cr#L57","def":{"name":"all_status","args":[],"double_splat":null,"splat_index":null,"yields":1,"block_arg":null,"return_type":"","visibility":"Public","body":"::Service.init.each do |service_name|\n  yield ::Service.init.new(service_name)\nend"}},{"id":"app_status(prefix:String=PREFIX,&)-instance-method","html_id":"app_status(prefix:String=PREFIX,&)-instance-method","name":"app_status","doc":null,"summary":null,"abstract":false,"args":[{"name":"prefix","doc":null,"default_value":"PREFIX","external_name":"prefix","restriction":"String"}],"args_string":"(prefix : String = <span class=\"t\">PREFIX</span>, &)","source_link":"https://github.com/DFabric/dppm/blob/4a1bc37bc6872377dbc36759a4d46e84ec35bbb5/src/cli/service.cr#L63","def":{"name":"app_status","args":[{"name":"prefix","doc":null,"default_value":"PREFIX","external_name":"prefix","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":1,"block_arg":null,"return_type":"","visibility":"Public","body":"(Prefix.new(prefix)).each_app do |app|\n  if service = app.service?\n    yield service\n  end\nend"}},{"id":"boot(service:String,state:String):Bool-instance-method","html_id":"boot(service:String,state:String):Bool-instance-method","name":"boot","doc":null,"summary":null,"abstract":false,"args":[{"name":"service","doc":null,"default_value":"","external_name":"service","restriction":"String"},{"name":"state","doc":null,"default_value":"","external_name":"state","restriction":"String"}],"args_string":"(service : String, state : String) : Bool","source_link":"https://github.com/DFabric/dppm/blob/4a1bc37bc6872377dbc36759a4d46e84ec35bbb5/src/cli/service.cr#L8","def":{"name":"boot","args":[{"name":"service","doc":null,"default_value":"","external_name":"service","restriction":"String"},{"name":"state","doc":null,"default_value":"","external_name":"state","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Bool","visibility":"Public","body":"(::Service.init.new(service)).boot(Utils.to_b(state))"}},{"id":"status(prefix:String,all:Bool,noboot:Bool,norun:Bool,services:Array(String)):Nil-instance-method","html_id":"status(prefix:String,all:Bool,noboot:Bool,norun:Bool,services:Array(String)):Nil-instance-method","name":"status","doc":null,"summary":null,"abstract":false,"args":[{"name":"prefix","doc":null,"default_value":"","external_name":"prefix","restriction":"String"},{"name":"all","doc":null,"default_value":"","external_name":"all","restriction":"Bool"},{"name":"noboot","doc":null,"default_value":"","external_name":"noboot","restriction":"Bool"},{"name":"norun","doc":null,"default_value":"","external_name":"norun","restriction":"Bool"},{"name":"services","doc":null,"default_value":"","external_name":"services","restriction":"Array(String)"}],"args_string":"(prefix : String, all : Bool, noboot : Bool, norun : Bool, services : Array(String)) : Nil","source_link":"https://github.com/DFabric/dppm/blob/4a1bc37bc6872377dbc36759a4d46e84ec35bbb5/src/cli/service.cr#L20","def":{"name":"status","args":[{"name":"prefix","doc":null,"default_value":"","external_name":"prefix","restriction":"String"},{"name":"all","doc":null,"default_value":"","external_name":"all","restriction":"Bool"},{"name":"noboot","doc":null,"default_value":"","external_name":"noboot","restriction":"Bool"},{"name":"norun","doc":null,"default_value":"","external_name":"norun","restriction":"Bool"},{"name":"services","doc":null,"default_value":"","external_name":"services","restriction":"Array(String)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Nil","visibility":"Public","body":"if !norun\n  Logger.output << \"RUN   \"\nend\nif !noboot\n  Logger.output << \"BOOT  \"\nend\nLogger.output.puts(\"SERVICE\\n\")\nif services.empty?\n  get_status(prefix, all) do |service|\n    if !norun\n      print_run_state(service)\n    end\n    if !noboot\n      print_boot_state(service)\n    end\n    Logger.output.puts(service.name)\n  end\nelse\n  root_prefix = Prefix.new(prefix)\n  services.each do |service_name|\n    service = (root_prefix.new_app(service_name)).service\n    if !norun\n      print_run_state(service)\n    end\n    if !noboot\n      print_boot_state(service)\n    end\n    Logger.output.puts(service.name)\n  end\nend\n"}}],"macros":[],"types":[]},{"html_id":"dppm/DPPM/CLI/Src","path":"DPPM/CLI/Src.html","kind":"module","full_name":"DPPM::CLI::Src","name":"Src","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"src/cli/src.cr","line_number":1,"url":"https://github.com/DFabric/dppm/blob/4a1bc37bc6872377dbc36759a4d46e84ec35bbb5/src/cli/src.cr#L1"}],"repository_name":"dppm","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[{"html_id":"dppm/DPPM/CLI/Src","kind":"module","full_name":"DPPM::CLI::Src","name":"Src"}],"subclasses":[],"including_types":[],"namespace":{"html_id":"dppm/DPPM/CLI","kind":"module","full_name":"DPPM::CLI","name":"CLI"},"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[{"id":"info(prefix,source_name,package,path)-instance-method","html_id":"info(prefix,source_name,package,path)-instance-method","name":"info","doc":null,"summary":null,"abstract":false,"args":[{"name":"prefix","doc":null,"default_value":"","external_name":"prefix","restriction":""},{"name":"source_name","doc":null,"default_value":"","external_name":"source_name","restriction":""},{"name":"package","doc":null,"default_value":"","external_name":"package","restriction":""},{"name":"path","doc":null,"default_value":"","external_name":"path","restriction":""}],"args_string":"(prefix, source_name, package, path)","source_link":"https://github.com/DFabric/dppm/blob/4a1bc37bc6872377dbc36759a4d46e84ec35bbb5/src/cli/src.cr#L4","def":{"name":"info","args":[{"name":"prefix","doc":null,"default_value":"","external_name":"prefix","restriction":""},{"name":"source_name","doc":null,"default_value":"","external_name":"source_name","restriction":""},{"name":"package","doc":null,"default_value":"","external_name":"package","restriction":""},{"name":"path","doc":null,"default_value":"","external_name":"path","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"pkg_file = ((Prefix.new(prefix, source_name: source_name)).new_src(package)).pkg_file\n(CLI.info(pkg_file.any, path)).to_pretty_con\n"}},{"id":"update(config,prefix,source_name,source_path,no_confirm)-instance-method","html_id":"update(config,prefix,source_name,source_path,no_confirm)-instance-method","name":"update","doc":null,"summary":null,"abstract":false,"args":[{"name":"config","doc":null,"default_value":"","external_name":"config","restriction":""},{"name":"prefix","doc":null,"default_value":"","external_name":"prefix","restriction":""},{"name":"source_name","doc":null,"default_value":"","external_name":"source_name","restriction":""},{"name":"source_path","doc":null,"default_value":"","external_name":"source_path","restriction":""},{"name":"no_confirm","doc":null,"default_value":"","external_name":"no_confirm","restriction":""}],"args_string":"(config, prefix, source_name, source_path, no_confirm)","source_link":"https://github.com/DFabric/dppm/blob/4a1bc37bc6872377dbc36759a4d46e84ec35bbb5/src/cli/src.cr#L9","def":{"name":"update","args":[{"name":"config","doc":null,"default_value":"","external_name":"config","restriction":""},{"name":"prefix","doc":null,"default_value":"","external_name":"prefix","restriction":""},{"name":"source_name","doc":null,"default_value":"","external_name":"source_name","restriction":""},{"name":"source_path","doc":null,"default_value":"","external_name":"source_path","restriction":""},{"name":"no_confirm","doc":null,"default_value":"","external_name":"no_confirm","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"root_prefix = Prefix.new(prefix, source_name: source_name, source_path: source_path)\nroot_prefix.check\nif config\n  root_prefix.dppm_config = Prefix::Config.new(File.read(config))\nend\nroot_prefix.update(no_confirm)\n"}}],"macros":[],"types":[]}]},{"html_id":"dppm/DPPM/Database","path":"DPPM/Database.html","kind":"module","full_name":"DPPM::Database","name":"Database","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"src/database.cr","line_number":5,"url":"https://github.com/DFabric/dppm/blob/4a1bc37bc6872377dbc36759a4d46e84ec35bbb5/src/database.cr#L5"},{"filename":"src/database/base.cr","line_number":1,"url":"https://github.com/DFabric/dppm/blob/4a1bc37bc6872377dbc36759a4d46e84ec35bbb5/src/database/base.cr#L1"}],"repository_name":"dppm","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[{"html_id":"dppm/DPPM/Database","kind":"module","full_name":"DPPM::Database","name":"Database"}],"subclasses":[],"including_types":[],"namespace":{"html_id":"dppm/DPPM","kind":"module","full_name":"DPPM","name":"DPPM"},"doc":null,"summary":null,"class_methods":[{"id":"supported?(database:String):Bool-class-method","html_id":"supported?(database:String):Bool-class-method","name":"supported?","doc":null,"summary":null,"abstract":false,"args":[{"name":"database","doc":null,"default_value":"","external_name":"database","restriction":"String"}],"args_string":"(database : String) : Bool","source_link":"https://github.com/DFabric/dppm/blob/4a1bc37bc6872377dbc36759a4d46e84ec35bbb5/src/database.cr#L26","def":{"name":"supported?","args":[{"name":"database","doc":null,"default_value":"","external_name":"database","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Bool","visibility":"Public","body":"{\"mysql\"}.includes?(database)"}}],"constructors":[{"id":"new(uri:URI,user:String,name:String):MySQL-class-method","html_id":"new(uri:URI,user:String,name:String):MySQL-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"uri","doc":null,"default_value":"","external_name":"uri","restriction":"URI"},{"name":"user","doc":null,"default_value":"","external_name":"user","restriction":"String"},{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":"String"}],"args_string":"(uri : URI, user : String, name : String) : MySQL","source_link":"https://github.com/DFabric/dppm/blob/4a1bc37bc6872377dbc36759a4d46e84ec35bbb5/src/database.cr#L30","def":{"name":"new","args":[{"name":"uri","doc":null,"default_value":"","external_name":"uri","restriction":"URI"},{"name":"user","doc":null,"default_value":"","external_name":"user","restriction":"String"},{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"MySQL","visibility":"Public","body":"case name\nwhen \"mysql\"\n  MySQL.new(uri, user)\nelse\n  raise(\"Unsupported database: \" + name)\nend"}}],"instance_methods":[{"id":"gen_password:String-instance-method","html_id":"gen_password:String-instance-method","name":"gen_password","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : String","source_link":"https://github.com/DFabric/dppm/blob/4a1bc37bc6872377dbc36759a4d46e84ec35bbb5/src/database.cr#L37","def":{"name":"gen_password","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"String","visibility":"Public","body":"password = Random::Secure.urlsafe_base64\npassword.each_char do |char|\n  if !char.ascii_alphanumeric?\n    return password\n  end\nend\ngen_password\n"}}],"macros":[],"types":[{"html_id":"dppm/DPPM/Database/Base","path":"DPPM/Database/Base.html","kind":"module","full_name":"DPPM::Database::Base","name":"Base","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"src/database/base.cr","line_number":1,"url":"https://github.com/DFabric/dppm/blob/4a1bc37bc6872377dbc36759a4d46e84ec35bbb5/src/database/base.cr#L1"}],"repository_name":"dppm","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[{"html_id":"dppm/DPPM/Database/MySQL","kind":"struct","full_name":"DPPM::Database::MySQL","name":"MySQL"}],"namespace":{"html_id":"dppm/DPPM/Database","kind":"module","full_name":"DPPM::Database","name":"Database"},"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[{"id":"ensure_root_password(database_app:Prefix::App)-instance-method","html_id":"ensure_root_password(database_app:Prefix::App)-instance-method","name":"ensure_root_password","doc":null,"summary":null,"abstract":false,"args":[{"name":"database_app","doc":null,"default_value":"","external_name":"database_app","restriction":"Prefix::App"}],"args_string":"(database_app : Prefix::App)","source_link":"https://github.com/DFabric/dppm/blob/4a1bc37bc6872377dbc36759a4d46e84ec35bbb5/src/database/base.cr#L5","def":{"name":"ensure_root_password","args":[{"name":"database_app","doc":null,"default_value":"","external_name":"database_app","restriction":"Prefix::App"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"if !@uri.password\n  File.write(database_app.password_file, set_root_password)\n  File.chmod(database_app.password_file, 256)\nend"}},{"id":"uri:URI-instance-method","html_id":"uri:URI-instance-method","name":"uri","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : URI","source_link":"https://github.com/DFabric/dppm/blob/4a1bc37bc6872377dbc36759a4d46e84ec35bbb5/src/database/base.cr#L2","def":{"name":"uri","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"URI","visibility":"Public","body":"@uri"}},{"id":"user:String-instance-method","html_id":"user:String-instance-method","name":"user","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : String","source_link":"https://github.com/DFabric/dppm/blob/4a1bc37bc6872377dbc36759a4d46e84ec35bbb5/src/database/base.cr#L2","def":{"name":"user","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"String","visibility":"Public","body":"@user"}},{"id":"vars-instance-method","html_id":"vars-instance-method","name":"vars","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/DFabric/dppm/blob/4a1bc37bc6872377dbc36759a4d46e84ec35bbb5/src/database/base.cr#L12","def":{"name":"vars","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"{\"database_address\" => \"#{@uri.host}:#{@uri.port}\", \"database_port\" => @uri.port.to_s, \"database_host\" => @uri.hostname.not_nil!, \"database_user\" => @user, \"database_name\" => @user, \"database_type\" => @uri.scheme.not_nil!}"}}],"macros":[],"types":[]},{"html_id":"dppm/DPPM/Database/ConnectionError","path":"DPPM/Database/ConnectionError.html","kind":"class","full_name":"DPPM::Database::ConnectionError","name":"ConnectionError","abstract":false,"superclass":{"html_id":"dppm/Exception","kind":"class","full_name":"Exception","name":"Exception"},"ancestors":[{"html_id":"dppm/Exception","kind":"class","full_name":"Exception","name":"Exception"},{"html_id":"dppm/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"dppm/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/database.cr","line_number":8,"url":"https://github.com/DFabric/dppm/blob/4a1bc37bc6872377dbc36759a4d46e84ec35bbb5/src/database.cr#L8"}],"repository_name":"dppm","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"dppm/DPPM/Database","kind":"module","full_name":"DPPM::Database","name":"Database"},"doc":null,"summary":null,"class_methods":[],"constructors":[{"id":"new(uri:URI,cause:Exception)-class-method","html_id":"new(uri:URI,cause:Exception)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"uri","doc":null,"default_value":"","external_name":"uri","restriction":"URI"},{"name":"cause","doc":null,"default_value":"","external_name":"cause","restriction":"Exception"}],"args_string":"(uri : URI, cause : Exception)","source_link":"https://github.com/DFabric/dppm/blob/4a1bc37bc6872377dbc36759a4d46e84ec35bbb5/src/database.cr#L9","def":{"name":"new","args":[{"name":"uri","doc":null,"default_value":"","external_name":"uri","restriction":"URI"},{"name":"cause","doc":null,"default_value":"","external_name":"cause","restriction":"Exception"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"new(\"Can't connect to the database: #{uri}\", cause)"}}],"instance_methods":[],"macros":[],"types":[]},{"html_id":"dppm/DPPM/Database/DatabasePresentException","path":"DPPM/Database/DatabasePresentException.html","kind":"class","full_name":"DPPM::Database::DatabasePresentException","name":"DatabasePresentException","abstract":false,"superclass":{"html_id":"dppm/Exception","kind":"class","full_name":"Exception","name":"Exception"},"ancestors":[{"html_id":"dppm/Exception","kind":"class","full_name":"Exception","name":"Exception"},{"html_id":"dppm/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"dppm/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/database.cr","line_number":14,"url":"https://github.com/DFabric/dppm/blob/4a1bc37bc6872377dbc36759a4d46e84ec35bbb5/src/database.cr#L14"}],"repository_name":"dppm","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"dppm/DPPM/Database","kind":"module","full_name":"DPPM::Database","name":"Database"},"doc":null,"summary":null,"class_methods":[],"constructors":[{"id":"new(uri:URI,user:String)-class-method","html_id":"new(uri:URI,user:String)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"uri","doc":null,"default_value":"","external_name":"uri","restriction":"URI"},{"name":"user","doc":null,"default_value":"","external_name":"user","restriction":"String"}],"args_string":"(uri : URI, user : String)","source_link":"https://github.com/DFabric/dppm/blob/4a1bc37bc6872377dbc36759a4d46e84ec35bbb5/src/database.cr#L15","def":{"name":"new","args":[{"name":"uri","doc":null,"default_value":"","external_name":"uri","restriction":"URI"},{"name":"user","doc":null,"default_value":"","external_name":"user","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"new(\"Database already present in #{uri.scheme}: \" + user)"}}],"instance_methods":[],"macros":[],"types":[]},{"html_id":"dppm/DPPM/Database/MySQL","path":"DPPM/Database/MySQL.html","kind":"struct","full_name":"DPPM::Database::MySQL","name":"MySQL","abstract":false,"superclass":{"html_id":"dppm/Struct","kind":"struct","full_name":"Struct","name":"Struct"},"ancestors":[{"html_id":"dppm/DPPM/Database/Base","kind":"module","full_name":"DPPM::Database::Base","name":"Base"},{"html_id":"dppm/Struct","kind":"struct","full_name":"Struct","name":"Struct"},{"html_id":"dppm/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"dppm/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/database/mysql.cr","line_number":3,"url":"https://github.com/DFabric/dppm/blob/4a1bc37bc6872377dbc36759a4d46e84ec35bbb5/src/database/mysql.cr#L3"}],"repository_name":"dppm","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[{"html_id":"dppm/DPPM/Database/Base","kind":"module","full_name":"DPPM::Database::Base","name":"Base"}],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"dppm/DPPM/Database","kind":"module","full_name":"DPPM::Database","name":"Database"},"doc":null,"summary":null,"class_methods":[],"constructors":[{"id":"new(uri:URI,user:String)-class-method","html_id":"new(uri:URI,user:String)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"uri","doc":null,"default_value":"","external_name":"uri","restriction":"URI"},{"name":"user","doc":null,"default_value":"","external_name":"user","restriction":"String"}],"args_string":"(uri : URI, user : String)","source_link":"https://github.com/DFabric/dppm/blob/4a1bc37bc6872377dbc36759a4d46e84ec35bbb5/src/database/mysql.cr#L6","def":{"name":"new","args":[{"name":"uri","doc":null,"default_value":"","external_name":"uri","restriction":"URI"},{"name":"user","doc":null,"default_value":"","external_name":"user","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(uri, user)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"check_connection-instance-method","html_id":"check_connection-instance-method","name":"check_connection","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/DFabric/dppm/blob/4a1bc37bc6872377dbc36759a4d46e84ec35bbb5/src/database/mysql.cr#L17","def":{"name":"check_connection","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"open do\nend"}},{"id":"check_user-instance-method","html_id":"check_user-instance-method","name":"check_user","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/DFabric/dppm/blob/4a1bc37bc6872377dbc36759a4d46e84ec35bbb5/src/database/mysql.cr#L21","def":{"name":"check_user","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"open do |db|\n  (db.unprepared(\"SELECT User FROM mysql.user WHERE User = '#{@user}'\")).query do |rs|\n    if database_exists?(db)\n      raise(DatabasePresentException.new(@uri, @user))\n    end\n    rs.each do\n      raise(UserPresentException.new(@uri, @user))\n    end\n  end\nend"}},{"id":"clean-instance-method","html_id":"clean-instance-method","name":"clean","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/DFabric/dppm/blob/4a1bc37bc6872377dbc36759a4d46e84ec35bbb5/src/database/mysql.cr#L53","def":{"name":"clean","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"open do |db|\n  (db.unprepared(\"SELECT user, host FROM mysql.user\")).query do |rs|\n    rs.each do\n      user = rs.read(String)\n      hostname = rs.read(String)\n      if (user.starts_with?('_')) && (!(database_exists?(db, user)))\n        (db.unprepared(\"DROP USER '#{user}'@'#{hostname}'\")).exec\n      end\n    end\n  end\n  flush(db)\nend"}},{"id":"create(password:String)-instance-method","html_id":"create(password:String)-instance-method","name":"create","doc":null,"summary":null,"abstract":false,"args":[{"name":"password","doc":null,"default_value":"","external_name":"password","restriction":"String"}],"args_string":"(password : String)","source_link":"https://github.com/DFabric/dppm/blob/4a1bc37bc6872377dbc36759a4d46e84ec35bbb5/src/database/mysql.cr#L41","def":{"name":"create","args":[{"name":"password","doc":null,"default_value":"","external_name":"password","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"open do |db|\n  begin\n    (db.unprepared(\"CREATE DATABASE #{@user}\")).exec\n    (db.unprepared(\"GRANT USAGE ON *.* TO '#{@user}'@'#{@uri.hostname}' IDENTIFIED BY '#{password}'\")).exec\n    (db.unprepared(\"GRANT ALL PRIVILEGES ON #{@user}.* TO '#{@user}'@'#{@uri.hostname}'\")).exec\n    flush(db)\n  rescue ex\n    delete\n    raise(ex)\n  end\nend"}},{"id":"delete-instance-method","html_id":"delete-instance-method","name":"delete","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/DFabric/dppm/blob/4a1bc37bc6872377dbc36759a4d46e84ec35bbb5/src/database/mysql.cr#L68","def":{"name":"delete","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"open do |__arg1|\n  (__arg1.unprepared(\"DROP DATABASE IF EXISTS #{@user}\")).exec\nend"}},{"id":"flush(db:DB::Database)-instance-method","html_id":"flush(db:DB::Database)-instance-method","name":"flush","doc":null,"summary":null,"abstract":false,"args":[{"name":"db","doc":null,"default_value":"","external_name":"db","restriction":"DB::Database"}],"args_string":"(db : DB::Database)","source_link":"https://github.com/DFabric/dppm/blob/4a1bc37bc6872377dbc36759a4d46e84ec35bbb5/src/database/mysql.cr#L80","def":{"name":"flush","args":[{"name":"db","doc":null,"default_value":"","external_name":"db","restriction":"DB::Database"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"(db.unprepared(\"FLUSH PRIVILEGES\")).exec"}},{"id":"open(&block:DB::Database->)-instance-method","html_id":"open(&block:DB::Database->)-instance-method","name":"open","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"(&block : DB::Database -> )","source_link":"https://github.com/DFabric/dppm/blob/4a1bc37bc6872377dbc36759a4d46e84ec35bbb5/src/database/mysql.cr#L72","def":{"name":"open","args":[],"double_splat":null,"splat_index":null,"yields":1,"block_arg":{"name":"block","doc":null,"default_value":"","external_name":"block","restriction":"(DB::Database -> )"},"return_type":"","visibility":"Public","body":"begin\n  DB.open(@uri) do |db|\n    yield db\n  end\nrescue ex : DB::Error\n  raise(ConnectionError.new(@uri, ex))\nend"}},{"id":"set_root_password:String-instance-method","html_id":"set_root_password:String-instance-method","name":"set_root_password","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : String","source_link":"https://github.com/DFabric/dppm/blob/4a1bc37bc6872377dbc36759a4d46e84ec35bbb5/src/database/mysql.cr#L32","def":{"name":"set_root_password","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"String","visibility":"Public","body":"password = Database.gen_password\nopen do |db|\n  (db.unprepared(\"ALTER USER 'root'@'%' IDENTIFIED BY '#{password}'\")).exec\n  flush(db)\nend\n@uri.password = password\n"}}],"macros":[],"types":[]},{"html_id":"dppm/DPPM/Database/UserPresentException","path":"DPPM/Database/UserPresentException.html","kind":"class","full_name":"DPPM::Database::UserPresentException","name":"UserPresentException","abstract":false,"superclass":{"html_id":"dppm/Exception","kind":"class","full_name":"Exception","name":"Exception"},"ancestors":[{"html_id":"dppm/Exception","kind":"class","full_name":"Exception","name":"Exception"},{"html_id":"dppm/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"dppm/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/database.cr","line_number":20,"url":"https://github.com/DFabric/dppm/blob/4a1bc37bc6872377dbc36759a4d46e84ec35bbb5/src/database.cr#L20"}],"repository_name":"dppm","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"dppm/DPPM/Database","kind":"module","full_name":"DPPM::Database","name":"Database"},"doc":null,"summary":null,"class_methods":[],"constructors":[{"id":"new(uri:URI,user:String)-class-method","html_id":"new(uri:URI,user:String)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"uri","doc":null,"default_value":"","external_name":"uri","restriction":"URI"},{"name":"user","doc":null,"default_value":"","external_name":"user","restriction":"String"}],"args_string":"(uri : URI, user : String)","source_link":"https://github.com/DFabric/dppm/blob/4a1bc37bc6872377dbc36759a4d46e84ec35bbb5/src/database.cr#L21","def":{"name":"new","args":[{"name":"uri","doc":null,"default_value":"","external_name":"uri","restriction":"URI"},{"name":"user","doc":null,"default_value":"","external_name":"user","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"new(\"User already present in #{uri.scheme}: \" + user)"}}],"instance_methods":[],"macros":[],"types":[]}]},{"html_id":"dppm/DPPM/Error","path":"DPPM/Error.html","kind":"class","full_name":"DPPM::Error","name":"Error","abstract":false,"superclass":{"html_id":"dppm/Exception","kind":"class","full_name":"Exception","name":"Exception"},"ancestors":[{"html_id":"dppm/Exception","kind":"class","full_name":"Exception","name":"Exception"},{"html_id":"dppm/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"dppm/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/dppm.cr","line_number":2,"url":"https://github.com/DFabric/dppm/blob/4a1bc37bc6872377dbc36759a4d46e84ec35bbb5/src/dppm.cr#L2"}],"repository_name":"dppm","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"dppm/DPPM","kind":"module","full_name":"DPPM","name":"DPPM"},"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[]},{"html_id":"dppm/DPPM/Host","path":"DPPM/Host.html","kind":"module","full_name":"DPPM::Host","name":"Host","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"src/host.cr","line_number":34,"url":"https://github.com/DFabric/dppm/blob/4a1bc37bc6872377dbc36759a4d46e84ec35bbb5/src/host.cr#L34"}],"repository_name":"dppm","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"dppm/DPPM","kind":"module","full_name":"DPPM","name":"DPPM"},"doc":null,"summary":null,"class_methods":[{"id":"arch-class-method","html_id":"arch-class-method","name":"arch","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":null,"def":{"name":"arch","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@@arch"}},{"id":"exec(command:String,args:Array(String)|Tuple):String-class-method","html_id":"exec(command:String,args:Array(String)|Tuple):String-class-method","name":"exec","doc":null,"summary":null,"abstract":false,"args":[{"name":"command","doc":null,"default_value":"","external_name":"command","restriction":"String"},{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":"Array(String) | Tuple"}],"args_string":"(command : String, args : Array(String) | Tuple) : String","source_link":"https://github.com/DFabric/dppm/blob/4a1bc37bc6872377dbc36759a4d46e84ec35bbb5/src/host.cr#L80","def":{"name":"exec","args":[{"name":"command","doc":null,"default_value":"","external_name":"command","restriction":"String"},{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":"Array(String) | Tuple"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"String","visibility":"Public","body":"Exec.new(command, args, output: DPPM::Logger.output, error: DPPM::Logger.error) do |process|\n  if !process.wait.success?\n    raise(\"Execution returned an error: #{command} #{args.join(' ')}\")\n  end\nend\n\"success\"\n"}},{"id":"kernel-class-method","html_id":"kernel-class-method","name":"kernel","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":null,"def":{"name":"kernel","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@@kernel"}},{"id":"kernel_ver:String-class-method","html_id":"kernel_ver:String-class-method","name":"kernel_ver","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : String","source_link":"https://github.com/DFabric/dppm/blob/4a1bc37bc6872377dbc36759a4d46e84ec35bbb5/src/host.cr#L35","def":{"name":"kernel_ver","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"String","visibility":"Public","body":"@@kernel_ver"}},{"id":"service_available?-class-method","html_id":"service_available?-class-method","name":"service_available?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/DFabric/dppm/blob/4a1bc37bc6872377dbc36759a4d46e84ec35bbb5/src/host.cr#L63","def":{"name":"service_available?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Service.init? || (Logger.warn(\"services management unavailable\", \"DPPM is still usable. Consider OpenRC or systemd init systems\"))\nService.init?\n"}},{"id":"vars-class-method","html_id":"vars-class-method","name":"vars","doc":"All system environment variables","summary":"<p>All system environment variables</p>","abstract":false,"args":[],"args_string":"","source_link":"https://github.com/DFabric/dppm/blob/4a1bc37bc6872377dbc36759a4d46e84ec35bbb5/src/host.cr#L69","def":{"name":"vars","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"if (value = @@vars).nil?\n  @@vars = (begin\n    service_available?\n    {\"arch\" => @@arch, \"kernel\" => @@kernel, \"kernel_ver\" => @@kernel_ver, \"sysinit\" => (if Service.init?\n      Service.init.type\n    end).to_s, \"sysinit_ver\" => (if Service.init?\n      Service.init.version\n    end).to_s}\n  end)\nelse\n  value\nend"}}],"constructors":[],"instance_methods":[],"macros":[],"types":[]},{"html_id":"dppm/DPPM/HTTPHelper","path":"DPPM/HTTPHelper.html","kind":"module","full_name":"DPPM::HTTPHelper","name":"HTTPHelper","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"src/http_helper.cr","line_number":11,"url":"https://github.com/DFabric/dppm/blob/4a1bc37bc6872377dbc36759a4d46e84ec35bbb5/src/http_helper.cr#L11"}],"repository_name":"dppm","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[{"html_id":"dppm/DPPM/HTTPHelper","kind":"module","full_name":"DPPM::HTTPHelper","name":"HTTPHelper"}],"subclasses":[],"including_types":[],"namespace":{"html_id":"dppm/DPPM","kind":"module","full_name":"DPPM","name":"DPPM"},"doc":"Method for redirections using the stdlib http client","summary":"<p>Method for redirections using the stdlib http client</p>","class_methods":[],"constructors":[],"instance_methods":[{"id":"get_file(url:String,path:String=File.basename(url))-instance-method","html_id":"get_file(url:String,path:String=File.basename(url))-instance-method","name":"get_file","doc":null,"summary":null,"abstract":false,"args":[{"name":"url","doc":null,"default_value":"","external_name":"url","restriction":"String"},{"name":"path","doc":null,"default_value":"File.basename(url)","external_name":"path","restriction":"String"}],"args_string":"(url : String, path : String = <span class=\"t\">File</span>.basename(url))","source_link":"https://github.com/DFabric/dppm/blob/4a1bc37bc6872377dbc36759a4d46e84ec35bbb5/src/http_helper.cr#L30","def":{"name":"get_file","args":[{"name":"url","doc":null,"default_value":"","external_name":"url","restriction":"String"},{"name":"path","doc":null,"default_value":"File.basename(url)","external_name":"path","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"File.write(path, self.get_string(url))"}},{"id":"get_string(url,headers=nil,redirection=0)-instance-method","html_id":"get_string(url,headers=nil,redirection=0)-instance-method","name":"get_string","doc":null,"summary":null,"abstract":false,"args":[{"name":"url","doc":null,"default_value":"","external_name":"url","restriction":""},{"name":"headers","doc":null,"default_value":"nil","external_name":"headers","restriction":""},{"name":"redirection","doc":null,"default_value":"0","external_name":"redirection","restriction":""}],"args_string":"(url, headers = <span class=\"n\">nil</span>, redirection = <span class=\"n\">0</span>)","source_link":"https://github.com/DFabric/dppm/blob/4a1bc37bc6872377dbc36759a4d46e84ec35bbb5/src/http_helper.cr#L14","def":{"name":"get_string","args":[{"name":"url","doc":null,"default_value":"","external_name":"url","restriction":""},{"name":"headers","doc":null,"default_value":"nil","external_name":"headers","restriction":""},{"name":"redirection","doc":null,"default_value":"0","external_name":"redirection","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"begin\n  if redirection > REDIRECT_THRESH\n    raise(\"Probable redirection loop\")\n  end\n  response = HTTP::Client.get(url, headers)\n  case response.status\n  when .success?\n    response.body? || response.body_io.gets_to_end\n  when .redirection?\n    get_string(url: response.headers[\"Location\"], headers: headers, redirection: redirection + 1)\n  else\n    raise(\"Server returned \\\"#{response.status}\\\" status\")\n  end\nrescue ex\n  raise(Error.new(\"Failed to get #{url.colorize.underline}\", cause: ex))\nend"}},{"id":"url?(link):Bool-instance-method","html_id":"url?(link):Bool-instance-method","name":"url?","doc":null,"summary":null,"abstract":false,"args":[{"name":"link","doc":null,"default_value":"","external_name":"link","restriction":""}],"args_string":"(link) : Bool","source_link":"https://github.com/DFabric/dppm/blob/4a1bc37bc6872377dbc36759a4d46e84ec35bbb5/src/http_helper.cr#L34","def":{"name":"url?","args":[{"name":"link","doc":null,"default_value":"","external_name":"link","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Bool","visibility":"Public","body":"(link.starts_with?(\"http://\")) || (link.starts_with?(\"https://\"))"}}],"macros":[],"types":[]},{"html_id":"dppm/DPPM/Logger","path":"DPPM/Logger.html","kind":"module","full_name":"DPPM::Logger","name":"Logger","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"src/logger.cr","line_number":3,"url":"https://github.com/DFabric/dppm/blob/4a1bc37bc6872377dbc36759a4d46e84ec35bbb5/src/logger.cr#L3"}],"repository_name":"dppm","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[{"html_id":"dppm/DPPM/Logger","kind":"module","full_name":"DPPM::Logger","name":"Logger"}],"subclasses":[],"including_types":[],"namespace":{"html_id":"dppm/DPPM","kind":"module","full_name":"DPPM","name":"DPPM"},"doc":null,"summary":null,"class_methods":[{"id":"colorize:Bool-class-method","html_id":"colorize:Bool-class-method","name":"colorize","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Bool","source_link":"https://github.com/DFabric/dppm/blob/4a1bc37bc6872377dbc36759a4d46e84ec35bbb5/src/logger.cr#L7","def":{"name":"colorize","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Bool","visibility":"Public","body":"@@colorize"}},{"id":"colorize=(colorize:Bool)-class-method","html_id":"colorize=(colorize:Bool)-class-method","name":"colorize=","doc":null,"summary":null,"abstract":false,"args":[{"name":"colorize","doc":null,"default_value":"","external_name":"colorize","restriction":"Bool"}],"args_string":"(colorize : Bool)","source_link":"https://github.com/DFabric/dppm/blob/4a1bc37bc6872377dbc36759a4d46e84ec35bbb5/src/logger.cr#L7","def":{"name":"colorize=","args":[{"name":"colorize","doc":null,"default_value":"","external_name":"colorize","restriction":"Bool"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@@colorize = colorize"}},{"id":"date:Bool-class-method","html_id":"date:Bool-class-method","name":"date","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Bool","source_link":"https://github.com/DFabric/dppm/blob/4a1bc37bc6872377dbc36759a4d46e84ec35bbb5/src/logger.cr#L8","def":{"name":"date","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Bool","visibility":"Public","body":"@@date"}},{"id":"date=(date:Bool)-class-method","html_id":"date=(date:Bool)-class-method","name":"date=","doc":null,"summary":null,"abstract":false,"args":[{"name":"date","doc":null,"default_value":"","external_name":"date","restriction":"Bool"}],"args_string":"(date : Bool)","source_link":"https://github.com/DFabric/dppm/blob/4a1bc37bc6872377dbc36759a4d46e84ec35bbb5/src/logger.cr#L8","def":{"name":"date=","args":[{"name":"date","doc":null,"default_value":"","external_name":"date","restriction":"Bool"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@@date = date"}},{"id":"error:IO::FileDescriptor-class-method","html_id":"error:IO::FileDescriptor-class-method","name":"error","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : IO::FileDescriptor","source_link":"https://github.com/DFabric/dppm/blob/4a1bc37bc6872377dbc36759a4d46e84ec35bbb5/src/logger.cr#L6","def":{"name":"error","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"IO::FileDescriptor","visibility":"Public","body":"@@error"}},{"id":"error=(error:IO::FileDescriptor)-class-method","html_id":"error=(error:IO::FileDescriptor)-class-method","name":"error=","doc":null,"summary":null,"abstract":false,"args":[{"name":"error","doc":null,"default_value":"","external_name":"error","restriction":"IO::FileDescriptor"}],"args_string":"(error : IO::FileDescriptor)","source_link":"https://github.com/DFabric/dppm/blob/4a1bc37bc6872377dbc36759a4d46e84ec35bbb5/src/logger.cr#L6","def":{"name":"error=","args":[{"name":"error","doc":null,"default_value":"","external_name":"error","restriction":"IO::FileDescriptor"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@@error = error"}},{"id":"output:IO::FileDescriptor-class-method","html_id":"output:IO::FileDescriptor-class-method","name":"output","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : IO::FileDescriptor","source_link":"https://github.com/DFabric/dppm/blob/4a1bc37bc6872377dbc36759a4d46e84ec35bbb5/src/logger.cr#L5","def":{"name":"output","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"IO::FileDescriptor","visibility":"Public","body":"@@output"}},{"id":"output=(output:IO::FileDescriptor)-class-method","html_id":"output=(output:IO::FileDescriptor)-class-method","name":"output=","doc":null,"summary":null,"abstract":false,"args":[{"name":"output","doc":null,"default_value":"","external_name":"output","restriction":"IO::FileDescriptor"}],"args_string":"(output : IO::FileDescriptor)","source_link":"https://github.com/DFabric/dppm/blob/4a1bc37bc6872377dbc36759a4d46e84ec35bbb5/src/logger.cr#L5","def":{"name":"output=","args":[{"name":"output","doc":null,"default_value":"","external_name":"output","restriction":"IO::FileDescriptor"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@@output = output"}}],"constructors":[],"instance_methods":[{"id":"error(ex:Exception)-instance-method","html_id":"error(ex:Exception)-instance-method","name":"error","doc":null,"summary":null,"abstract":false,"args":[{"name":"ex","doc":null,"default_value":"","external_name":"ex","restriction":"Exception"}],"args_string":"(ex : Exception)","source_link":"https://github.com/DFabric/dppm/blob/4a1bc37bc6872377dbc36759a4d46e84ec35bbb5/src/logger.cr#L48","def":{"name":"error","args":[{"name":"ex","doc":null,"default_value":"","external_name":"ex","restriction":"Exception"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"print_error(ex)\nif cause = ex.cause\n  error(cause)\nend\n"}},{"id":"error(message)-instance-method","html_id":"error(message)-instance-method","name":"error","doc":null,"summary":null,"abstract":false,"args":[{"name":"message","doc":null,"default_value":"","external_name":"message","restriction":""}],"args_string":"(message)","source_link":"https://github.com/DFabric/dppm/blob/4a1bc37bc6872377dbc36759a4d46e84ec35bbb5/src/logger.cr#L34","def":{"name":"error","args":[{"name":"message","doc":null,"default_value":"","external_name":"message","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"print_error(message)"}},{"id":"finalize-instance-method","html_id":"finalize-instance-method","name":"finalize","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/DFabric/dppm/blob/4a1bc37bc6872377dbc36759a4d46e84ec35bbb5/src/logger.cr#L55","def":{"name":"finalize","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@@output.close\n@@error.close\n"}},{"id":"info(title:String,message):Nil-instance-method","html_id":"info(title:String,message):Nil-instance-method","name":"info","doc":null,"summary":null,"abstract":false,"args":[{"name":"title","doc":null,"default_value":"","external_name":"title","restriction":"String"},{"name":"message","doc":null,"default_value":"","external_name":"message","restriction":""}],"args_string":"(title : String, message) : Nil","source_link":"https://github.com/DFabric/dppm/blob/4a1bc37bc6872377dbc36759a4d46e84ec35bbb5/src/logger.cr#L14","def":{"name":"info","args":[{"name":"title","doc":null,"default_value":"","external_name":"title","restriction":"String"},{"name":"message","doc":null,"default_value":"","external_name":"message","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Nil","visibility":"Public","body":"print_date(@@output)\nif @@colorize\n  (((((@@output << (\"INFO\".colorize.blue.mode(:bold))) << ' ') << title.colorize.white) << \": \") << message) << '\\n'\nelse\n  ((((@@output << \"INFO \\\"\") << title) << \": \") << message) << \"\\\"\\n\"\nend\n@@output.flush\n"}},{"id":"print_date(io)-instance-method","html_id":"print_date(io)-instance-method","name":"print_date","doc":null,"summary":null,"abstract":false,"args":[{"name":"io","doc":null,"default_value":"","external_name":"io","restriction":""}],"args_string":"(io)","source_link":"https://github.com/DFabric/dppm/blob/4a1bc37bc6872377dbc36759a4d46e84ec35bbb5/src/logger.cr#L10","def":{"name":"print_date","args":[{"name":"io","doc":null,"default_value":"","external_name":"io","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"if @@date\n  Time.utc.to_s(io, \"%F %T%z \")\nend"}},{"id":"warn(title:String,message):Nil-instance-method","html_id":"warn(title:String,message):Nil-instance-method","name":"warn","doc":null,"summary":null,"abstract":false,"args":[{"name":"title","doc":null,"default_value":"","external_name":"title","restriction":"String"},{"name":"message","doc":null,"default_value":"","external_name":"message","restriction":""}],"args_string":"(title : String, message) : Nil","source_link":"https://github.com/DFabric/dppm/blob/4a1bc37bc6872377dbc36759a4d46e84ec35bbb5/src/logger.cr#L24","def":{"name":"warn","args":[{"name":"title","doc":null,"default_value":"","external_name":"title","restriction":"String"},{"name":"message","doc":null,"default_value":"","external_name":"message","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Nil","visibility":"Public","body":"print_date(@@error)\nif @@colorize\n  (((((@@error << (\"WARN\".colorize.yellow.mode(:bold))) << ' ') << (title.colorize.white.mode(:bold))) << \": \") << message) << '\\n'\nelse\n  (((@@error << \"WARN \\\"\") << title) << \": \") << \"message\\\"\\n\"\nend\n@@error.flush\n"}}],"macros":[],"types":[]},{"html_id":"dppm/DPPM/Prefix","path":"DPPM/Prefix.html","kind":"struct","full_name":"DPPM::Prefix","name":"Prefix","abstract":false,"superclass":{"html_id":"dppm/Struct","kind":"struct","full_name":"Struct","name":"Struct"},"ancestors":[{"html_id":"dppm/Struct","kind":"struct","full_name":"Struct","name":"Struct"},{"html_id":"dppm/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"dppm/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/prefix.cr","line_number":13,"url":"https://github.com/DFabric/dppm/blob/4a1bc37bc6872377dbc36759a4d46e84ec35bbb5/src/prefix.cr#L13"}],"repository_name":"dppm","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"dppm/DPPM","kind":"module","full_name":"DPPM","name":"DPPM"},"doc":null,"summary":null,"class_methods":[{"id":"default-class-method","html_id":"default-class-method","name":"default","doc":"Default prefix for a DPPM installation.","summary":"<p>Default prefix for a DPPM installation.</p>","abstract":false,"args":[],"args_string":"","source_link":"https://github.com/DFabric/dppm/blob/4a1bc37bc6872377dbc36759a4d46e84ec35bbb5/src/prefix.cr#L15","def":{"name":"default","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"if (value = @@default).nil?\n  @@default = (if (current_dir = Dir.current).ends_with?(\"app/dppm\")\n    Path[current_dir].parent.parent.parent.parent.parent.parent.to_s\n  else\n    if File.exists?(\"/usr/local/bin/dppm\")\n      Path[File.real_path(\"/usr/local/bin/dppm\")].parent.parent.parent.parent.parent.parent.to_s\n    else\n      if Process.root? && (Dir.exists?(\"/srv\"))\n        \"/srv/dppm\"\n      else\n        if xdg_data_home = ENV[\"XDG_DATA_HOME\"]?\n          xdg_data_home + \"/dppm\"\n        else\n          ENV[\"HOME\"] + \"/.dppm\"\n        end\n      end\n    end\n  end)\nelse\n  value\nend"}},{"id":"default_dppm_config-class-method","html_id":"default_dppm_config-class-method","name":"default_dppm_config","doc":"Default DPPM configuration.","summary":"<p>Default DPPM configuration.</p>","abstract":false,"args":[],"args_string":"","source_link":"https://github.com/DFabric/dppm/blob/4a1bc37bc6872377dbc36759a4d46e84ec35bbb5/src/prefix.cr#L30","def":{"name":"default_dppm_config","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@@default_dppm_config"}},{"id":"default_group:String-class-method","html_id":"default_group:String-class-method","name":"default_group","doc":"Default group namespace where installing applications.","summary":"<p>Default group namespace where installing applications.</p>","abstract":false,"args":[],"args_string":" : String","source_link":"https://github.com/DFabric/dppm/blob/4a1bc37bc6872377dbc36759a4d46e84ec35bbb5/src/prefix.cr#L33","def":{"name":"default_group","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"String","visibility":"Public","body":"@@default_group"}},{"id":"default_source_name:String-class-method","html_id":"default_source_name:String-class-method","name":"default_source_name","doc":"Default source name to get packages.","summary":"<p>Default source name to get packages.</p>","abstract":false,"args":[],"args_string":" : String","source_link":"https://github.com/DFabric/dppm/blob/4a1bc37bc6872377dbc36759a4d46e84ec35bbb5/src/prefix.cr#L36","def":{"name":"default_source_name","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"String","visibility":"Public","body":"@@default_source_name"}}],"constructors":[{"id":"new(path:String,group:String=@@default_group,source_name:String=@@default_source_name,source_path:String?=nil)-class-method","html_id":"new(path:String,group:String=@@default_group,source_name:String=@@default_source_name,source_path:String?=nil)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"path","doc":null,"default_value":"","external_name":"path","restriction":"String"},{"name":"group","doc":null,"default_value":"@@default_group","external_name":"group","restriction":"String"},{"name":"source_name","doc":null,"default_value":"@@default_source_name","external_name":"source_name","restriction":"String"},{"name":"source_path","doc":null,"default_value":"nil","external_name":"source_path","restriction":"String | ::Nil"}],"args_string":"(path : String, group : String = @@default_group, source_name : String = @@default_source_name, source_path : String? = <span class=\"n\">nil</span>)","source_link":"https://github.com/DFabric/dppm/blob/4a1bc37bc6872377dbc36759a4d46e84ec35bbb5/src/prefix.cr#L70","def":{"name":"new","args":[{"name":"path","doc":null,"default_value":"","external_name":"path","restriction":"String"},{"name":"group","doc":null,"default_value":"@@default_group","external_name":"group","restriction":"String"},{"name":"source_name","doc":null,"default_value":"@@default_source_name","external_name":"source_name","restriction":"String"},{"name":"source_path","doc":null,"default_value":"nil","external_name":"source_path","restriction":"String | ::Nil"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(path, group, source_name, source_path)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"app:Path-instance-method","html_id":"app:Path-instance-method","name":"app","doc":"Application path, including the `group` namespace.","summary":"<p>Application path, including the <code><a href=\"../DPPM/Prefix.html#group:String-instance-method\">#group</a></code> namespace.</p>","abstract":false,"args":[],"args_string":" : Path","source_link":"https://github.com/DFabric/dppm/blob/4a1bc37bc6872377dbc36759a4d46e84ec35bbb5/src/prefix.cr#L57","def":{"name":"app","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Path","visibility":"Public","body":"@app"}},{"id":"check-instance-method","html_id":"check-instance-method","name":"check","doc":"Raises if DPPM isn't installated.","summary":"<p>Raises if DPPM isn't installated.</p>","abstract":false,"args":[],"args_string":"","source_link":"https://github.com/DFabric/dppm/blob/4a1bc37bc6872377dbc36759a4d46e84ec35bbb5/src/prefix.cr#L95","def":{"name":"check","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"if !dppm.exists?\n  raise(\"DPPM isn't installed in #{@path}. Run `dppm app install`\")\nend"}},{"id":"clean_unused_packages(confirmation:Bool=true,&):Set(String)-instance-method","html_id":"clean_unused_packages(confirmation:Bool=true,&):Set(String)-instance-method","name":"clean_unused_packages","doc":null,"summary":null,"abstract":false,"args":[{"name":"confirmation","doc":null,"default_value":"true","external_name":"confirmation","restriction":"Bool"}],"args_string":"(confirmation : Bool = <span class=\"n\">true</span>, &) : Set(String)","source_link":"https://github.com/DFabric/dppm/blob/4a1bc37bc6872377dbc36759a4d46e84ec35bbb5/src/prefix.cr#L225","def":{"name":"clean_unused_packages","args":[{"name":"confirmation","doc":null,"default_value":"true","external_name":"confirmation","restriction":"Bool"}],"double_splat":null,"splat_index":null,"yields":0,"block_arg":null,"return_type":"Set(String)","visibility":"Public","body":"packages = Set(String).new\nLogger.info(\"retrieving available packages\", @pkg.to_s)\neach_pkg do |pkg|\n  packages << pkg.name\nend\nLogger.info(\"excluding used packages by applications\", @pkg.to_s)\neach_app do |app|\n  packages.delete(app.real_app_path.basename.to_s)\n  app.libs.each do |library|\n    packages.delete(library.name)\n  end\nend\nif packages.empty?\n  Logger.info(\"No packages to clean\", @path.to_s)\n  return packages\nelse\n  if confirmation\n    Logger.output << \"task: clean\"\n    (Logger.output << \"\\nbasedir: \") << @pkg\n    Logger.output << \"\\nunused packages: \\n\"\n    packages.each do |pkg|\n      (Logger.output << pkg) << '\\n'\n    end\n    if !(yield)\n      return packages\n    end\n  end\nend\nLogger.info(\"deleting packages\", @pkg.to_s)\npackages.each do |package|\n  pkg = new_pkg(package)\n  pkg.delete(confirmation: false) do\n  end\n  Logger.info(\"package deleted\", package)\nend\nLogger.info(\"packages cleaned\", @pkg.to_s)\npackages\n"}},{"id":"create-instance-method","html_id":"create-instance-method","name":"create","doc":"Create `#path` and all its subdirectories needed.","summary":"<p>Create <code><a href=\"../DPPM/Prefix.html#path:Path-instance-method\">#path</a></code> and all its subdirectories needed.</p>","abstract":false,"args":[],"args_string":"","source_link":"https://github.com/DFabric/dppm/blob/4a1bc37bc6872377dbc36759a4d46e84ec35bbb5/src/prefix.cr#L87","def":{"name":"create","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"{@path, @root_app, @root_pkg, @root_src, @app, @pkg}.each do |dir|\n  dir_str = dir.to_s\n  if !(Dir.exists?(dir_str))\n    Dir.mkdir(dir_str)\n  end\nend"}},{"id":"delete-instance-method","html_id":"delete-instance-method","name":"delete","doc":"Delete the prefix directory path.","summary":"<p>Delete the prefix directory path.</p>","abstract":false,"args":[],"args_string":"","source_link":"https://github.com/DFabric/dppm/blob/4a1bc37bc6872377dbc36759a4d46e84ec35bbb5/src/prefix.cr#L185","def":{"name":"delete","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"delete_src\nFileUtils.rm_rf(@path.to_s)\n"}},{"id":"delete_src-instance-method","html_id":"delete_src-instance-method","name":"delete_src","doc":"Delete the packages source `@src` directory.","summary":"<p>Delete the packages source <code>@src</code> directory.</p>","abstract":false,"args":[],"args_string":"","source_link":"https://github.com/DFabric/dppm/blob/4a1bc37bc6872377dbc36759a4d46e84ec35bbb5/src/prefix.cr#L176","def":{"name":"delete_src","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"if File.symlink?(@src.to_s)\n  File.delete(@src.to_s)\nelse\n  FileUtils.rm_rf(@src.to_s)\nend"}},{"id":"dppm:App-instance-method","html_id":"dppm:App-instance-method","name":"dppm","doc":"Returns the DPPM application.","summary":"<p>Returns the DPPM application.</p>","abstract":false,"args":[],"args_string":" : App","source_link":"https://github.com/DFabric/dppm/blob/4a1bc37bc6872377dbc36759a4d46e84ec35bbb5/src/prefix.cr#L100","def":{"name":"dppm","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"App","visibility":"Public","body":"new_app(\"dppm\")"}},{"id":"dppm_config:Config?-instance-method","html_id":"dppm_config:Config?-instance-method","name":"dppm_config","doc":"DPPM configuration.","summary":"<p>DPPM configuration.</p>","abstract":false,"args":[],"args_string":" : Config?","source_link":"https://github.com/DFabric/dppm/blob/4a1bc37bc6872377dbc36759a4d46e84ec35bbb5/src/prefix.cr#L105","def":{"name":"dppm_config","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Config | ::Nil","visibility":"Public","body":"if (value = @dppm_config).nil?\n  @dppm_config = (if config_file = dppm.config_file?\n    Config.new(File.read(config_file))\n  else\n    @@default_dppm_config\n  end)\nelse\n  value\nend"}},{"id":"dppm_config=(dppm_config:Config)-instance-method","html_id":"dppm_config=(dppm_config:Config)-instance-method","name":"dppm_config=","doc":"DPPM configuration.","summary":"<p>DPPM configuration.</p>","abstract":false,"args":[{"name":"dppm_config","doc":null,"default_value":"","external_name":"dppm_config","restriction":"Config"}],"args_string":"(dppm_config : Config)","source_link":"https://github.com/DFabric/dppm/blob/4a1bc37bc6872377dbc36759a4d46e84ec35bbb5/src/prefix.cr#L105","def":{"name":"dppm_config=","args":[{"name":"dppm_config","doc":null,"default_value":"","external_name":"dppm_config","restriction":"Config"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@dppm_config = dppm_config"}},{"id":"each_app(&block:App->)-instance-method","html_id":"each_app(&block:App->)-instance-method","name":"each_app","doc":"Yields each application in the group.","summary":"<p>Yields each application in the group.</p>","abstract":false,"args":[],"args_string":"(&block : App -> )","source_link":"https://github.com/DFabric/dppm/blob/4a1bc37bc6872377dbc36759a4d46e84ec35bbb5/src/prefix.cr#L114","def":{"name":"each_app","args":[],"double_splat":null,"splat_index":null,"yields":1,"block_arg":{"name":"block","doc":null,"default_value":"","external_name":"block","restriction":"(App -> )"},"return_type":"","visibility":"Public","body":"if File.exists?(@app.to_s)\n  Dir.each_child(@app.to_s) do |dir|\n    yield App.new(self, dir)\n  end\nend"}},{"id":"each_pkg(&block:Pkg->)-instance-method","html_id":"each_pkg(&block:Pkg->)-instance-method","name":"each_pkg","doc":"Yields each built package of the source.","summary":"<p>Yields each built package of the source.</p>","abstract":false,"args":[],"args_string":"(&block : Pkg -> )","source_link":"https://github.com/DFabric/dppm/blob/4a1bc37bc6872377dbc36759a4d46e84ec35bbb5/src/prefix.cr#L123","def":{"name":"each_pkg","args":[],"double_splat":null,"splat_index":null,"yields":1,"block_arg":{"name":"block","doc":null,"default_value":"","external_name":"block","restriction":"(Pkg -> )"},"return_type":"","visibility":"Public","body":"if File.exists?(@pkg.to_s)\n  Dir.each_child(@pkg.to_s) do |dir|\n    yield Pkg.new(self, dir)\n  end\nend"}},{"id":"each_src(&block:Src->)-instance-method","html_id":"each_src(&block:Src->)-instance-method","name":"each_src","doc":"Yields each source package of the source.","summary":"<p>Yields each source package of the source.</p>","abstract":false,"args":[],"args_string":"(&block : Src -> )","source_link":"https://github.com/DFabric/dppm/blob/4a1bc37bc6872377dbc36759a4d46e84ec35bbb5/src/prefix.cr#L132","def":{"name":"each_src","args":[],"double_splat":null,"splat_index":null,"yields":1,"block_arg":{"name":"block","doc":null,"default_value":"","external_name":"block","restriction":"(Src -> )"},"return_type":"","visibility":"Public","body":"if File.exists?(@src.to_s)\n  Dir.each_child(@src.to_s) do |dir|\n    if dir[0].ascii_lowercase?\n      yield Src.new(self, dir)\n    end\n  end\nend"}},{"id":"group:String-instance-method","html_id":"group:String-instance-method","name":"group","doc":"Application group namespace used.","summary":"<p>Application group namespace used.</p>","abstract":false,"args":[],"args_string":" : String","source_link":"https://github.com/DFabric/dppm/blob/4a1bc37bc6872377dbc36759a4d46e84ec35bbb5/src/prefix.cr#L39","def":{"name":"group","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"String","visibility":"Public","body":"@group"}},{"id":"new_app(name:String):App-instance-method","html_id":"new_app(name:String):App-instance-method","name":"new_app","doc":"Creates a new `App` application object.","summary":"<p>Creates a new <code><a href=\"../DPPM/Prefix/App.html\">App</a></code> application object.</p>","abstract":false,"args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":"String"}],"args_string":"(name : String) : App","source_link":"https://github.com/DFabric/dppm/blob/4a1bc37bc6872377dbc36759a4d46e84ec35bbb5/src/prefix.cr#L141","def":{"name":"new_app","args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"App","visibility":"Public","body":"App.new(self, name)"}},{"id":"new_pkg(package:String,version:String?=nil,tag:String?=nil):Pkg-instance-method","html_id":"new_pkg(package:String,version:String?=nil,tag:String?=nil):Pkg-instance-method","name":"new_pkg","doc":"Creates a new `Pkg` package object.\nA package name includes the package and optionally a version/tag separated by either a `_` or `:`.\nIf no version is provided, latest one will be used.","summary":"<p>Creates a new <code><a href=\"../DPPM/Prefix/Pkg.html\">Pkg</a></code> package object.</p>","abstract":false,"args":[{"name":"package","doc":null,"default_value":"","external_name":"package","restriction":"String"},{"name":"version","doc":null,"default_value":"nil","external_name":"version","restriction":"String | ::Nil"},{"name":"tag","doc":null,"default_value":"nil","external_name":"tag","restriction":"String | ::Nil"}],"args_string":"(package : String, version : String? = <span class=\"n\">nil</span>, tag : String? = <span class=\"n\">nil</span>) : Pkg","source_link":"https://github.com/DFabric/dppm/blob/4a1bc37bc6872377dbc36759a4d46e84ec35bbb5/src/prefix.cr#L148","def":{"name":"new_pkg","args":[{"name":"package","doc":null,"default_value":"","external_name":"package","restriction":"String"},{"name":"version","doc":null,"default_value":"nil","external_name":"version","restriction":"String | ::Nil"},{"name":"tag","doc":null,"default_value":"nil","external_name":"tag","restriction":"String | ::Nil"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Pkg","visibility":"Public","body":"if version\n  package_name = package\nelse\n  case package\n  when .includes?('_')\n    package_name, _, tag_or_version = package.partition('_')\n  when .includes?(':')\n    package_name, _, tag_or_version = package.partition(':')\n  else\n    package_name = package\n  end\nend\nsrc = Src.new(self, package_name)\nif tag_or_version && (!(src.pkg_file.tags.has_key?(tag_or_version)))\n  version = tag_or_version\nend\nversion || (version = src.pkg_file.version_from_tag((tag || tag_or_version) || \"latest\"))\nPkg.new(self, package_name, version, src.pkg_file, src)\n"}},{"id":"new_src(name:String):Src-instance-method","html_id":"new_src(name:String):Src-instance-method","name":"new_src","doc":"Creates a new `Src` source package object.","summary":"<p>Creates a new <code><a href=\"../DPPM/Prefix/Src.html\">Src</a></code> source package object.</p>","abstract":false,"args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":"String"}],"args_string":"(name : String) : Src","source_link":"https://github.com/DFabric/dppm/blob/4a1bc37bc6872377dbc36759a4d46e84ec35bbb5/src/prefix.cr#L171","def":{"name":"new_src","args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Src","visibility":"Public","body":"Src.new(self, name)"}},{"id":"path:Path-instance-method","html_id":"path:Path-instance-method","name":"path","doc":"Path of the prefix on the filesystem.","summary":"<p>Path of the prefix on the filesystem.</p>","abstract":false,"args":[],"args_string":" : Path","source_link":"https://github.com/DFabric/dppm/blob/4a1bc37bc6872377dbc36759a4d46e84ec35bbb5/src/prefix.cr#L45","def":{"name":"path","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Path","visibility":"Public","body":"@path"}},{"id":"pkg:Path-instance-method","html_id":"pkg:Path-instance-method","name":"pkg","doc":"Package path, including the `source_name`.","summary":"<p>Package path, including the <code><a href=\"../DPPM/Prefix.html#source_name:String-instance-method\">#source_name</a></code>.</p>","abstract":false,"args":[],"args_string":" : Path","source_link":"https://github.com/DFabric/dppm/blob/4a1bc37bc6872377dbc36759a4d46e84ec35bbb5/src/prefix.cr#L60","def":{"name":"pkg","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Path","visibility":"Public","body":"@pkg"}},{"id":"root_app:Path-instance-method","html_id":"root_app:Path-instance-method","name":"root_app","doc":"Base path for applications.","summary":"<p>Base path for applications.</p>","abstract":false,"args":[],"args_string":" : Path","source_link":"https://github.com/DFabric/dppm/blob/4a1bc37bc6872377dbc36759a4d46e84ec35bbb5/src/prefix.cr#L48","def":{"name":"root_app","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Path","visibility":"Public","body":"@root_app"}},{"id":"root_pkg:Path-instance-method","html_id":"root_pkg:Path-instance-method","name":"root_pkg","doc":"Base path for packages.","summary":"<p>Base path for packages.</p>","abstract":false,"args":[],"args_string":" : Path","source_link":"https://github.com/DFabric/dppm/blob/4a1bc37bc6872377dbc36759a4d46e84ec35bbb5/src/prefix.cr#L51","def":{"name":"root_pkg","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Path","visibility":"Public","body":"@root_pkg"}},{"id":"root_src:Path-instance-method","html_id":"root_src:Path-instance-method","name":"root_src","doc":"Base path for packages sources.","summary":"<p>Base path for packages sources.</p>","abstract":false,"args":[],"args_string":" : Path","source_link":"https://github.com/DFabric/dppm/blob/4a1bc37bc6872377dbc36759a4d46e84ec35bbb5/src/prefix.cr#L54","def":{"name":"root_src","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Path","visibility":"Public","body":"@root_src"}},{"id":"source_name:String-instance-method","html_id":"source_name:String-instance-method","name":"source_name","doc":"Source name to use when building packages and creating applications.","summary":"<p>Source name to use when building packages and creating applications.</p>","abstract":false,"args":[],"args_string":" : String","source_link":"https://github.com/DFabric/dppm/blob/4a1bc37bc6872377dbc36759a4d46e84ec35bbb5/src/prefix.cr#L42","def":{"name":"source_name","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"String","visibility":"Public","body":"@source_name"}},{"id":"source_path-instance-method","html_id":"source_path-instance-method","name":"source_path","doc":"Source path used, which can be an URL or a filesystem path.","summary":"<p>Source path used, which can be an URL or a filesystem path.</p>","abstract":false,"args":[],"args_string":"","source_link":"https://github.com/DFabric/dppm/blob/4a1bc37bc6872377dbc36759a4d46e84ec35bbb5/src/prefix.cr#L66","def":{"name":"source_path","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"if (value = @source_path).nil?\n  @source_path = (dppm_config.sources[@source_name])\nelse\n  value\nend"}},{"id":"src:Path-instance-method","html_id":"src:Path-instance-method","name":"src","doc":"Package path, including the `source_name`.","summary":"<p>Package path, including the <code><a href=\"../DPPM/Prefix.html#source_name:String-instance-method\">#source_name</a></code>.</p>","abstract":false,"args":[],"args_string":" : Path","source_link":"https://github.com/DFabric/dppm/blob/4a1bc37bc6872377dbc36759a4d46e84ec35bbb5/src/prefix.cr#L63","def":{"name":"src","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Path","visibility":"Public","body":"@src"}},{"id":"update(force:Bool=false)-instance-method","html_id":"update(force:Bool=false)-instance-method","name":"update","doc":"Download, or update a packages source cache.","summary":"<p>Download, or update a packages source cache.</p>","abstract":false,"args":[{"name":"force","doc":null,"default_value":"false","external_name":"force","restriction":"Bool"}],"args_string":"(force : Bool = <span class=\"n\">false</span>)","source_link":"https://github.com/DFabric/dppm/blob/4a1bc37bc6872377dbc36759a4d46e84ec35bbb5/src/prefix.cr#L191","def":{"name":"update","args":[{"name":"force","doc":null,"default_value":"false","external_name":"force","restriction":"Bool"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"packages_source_date = nil\nupdate = true\nif (File.exists?(@src.to_s)) && (File.symlink?(@src.to_s))\n  update = false\nelse\n  if HTTPHelper.url?(source_path)\n    if (packages_source_date = ((HTTPHelper.get_string(source_path.gsub(\"tarball\", \"commits\"))).match(/(?<=datetime=\").*T[0-9][0-9]:/)).try(&.[]?(0))) && (Dir.exists?(@src.to_s))\n      update = !(packages_source_date.starts_with?((File.info(@src.to_s)).modification_time.to_utc.to_s(\"%Y-%m-%dT%H:\")))\n    end\n  end\nend\nif force || update\n  delete_src\n  if packages_source_date\n    Logger.info(\"downloading packages source\", source_path)\n    file = @root_src / (File.basename(source_path))\n    HTTPHelper.get_file(source_path, file.to_s)\n    Host.exec(\"/bin/tar\", {\"zxf\", file.to_s, \"-C\", @root_src.to_s})\n    File.delete(file)\n    File.rename(Dir[(@root_src / \"*packages-source*\").to_s][0], @src.to_s)\n    File.touch(@src.to_s, Time.parse_utc(packages_source_date, \"%Y-%m-%dT%H:\"))\n    Logger.info(\"cache updated\", @src.to_s)\n  else\n    FileUtils.mkdir_p(@root_src.to_s)\n    real_source_path = File.real_path(source_path)\n    File.symlink(real_source_path, @src.to_s)\n    Logger.info(\"symlink added from `#{real_source_path}`\", @src.to_s)\n  end\nelse\n  Logger.info(\"cache up-to-date\", @src.to_s)\nend\n"}}],"macros":[],"types":[{"html_id":"dppm/DPPM/Prefix/App","path":"DPPM/Prefix/App.html","kind":"struct","full_name":"DPPM::Prefix::App","name":"App","abstract":false,"superclass":{"html_id":"dppm/Struct","kind":"struct","full_name":"Struct","name":"Struct"},"ancestors":[{"html_id":"dppm/DPPM/Prefix/ProgramData","kind":"module","full_name":"DPPM::Prefix::ProgramData","name":"ProgramData"},{"html_id":"dppm/DPPM/Prefix/Base","kind":"module","full_name":"DPPM::Prefix::Base","name":"Base"},{"html_id":"dppm/Struct","kind":"struct","full_name":"Struct","name":"Struct"},{"html_id":"dppm/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"dppm/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/prefix/app.cr","line_number":5,"url":"https://github.com/DFabric/dppm/blob/4a1bc37bc6872377dbc36759a4d46e84ec35bbb5/src/prefix/app.cr#L5"}],"repository_name":"dppm","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[{"html_id":"dppm/DPPM/Prefix/ProgramData","kind":"module","full_name":"DPPM::Prefix::ProgramData","name":"ProgramData"}],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"dppm/DPPM/Prefix","kind":"struct","full_name":"DPPM::Prefix","name":"Prefix"},"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[{"id":"add(vars:Hash(String,String)=Hash(String,String).new,shared:Bool=true,add_service:Bool=true,socket:Bool=false,database:String?=nil,url:String?=nil,web_server:String?=nil,confirmation:Bool=true,&block)-instance-method","html_id":"add(vars:Hash(String,String)=Hash(String,String).new,shared:Bool=true,add_service:Bool=true,socket:Bool=false,database:String?=nil,url:String?=nil,web_server:String?=nil,confirmation:Bool=true,&block)-instance-method","name":"add","doc":"Adds a new application to the system.\n\nameba:disable Metrics/CyclomaticComplexity","summary":"<p>Adds a new application to the system.</p>","abstract":false,"args":[{"name":"vars","doc":null,"default_value":"Hash(String, String).new","external_name":"vars","restriction":"Hash(String, String)"},{"name":"shared","doc":null,"default_value":"true","external_name":"shared","restriction":"Bool"},{"name":"add_service","doc":null,"default_value":"true","external_name":"add_service","restriction":"Bool"},{"name":"socket","doc":null,"default_value":"false","external_name":"socket","restriction":"Bool"},{"name":"database","doc":null,"default_value":"nil","external_name":"database","restriction":"String | ::Nil"},{"name":"url","doc":null,"default_value":"nil","external_name":"url","restriction":"String | ::Nil"},{"name":"web_server","doc":null,"default_value":"nil","external_name":"web_server","restriction":"String | ::Nil"},{"name":"confirmation","doc":null,"default_value":"true","external_name":"confirmation","restriction":"Bool"}],"args_string":"(vars : Hash(String, String) = <span class=\"t\">Hash</span>(<span class=\"t\">String</span>, <span class=\"t\">String</span>).<span class=\"k\">new</span>, shared : Bool = <span class=\"n\">true</span>, add_service : Bool = <span class=\"n\">true</span>, socket : Bool = <span class=\"n\">false</span>, database : String? = <span class=\"n\">nil</span>, url : String? = <span class=\"n\">nil</span>, web_server : String? = <span class=\"n\">nil</span>, confirmation : Bool = <span class=\"n\">true</span>, &block)","source_link":"https://github.com/DFabric/dppm/blob/4a1bc37bc6872377dbc36759a4d46e84ec35bbb5/src/prefix/app.cr#L437","def":{"name":"add","args":[{"name":"vars","doc":null,"default_value":"Hash(String, String).new","external_name":"vars","restriction":"Hash(String, String)"},{"name":"shared","doc":null,"default_value":"true","external_name":"shared","restriction":"Bool"},{"name":"add_service","doc":null,"default_value":"true","external_name":"add_service","restriction":"Bool"},{"name":"socket","doc":null,"default_value":"false","external_name":"socket","restriction":"Bool"},{"name":"database","doc":null,"default_value":"nil","external_name":"database","restriction":"String | ::Nil"},{"name":"url","doc":null,"default_value":"nil","external_name":"url","restriction":"String | ::Nil"},{"name":"web_server","doc":null,"default_value":"nil","external_name":"web_server","restriction":"String | ::Nil"},{"name":"confirmation","doc":null,"default_value":"true","external_name":"confirmation","restriction":"Bool"}],"double_splat":null,"splat_index":null,"yields":0,"block_arg":{"name":"block","doc":null,"default_value":"","external_name":"block","restriction":""},"return_type":"","visibility":"Public","body":"if add_service\n  if pkg_file.type.html?\n    add_service = false\n  else\n    if app_service = service?\n      if !app_service.creatable?\n        Logger.warn(\"service creation not available - root permissions missing?\", app_service.file.to_s)\n        add_service = false\n      else\n        if app_service.exists?\n          raise(\"System service already exist: \" + app_service.name)\n        end\n      end\n    end\n  end\nend\navailable!\ndatabase_app = nil\nif database\n  database_app = @prefix.new_app(database)\n  Logger.info(\"initialize database\", database)\n  new_database = database_create(database_app)\n  new_database.clean\n  new_database.check_user\n  vars.merge!(new_database.vars)\nend\nunset_vars = Set(String).new\nsource_package = pkg.exists? || pkg.src\nif web_server\n  pkg_file.type.webapp!\n  webserver = @prefix.new_app(web_server)\n  web_server_uid = webserver.file_info.owner_id.to_u32\n  @website = webserver.new_website(self)\n  vars[\"web_server\"] = web_server\nend\nif url && pkg_file.type.webapp?\n  vars[\"url\"] = url\n  vars[\"domain\"] = (URI.parse(url)).hostname.to_s\nend\nset_url = false\nhas_socket = false\ndatabase_password = nil\ndefault_host = false\ndefault_port = false\nsource_package.each_config_key do |var|\n  if var == \"socket\"\n    if !(vars.has_key?(\"socket\"))\n      vars[\"socket\"] = (@path / \"socket\").to_s\n    end\n    has_socket = true\n  else\n    if (!(vars.has_key?(var))) && (!((var == \"port\") && socket))\n      if (var == \"database_password\") && source_package.database?\n        database_password = vars[\"database_password\"] = Database.gen_password\n      else\n        if var == \"url\"\n          set_url = true\n        else\n          key = (source_package.get_config(var)).to_s\n          if key.empty?\n            unset_vars << var\n          else\n            case var\n            when \"port\"\n              default_port = true\n            when \"host\"\n              default_host = true\n            end\n            vars[var] = key\n            Logger.info(\"Default value set '#{var}'\", key)\n          end\n        end\n      end\n    end\n  end\nend\nif socket && (!has_socket)\n  raise(\"Socket not supported by #{pkg_file.name}\")\nend\nif (host = vars[\"host\"]?) && (port = vars[\"port\"]?.try(&.to_i))\n  local_port_checker = port_checker(host)\n  available_port = port_checker(local_port_checker, port, default_port)\n  if !available_port\n    Logger.warn(\"Limit of #{UInt16::MAX} for port numbers is reached, no ports available for the address\", host)\n    if default_host && (local_port_checker.ipaddress.address == Socket::IPAddress::LOOPBACK6)\n      local_port_checker.address = Socket::IPAddress::LOOPBACK\n      vars[\"host\"] = Socket::IPAddress::LOOPBACK\n      available_port = port_checker(local_port_checker, port, default_port)\n    end\n  end\n  if (!available_port) && local_port_checker.udp\n    local_port_checker.udp = false\n    available_port = port_checker(local_port_checker, port, default_port)\n  end\n  if available_port\n    vars[\"port\"] = available_port.to_s\n  else\n    raise(\"No available port for host #{host}\")\n  end\nend\nif url\n  vars[\"url\"] = url\n  vars[\"domain\"] = (URI.parse(url)).hostname.to_s\nelse\n  if set_url || web_server\n    uri = URI.new\n    if !(domain = vars[\"domain\"]?)\n      domain = vars[\"host\"]?\n    end\n    domain || (domain = \"[::1]\")\n    uri.host = domain\n    uri.scheme = \"http\"\n    if port = vars[\"port\"]?\n      uri.port = port.to_i\n    else\n      uri.path = web_server ? '/' + @name : \"/\"\n    end\n    vars[\"url\"] = uri.to_s\n    vars[\"domain\"] = domain\n  end\nend\nif (!(vars.has_key?(\"database_type\"))) && (databases = source_package.pkg_file.databases)\n  if Database.supported?(database_type = databases.first.first)\n    if !database_password\n      raise(\"Database password required: \" + database_type)\n    end\n    if !(vars.has_key?(\"database_name\"))\n      raise(\"Database name required: \" + database_type)\n    end\n    if !(vars.has_key?(\"database_user\"))\n      raise(\"Database user required: \" + database_type)\n    end\n    if (!(vars.has_key?(\"database_address\"))) || (!((vars.has_key?(\"database_host\")) && (vars.has_key?(\"database_port\"))))\n      raise(\"Database address, or host and port required:\" + database_type)\n    end\n  end\nend\nif !unset_vars.empty?\n  Logger.warn(\"default value not available for unset variables\", unset_vars.join(\", \"))\nend\nLogger.info(\"setting system user and group\", @name)\nif Process.root?\n  libcrown = Libcrown.new\n  uid = gid = libcrown.available_id(9000)\n  if uid_string = vars[\"uid\"]?\n    uid = uid_string.to_u32\n    user = libcrown.users[uid].name\n  else\n    if user = vars[\"system_user\"]?\n      uid = libcrown.to_uid(user)\n    else\n      user = '_' + @name\n    end\n  end\n  if gid_string = vars[\"gid\"]?\n    gid = gid_string.to_u32\n    group = libcrown.groups[gid].name\n  else\n    if group = vars[\"system_group\"]?\n      gid = libcrown.to_gid(group)\n    else\n      group = '_' + @name\n    end\n  end\nelse\n  libcrown = Libcrown.new(nil)\n  uid = Process.uid\n  gid = Process.gid\n  user = libcrown.users[uid].name\n  group = libcrown.groups[gid].name\nend\nvars[\"uid\"] = uid.to_s\nvars[\"gid\"] = gid.to_s\nvars[\"system_user\"] = user\nvars[\"system_group\"] = group\nvars[\"package\"] = pkg.package\nvars[\"version\"] = pkg.version\nvars[\"basedir\"] = @path.to_s\nvars[\"name\"] = @name\nif env = pkg_file.env\n  vars.merge!(env)\nend\ndeps = Set(Prefix::Pkg).new\npkg.build(deps, false) do\n  simulate(vars, deps, \"add\", confirmation, Logger.output, &block)\nend\nbegin\n  Logger.info(\"adding to the system\", @name)\n  if File.exists?(@path.to_s)\n    raise(\"Application directory already exists: #{@path}\")\n  end\n  Dir.mkdir(@path.to_s)\n  create_application_dir(shared)\n  Logger.info(\"copying configurations and data\", @name)\n  copy_dir(pkg.conf_path.to_s, conf_path.to_s)\n  copy_dir(pkg.data_path.to_s, data_path.to_s)\n  Dir.mkdir(logs_path.to_s)\n  install_deps(deps, shared) do |dep_pkg|\n    if dep_pkg.config?\n      Logger.info(\"copying library configuration files\", dep_pkg.name)\n      dep_conf_path = conf_path / dep_pkg.package\n      Dir.mkdir_p(dep_conf_path.to_s)\n      FileUtils.cp(dep_pkg.config_file!.to_s, (dep_conf_path / dep_pkg.config_file!.basename).to_s)\n    end\n  end\n  Logger.info(\"setting configuration variables\", @name)\n  each_config_key do |var|\n    if var_value = vars[var]?\n      set_config(var, var_value)\n    end\n  end\n  write_configs\n  set_permissions\n  if ((current_database = database?) && database_app) && database_password\n    Logger.info(\"configure database\", database_app.name)\n    current_database.ensure_root_password(database_app)\n    current_database.create(database_password)\n  end\n  Logger.info(\"running configuration tasks\", @name)\n  if (tasks = pkg_file.tasks) && (add_task = tasks[\"add\"]?)\n    Dir.cd(@path.to_s) do\n      (Task.new(vars.dup, all_bin_paths)).run(add_task)\n    end\n  end\n  if (website = @website) && web_server\n    Logger.info(\"adding web site\", website.file.to_s)\n    dir = website.file.dirname\n    Dir.mkdir_p(dir)\n    app_uri = uri?\n    case pkg_file.type\n    when .html?\n      website.root = app_path\n    when .php?\n      website.root = app_path\n      website.fastcgi = URI.new(path: vars[\"socket\"])\n    else\n      website.proxy = app_uri.dup\n    end\n    website.hosts.clear\n    if url = vars[\"url\"]?\n      website.hosts << (URI.parse(url))\n    else\n      raise(\"No url address available for the web site\")\n    end\n    @website = website\n    website.write\n    Dir.mkdir_p(site_path.to_s)\n    site_file = (site_path / web_server).to_s\n    if File.exists?(site_file)\n      File.delete(site_file)\n    end\n    File.symlink(website.file.to_s, site_file)\n  end\n  if Process.root?\n    libcrown = Libcrown.new\n    add_group_member = false\n    if !(libcrown.groups.has_key?(gid))\n      Logger.info(\"system group created\", group)\n      libcrown.add_group(Libcrown::Group.new(group), gid)\n      add_group_member = true\n    end\n    system_user = libcrown.users[uid]?\n    if !system_user\n      system_user = Libcrown::User.new(name: user, gid: gid, full_name: pkg_file.name, home_directory: data_path.to_s)\n      libcrown.add_user(system_user, uid)\n      Logger.info(\"system user created\", user)\n    else\n      !(libcrown.user_group_member?(uid, gid))\n      add_group_member = true\n    end\n    if add_group_member\n      libcrown.add_group_member(uid, gid)\n    end\n    if web_server_uid && website?.try(&.root)\n      libcrown.add_group_member(web_server_uid, gid)\n    end\n    libcrown.write\n    @owner = Owner.new(system_user, libcrown.groups[gid])\n    if add_service\n      if database_app\n        database_name = database_app.name\n      end\n      service_create(service_dependency: database_name)\n    end\n    Utils.chown_r(@path.to_s, uid, gid)\n  end\n  Logger.info(\"add completed\", @path.to_s)\n  Logger.info(\"application information\", pkg_file.info)\n  self\nrescue ex\n  begin\n    delete(false) do\n    end\n  ensure\n    raise(Error.new(\"Add failed - application deleted: #{@path}\", ex))\n  end\nend\n"}},{"id":"contained?:Bool?-instance-method","html_id":"contained?:Bool?-instance-method","name":"contained?","doc":"The application is self-contained.","summary":"<p>The application is self-contained.</p>","abstract":false,"args":[],"args_string":" : Bool?","source_link":"https://github.com/DFabric/dppm/blob/4a1bc37bc6872377dbc36759a4d46e84ec35bbb5/src/prefix/app.cr#L14","def":{"name":"contained?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Bool | ::Nil","visibility":"Public","body":"if (value = @contained).nil?\n  @contained = (real_app_path == app_path)\nelse\n  value\nend"}},{"id":"database_create(database_app:App):Database::MySQL-instance-method","html_id":"database_create(database_app:App):Database::MySQL-instance-method","name":"database_create","doc":"Creates a new database for this application.","summary":"<p>Creates a new database for this application.</p>","abstract":false,"args":[{"name":"database_app","doc":null,"default_value":"","external_name":"database_app","restriction":"App"}],"args_string":"(database_app : App) : Database::MySQL","source_link":"https://github.com/DFabric/dppm/blob/4a1bc37bc6872377dbc36759a4d46e84ec35bbb5/src/prefix/app.cr#L130","def":{"name":"database_create","args":[{"name":"database_app","doc":null,"default_value":"","external_name":"database_app","restriction":"App"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Database::MySQL","visibility":"Public","body":"user = '_' + @name\nhost = (database_app.get_config(\"host\")).to_s\nport = (database_app.get_config(\"port\")).to_s\nuri = URI.new(host: host, port: port.to_i, user: \"root\", password: database_app.password)\ndb_type = database_app.pkg_file.provides || (raise(\"No `provides` key set in #{database_app.pkg_file.path}, that includes the database type\"))\n@database = Database.new(uri, user, db_type)\n"}},{"id":"del_config(key:String)-instance-method","html_id":"del_config(key:String)-instance-method","name":"del_config","doc":"Deletes a config key. Raises a `KeyError` if the key is not found.","summary":"<p>Deletes a config key.</p>","abstract":false,"args":[{"name":"key","doc":null,"default_value":"","external_name":"key","restriction":"String"}],"args_string":"(key : String)","source_link":"https://github.com/DFabric/dppm/blob/4a1bc37bc6872377dbc36759a4d46e84ec35bbb5/src/prefix/app.cr#L178","def":{"name":"del_config","args":[{"name":"key","doc":null,"default_value":"","external_name":"key","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"config_from_pkg_file(key) do |app_config, config_key|\n  config_export\n  return app_config.del(config_key)\nend\nconfig_from_libs(key) do |lib_config, config_key|\n  return lib_config.del(config_key)\nend\nconfig_key_exception(key)\n"}},{"id":"delete(confirmation:Bool=true,preserve_database:Bool=false,keep_user_group:Bool=false,&):App?-instance-method","html_id":"delete(confirmation:Bool=true,preserve_database:Bool=false,keep_user_group:Bool=false,&):App?-instance-method","name":"delete","doc":"Deletes an existing application from the system.\n\nameba:disable Metrics/CyclomaticComplexity","summary":"<p>Deletes an existing application from the system.</p>","abstract":false,"args":[{"name":"confirmation","doc":null,"default_value":"true","external_name":"confirmation","restriction":"Bool"},{"name":"preserve_database","doc":null,"default_value":"false","external_name":"preserve_database","restriction":"Bool"},{"name":"keep_user_group","doc":null,"default_value":"false","external_name":"keep_user_group","restriction":"Bool"}],"args_string":"(confirmation : Bool = <span class=\"n\">true</span>, preserve_database : Bool = <span class=\"n\">false</span>, keep_user_group : Bool = <span class=\"n\">false</span>, &) : App?","source_link":"https://github.com/DFabric/dppm/blob/4a1bc37bc6872377dbc36759a4d46e84ec35bbb5/src/prefix/app.cr#L819","def":{"name":"delete","args":[{"name":"confirmation","doc":null,"default_value":"true","external_name":"confirmation","restriction":"Bool"},{"name":"preserve_database","doc":null,"default_value":"false","external_name":"preserve_database","restriction":"Bool"},{"name":"keep_user_group","doc":null,"default_value":"false","external_name":"keep_user_group","restriction":"Bool"}],"double_splat":null,"splat_index":null,"yields":0,"block_arg":null,"return_type":"App | ::Nil","visibility":"Public","body":"begin\n  if !(File.exists?(@path.to_s))\n    raise(\"Application doesn't exist: #{@path}\")\n  end\n  begin\n    if !preserve_database\n      database?.try(&.check_connection)\n    end\n  rescue ex\n    raise(Error.new(\"Either start the database or use the preseve database option\", ex))\n  end\n  if service?\n    Logger.info(\"a system service is found\", @name)\n    service.check_delete\n  end\n  if confirmation\n    Logger.output << \"task: delete\"\n    (Logger.output << \"\\nname: \") << @name\n    (Logger.output << \"\\npackage: \") << pkg_file.package\n    (Logger.output << \"\\nbasedir: \") << @path\n    (Logger.output << \"\\nuser: \") << owner.user.name\n    (Logger.output << \"\\ngroup: \") << owner.group.name\n    if service?\n      (Logger.output << \"\\nservice: \") << service.file\n    end\n    Logger.output << '\\n'\n    if !(yield)\n      return\n    end\n  end\n  Logger.info(\"deleting\", @path.to_s)\n  if service = service?\n    Logger.info(\"deleting system service\", service.name)\n    service.delete\n  end\n  begin\n    if webserver = webserver?\n      website = webserver.parse_site(@name)\n      Logger.info(\"deleting web site\", website.file)\n      File.delete(webserver_sites_path.to_s)\n      File.delete(website.file.to_s)\n      if output_file = website.log_file_output.to_s\n        if File.exists?(output_file)\n          File.delete(output_file)\n        end\n      end\n      if error_file = website.log_file_error.to_s\n        if File.exists?(error_file)\n          File.delete(error_file)\n        end\n      end\n      if webserver.service.run?\n        webserver.service.restart\n      end\n    end\n  rescue ex\n    Logger.warn(\"error when removing website\", ex.to_s)\n  end\n  begin\n    if Process.root?\n      libcrown = Libcrown.new\n      if webserver\n        libcrown.groups[file_info.group_id.to_u32].users.delete(libcrown.users[file_info.owner_id.to_u32].name)\n      end\n      if !keep_user_group\n        if owner.user.name.starts_with?('_' + @name)\n          libcrown.del_user(file_info.owner_id.to_u32)\n        end\n        if owner.group.name.starts_with?('_' + @name)\n          libcrown.del_group(file_info.group_id.to_u32)\n        end\n      end\n      libcrown.write\n    end\n  rescue ex\n    Logger.warn(\"error when deleting system user/group\", ex)\n  end\n  if (!preserve_database) && (app_database = database?)\n    Logger.info(\"deleting database\", app_database.user)\n    app_database.delete\n  end\n  Logger.info(\"delete completed\", @path)\n  self\nensure\n  FileUtils.rm_rf(@path.to_s)\n  self\nend"}},{"id":"each_config_key(&block:String->)-instance-method","html_id":"each_config_key(&block:String->)-instance-method","name":"each_config_key","doc":"Yields each configuration key of the application and its libraries (if any).","summary":"<p>Yields each configuration key of the application and its libraries (if any).</p>","abstract":false,"args":[],"args_string":"(&block : String -> )","source_link":"https://github.com/DFabric/dppm/blob/4a1bc37bc6872377dbc36759a4d46e84ec35bbb5/src/prefix/app.cr#L202","def":{"name":"each_config_key","args":[],"double_splat":null,"splat_index":null,"yields":1,"block_arg":{"name":"block","doc":null,"default_value":"","external_name":"block","restriction":"(String -> )"},"return_type":"","visibility":"Public","body":"config_export\ninternal_each_config_key do |key|\n  yield key\nend\neach_key_from_libs do |key|\n  yield key\nend\n"}},{"id":"each_log_stream(&block:String->)-instance-method","html_id":"each_log_stream(&block:String->)-instance-method","name":"each_log_stream","doc":"Yields each log stream.","summary":"<p>Yields each log stream.</p>","abstract":false,"args":[],"args_string":"(&block : String -> )","source_link":"https://github.com/DFabric/dppm/blob/4a1bc37bc6872377dbc36759a4d46e84ec35bbb5/src/prefix/app.cr#L294","def":{"name":"each_log_stream","args":[],"double_splat":null,"splat_index":null,"yields":1,"block_arg":{"name":"block","doc":null,"default_value":"","external_name":"block","restriction":"(String -> )"},"return_type":"","visibility":"Public","body":"Dir.each_child(logs_path.to_s) do |log_name|\n  yield log_name.rchop(LOG_EXTENSION)\nend"}},{"id":"exec-instance-method","html_id":"exec-instance-method","name":"exec","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/DFabric/dppm/blob/4a1bc37bc6872377dbc36759a4d46e84ec35bbb5/src/prefix/app.cr#L55","def":{"name":"exec","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"if (value = @exec).nil?\n  @exec = (begin\n    if !(exec = pkg_file.exec)\n      libs.each do |library|\n        exec || (exec = library.pkg_file.exec)\n      end\n    end\n    exec || (raise(\"No `exec` key present in #{pkg_file.path}\"))\n  end)\nelse\n  value\nend"}},{"id":"file_info-instance-method","html_id":"file_info-instance-method","name":"file_info","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/DFabric/dppm/blob/4a1bc37bc6872377dbc36759a4d46e84ec35bbb5/src/prefix/app.cr#L910","def":{"name":"file_info","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"if (value = @file_info).nil?\n  @file_info = (File.info(@path.to_s))\nelse\n  value\nend"}},{"id":"get_config(key:String,&)-instance-method","html_id":"get_config(key:String,&)-instance-method","name":"get_config","doc":"Gets the config key. Yields the block if not found.","summary":"<p>Gets the config key.</p>","abstract":false,"args":[{"name":"key","doc":null,"default_value":"","external_name":"key","restriction":"String"}],"args_string":"(key : String, &)","source_link":"https://github.com/DFabric/dppm/blob/4a1bc37bc6872377dbc36759a4d46e84ec35bbb5/src/prefix/app.cr#L166","def":{"name":"get_config","args":[{"name":"key","doc":null,"default_value":"","external_name":"key","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":0,"block_arg":null,"return_type":"","visibility":"Public","body":"config_from_pkg_file(key) do |app_config, config_key|\n  config_export\n  return app_config.get(config_key)\nend\nconfig_from_libs(key) do |lib_config, config_key|\n  return lib_config.get(config_key)\nend\nyield\n"}},{"id":"get_logs(stream_name:String,follow:Bool=true,lines:Int32?=nil,&block:String->)-instance-method","html_id":"get_logs(stream_name:String,follow:Bool=true,lines:Int32?=nil,&block:String->)-instance-method","name":"get_logs","doc":"Get application logs.","summary":"<p>Get application logs.</p>","abstract":false,"args":[{"name":"stream_name","doc":null,"default_value":"","external_name":"stream_name","restriction":"String"},{"name":"follow","doc":null,"default_value":"true","external_name":"follow","restriction":"Bool"},{"name":"lines","doc":null,"default_value":"nil","external_name":"lines","restriction":"Int32 | ::Nil"}],"args_string":"(stream_name : String, follow : Bool = <span class=\"n\">true</span>, lines : Int32? = <span class=\"n\">nil</span>, &block : String -> )","source_link":"https://github.com/DFabric/dppm/blob/4a1bc37bc6872377dbc36759a4d46e84ec35bbb5/src/prefix/app.cr#L301","def":{"name":"get_logs","args":[{"name":"stream_name","doc":null,"default_value":"","external_name":"stream_name","restriction":"String"},{"name":"follow","doc":null,"default_value":"true","external_name":"follow","restriction":"Bool"},{"name":"lines","doc":null,"default_value":"nil","external_name":"lines","restriction":"Int32 | ::Nil"}],"double_splat":null,"splat_index":null,"yields":1,"block_arg":{"name":"block","doc":null,"default_value":"","external_name":"block","restriction":"(String -> )"},"return_type":"","visibility":"Public","body":"log_file = (logs_path / stream_name).to_s + LOG_EXTENSION\nif follow\n  Tail::File.open(log_file, &.follow(lines: (  lines || 10), &block))\nelse\n  if lines\n    yield Tail::File.open(log_file) do |__arg2|\n      __arg2.last_lines(lines: lines.to_i).join('\\n')\n    end\n  else\n    yield File.read(log_file)\n  end\nend\n"}},{"id":"log_file_error-instance-method","html_id":"log_file_error-instance-method","name":"log_file_error","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/DFabric/dppm/blob/4a1bc37bc6872377dbc36759a4d46e84ec35bbb5/src/prefix/app.cr#L11","def":{"name":"log_file_error","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"if (value = @log_file_error).nil?\n  @log_file_error = (logs_path / (\"error\" + LOG_EXTENSION))\nelse\n  value\nend"}},{"id":"log_file_output-instance-method","html_id":"log_file_output-instance-method","name":"log_file_output","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/DFabric/dppm/blob/4a1bc37bc6872377dbc36759a4d46e84ec35bbb5/src/prefix/app.cr#L10","def":{"name":"log_file_output","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"if (value = @log_file_output).nil?\n  @log_file_output = (logs_path / (\"output\" + LOG_EXTENSION))\nelse\n  value\nend"}},{"id":"logs_path-instance-method","html_id":"logs_path-instance-method","name":"logs_path","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/DFabric/dppm/blob/4a1bc37bc6872377dbc36759a4d46e84ec35bbb5/src/prefix/app.cr#L9","def":{"name":"logs_path","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"if (value = @logs_path).nil?\n  @logs_path = (@path / \"logs\")\nelse\n  value\nend"}},{"id":"new_website(app:App):WebSite::Caddy-instance-method","html_id":"new_website(app:App):WebSite::Caddy-instance-method","name":"new_website","doc":"Adds a new site. Assumes the app is a Web Server.","summary":"<p>Adds a new site.</p>","abstract":false,"args":[{"name":"app","doc":null,"default_value":"","external_name":"app","restriction":"App"}],"args_string":"(app : App) : WebSite::Caddy","source_link":"https://github.com/DFabric/dppm/blob/4a1bc37bc6872377dbc36759a4d46e84ec35bbb5/src/prefix/app.cr#L353","def":{"name":"new_website","args":[{"name":"app","doc":null,"default_value":"","external_name":"app","restriction":"App"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"WebSite::Caddy","visibility":"Public","body":"if !(Dir.exists?(@path))\n  raise(\"Web server doesn't exists: #{@path}\")\nend\ndefault_site_file = app.site_path / pkg_file.package\nsite = parse_site(app.name, default_site_file)\nif !(File.exists?(default_site_file.to_s))\n  site.headers[\"Strict-Transport-Security\"] = \"max-age=31536000;\"\n  site.headers[\"X-XSS-Protection\"] = \"1; mode=block\"\n  site.headers[\"X-Content-Type-Options\"] = \"nosniff\"\n  site.headers[\"X-Frame-Options\"] = \"DENY\"\n  site.headers[\"Content-Security-Policy\"] = \"frame-ancestors 'none';\"\nend\nsite.log_file_error = logs_path / (app.name + \"-error.log\")\nsite.log_file_output = logs_path / (app.name + \"-output.log\")\nsite.file = webserver_sites_path / app.name\nsite\n"}},{"id":"owner-instance-method","html_id":"owner-instance-method","name":"owner","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/DFabric/dppm/blob/4a1bc37bc6872377dbc36759a4d46e84ec35bbb5/src/prefix/app.cr#L914","def":{"name":"owner","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"if (value = @owner).nil?\n  @owner = (begin\n    libcrown = Libcrown.new(nil)\n    Owner.new(libcrown.users[file_info.owner_id.to_u32], libcrown.groups[file_info.group_id.to_u32])\n  end)\nelse\n  value\nend"}},{"id":"password-instance-method","html_id":"password-instance-method","name":"password","doc":"Password content, typically used for the database user.","summary":"<p>Password content, typically used for the database user.</p>","abstract":false,"args":[],"args_string":"","source_link":"https://github.com/DFabric/dppm/blob/4a1bc37bc6872377dbc36759a4d46e84ec35bbb5/src/prefix/app.cr#L32","def":{"name":"password","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"if (value = @password).nil?\n  @password = (if File.exists?(password_file)\n    File.read(password_file)\n  end)\nelse\n  value\nend"}},{"id":"password_file-instance-method","html_id":"password_file-instance-method","name":"password_file","doc":"Password path, typically used for the database user.","summary":"<p>Password path, typically used for the database user.</p>","abstract":false,"args":[],"args_string":"","source_link":"https://github.com/DFabric/dppm/blob/4a1bc37bc6872377dbc36759a4d46e84ec35bbb5/src/prefix/app.cr#L39","def":{"name":"password_file","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"if (value = @password_file).nil?\n  @password_file = (conf_path / \".password\")\nelse\n  value\nend"}},{"id":"path_env_var:String-instance-method","html_id":"path_env_var:String-instance-method","name":"path_env_var","doc":"Returns a `PATH` with the directories locations to find the application and libaries binaries.","summary":"<p>Returns a <code>PATH</code> with the directories locations to find the application and libaries binaries.</p>","abstract":false,"args":[],"args_string":" : String","source_link":"https://github.com/DFabric/dppm/blob/4a1bc37bc6872377dbc36759a4d46e84ec35bbb5/src/prefix/app.cr#L328","def":{"name":"path_env_var","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"String","visibility":"Public","body":"String.build do |str|\n  str << app_bin_path\n  libs.each do |library|\n    (str << ':') << library.bin_path\n  end\nend"}},{"id":"pkg:Pkg-instance-method","html_id":"pkg:Pkg-instance-method","name":"pkg","doc":"Base `Pkg` package of this application.","summary":"<p>Base <code><a href=\"../../DPPM/Prefix/Pkg.html\">Pkg</a></code> package of this application.</p>","abstract":false,"args":[],"args_string":" : Pkg","source_link":"https://github.com/DFabric/dppm/blob/4a1bc37bc6872377dbc36759a4d46e84ec35bbb5/src/prefix/app.cr#L44","def":{"name":"pkg","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Pkg","visibility":"Public","body":"pkg? || (raise(\"Cannot get the base package - the application `#{@name}` is self-contained.\"))"}},{"id":"pkg?:Pkg|Nil?-instance-method","html_id":"pkg?:Pkg|Nil?-instance-method","name":"pkg?","doc":"Base `Pkg` package of this application.","summary":"<p>Base <code><a href=\"../../DPPM/Prefix/Pkg.html\">Pkg</a></code> package of this application.</p>","abstract":false,"args":[],"args_string":" : Pkg | Nil?","source_link":"https://github.com/DFabric/dppm/blob/4a1bc37bc6872377dbc36759a4d46e84ec35bbb5/src/prefix/app.cr#L49","def":{"name":"pkg?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Pkg | ::Nil | ::Nil","visibility":"Public","body":"if (value = @pkg).nil?\n  @pkg = (if !contained?\n    Pkg.new(@prefix, real_app_path.basename, nil, @pkg_file)\n  end)\nelse\n  value\nend"}},{"id":"real_app_path:Path-instance-method","html_id":"real_app_path:Path-instance-method","name":"real_app_path","doc":"Real package path of the application.","summary":"<p>Real package path of the application.</p>","abstract":false,"args":[],"args_string":" : Path","source_link":"https://github.com/DFabric/dppm/blob/4a1bc37bc6872377dbc36759a4d46e84ec35bbb5/src/prefix/app.cr#L282","def":{"name":"real_app_path","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Path","visibility":"Public","body":"Path[File.dirname(File.real_path(app_path.to_s))]"}},{"id":"service-instance-method","html_id":"service-instance-method","name":"service","doc":"Returns the system service of the application. Raise if not present.","summary":"<p>Returns the system service of the application.</p>","abstract":false,"args":[],"args_string":"","source_link":"https://github.com/DFabric/dppm/blob/4a1bc37bc6872377dbc36759a4d46e84ec35bbb5/src/prefix/app.cr#L85","def":{"name":"service","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"if (value = @service).nil?\n  @service = (service? || (raise(\"Service not available\")))\nelse\n  value\nend"}},{"id":"service?:Service::OpenRC|Service::Systemd|Nil?-instance-method","html_id":"service?:Service::OpenRC|Service::Systemd|Nil?-instance-method","name":"service?","doc":"Returns the system service, if available.","summary":"<p>Returns the system service, if available.</p>","abstract":false,"args":[],"args_string":" : Service::OpenRC | Service::Systemd | Nil?","source_link":"https://github.com/DFabric/dppm/blob/4a1bc37bc6872377dbc36759a4d46e84ec35bbb5/src/prefix/app.cr#L74","def":{"name":"service?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Service::OpenRC | Service::Systemd | Nil | ::Nil","visibility":"Public","body":"if (value = @service).nil?\n  @service = (if service_init = Service.init?\n    service_symlink = service_file.to_s\n    service = service_init.new(@name)\n    if ((File.exists?(service_symlink)) && service.exists?) && ((File.real_path(service_symlink)) == service.file.to_s)\n      service\n    end\n  end)\nelse\n  value\nend"}},{"id":"service_create(service_dependency:String?=nil):Service::OpenRC|Service::Systemd-instance-method","html_id":"service_create(service_dependency:String?=nil):Service::OpenRC|Service::Systemd-instance-method","name":"service_create","doc":"Creates a new system service","summary":"<p>Creates a new system service</p>","abstract":false,"args":[{"name":"service_dependency","doc":null,"default_value":"nil","external_name":"service_dependency","restriction":"String | ::Nil"}],"args_string":"(service_dependency : String? = <span class=\"n\">nil</span>) : Service::OpenRC | Service::Systemd","source_link":"https://github.com/DFabric/dppm/blob/4a1bc37bc6872377dbc36759a4d46e84ec35bbb5/src/prefix/app.cr#L90","def":{"name":"service_create","args":[{"name":"service_dependency","doc":null,"default_value":"nil","external_name":"service_dependency","restriction":"String | ::Nil"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Service::OpenRC | Service::Systemd","visibility":"Public","body":"@service || (@service = Service.init.new(@name))\nLogger.info(\"Creating system service\", service.name)\nDir.mkdir_p(service_path.to_s)\nif File.exists?(service_default_file)\n  FileUtils.cp(service_default_file.to_s, service.file.to_s)\nend\nservice.config.user = owner.user.name\nservice.config.group = owner.group.name\nservice.config.directory = @path.to_s\nservice.config.description = pkg_file.description\nservice.config.log_output = log_file_output.to_s\nservice.config.log_error = log_file_error.to_s\nservice.config.command = (path / exec[\"start\"]).to_s\nif service_dependency\n  service.config.after << service_dependency\nend\nif exec_reload = exec[\"reload\"]?\n  service.config.reload_signal = exec_reload\nend\nif !(path_var = path_env_var).empty?\n  service.config.env_vars[\"PATH\"] = path_var\nend\nif pkg_env = pkg_file.env\n  service.config.env_vars.merge!(pkg_env)\nend\nservice.write_config\nFile.symlink(service.file.to_s, service_file.to_s)\nLogger.info(service.type + \" system service added\", service.name)\nservice\n"}},{"id":"service_default_file-instance-method","html_id":"service_default_file-instance-method","name":"service_default_file","doc":"Default service file location.","summary":"<p>Default service file location.</p>","abstract":false,"args":[],"args_string":"","source_link":"https://github.com/DFabric/dppm/blob/4a1bc37bc6872377dbc36759a4d46e84ec35bbb5/src/prefix/app.cr#L68","def":{"name":"service_default_file","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"if (value = @service_default_file).nil?\n  @service_default_file = (service_path / service.type)\nelse\n  value\nend"}},{"id":"service_file-instance-method","html_id":"service_file-instance-method","name":"service_file","doc":"Service file location.","summary":"<p>Service file location.</p>","abstract":false,"args":[],"args_string":"","source_link":"https://github.com/DFabric/dppm/blob/4a1bc37bc6872377dbc36759a4d46e84ec35bbb5/src/prefix/app.cr#L71","def":{"name":"service_file","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"if (value = @service_file).nil?\n  @service_file = (service_path / \"service\")\nelse\n  value\nend"}},{"id":"service_path-instance-method","html_id":"service_path-instance-method","name":"service_path","doc":"Service directory.","summary":"<p>Service directory.</p>","abstract":false,"args":[],"args_string":"","source_link":"https://github.com/DFabric/dppm/blob/4a1bc37bc6872377dbc36759a4d46e84ec35bbb5/src/prefix/app.cr#L65","def":{"name":"service_path","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"if (value = @service_path).nil?\n  @service_path = (conf_path / \"init\")\nelse\n  value\nend"}},{"id":"set_config(key:String,value)-instance-method","html_id":"set_config(key:String,value)-instance-method","name":"set_config","doc":"Sets a config key. Raises a `KeyError` if the key is not found.","summary":"<p>Sets a config key.</p>","abstract":false,"args":[{"name":"key","doc":null,"default_value":"","external_name":"key","restriction":"String"},{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":""}],"args_string":"(key : String, value)","source_link":"https://github.com/DFabric/dppm/blob/4a1bc37bc6872377dbc36759a4d46e84ec35bbb5/src/prefix/app.cr#L190","def":{"name":"set_config","args":[{"name":"key","doc":null,"default_value":"","external_name":"key","restriction":"String"},{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"config_from_pkg_file(key) do |app_config, config_key|\n  config_export\n  return app_config.set(config_key, value)\nend\nconfig_from_libs(key) do |lib_config, config_key|\n  return lib_config.set(config_key, value)\nend\nconfig_key_exception(key)\n"}},{"id":"set_permissions-instance-method","html_id":"set_permissions-instance-method","name":"set_permissions","doc":"Set directory access permissions","summary":"<p>Set directory access permissions</p>","abstract":false,"args":[],"args_string":"","source_link":"https://github.com/DFabric/dppm/blob/4a1bc37bc6872377dbc36759a4d46e84ec35bbb5/src/prefix/app.cr#L313","def":{"name":"set_permissions","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"if Dir.exists?(libs_path.to_s)\n  File.chmod(libs_path.to_s, 448)\nend\nif !(File.symlink?(app_path.to_s))\n  File.chmod(app_path.to_s, 488)\nend\nFile.chmod(conf_path.to_s, (pkg_file.type.html? ? 456 : 448))\nif File.exists?(site_path_str = site_path.to_s)\n  File.chmod(site_path_str, 8)\nend\nFile.chmod(@path.to_s, 488)\nFile.chmod(logs_path.to_s, 448)\nFile.chmod(data_path.to_s, 448)\n"}},{"id":"shared?:Bool-instance-method","html_id":"shared?:Bool-instance-method","name":"shared?","doc":"Use a shared application package.","summary":"<p>Use a shared application package.</p>","abstract":false,"args":[],"args_string":" : Bool","source_link":"https://github.com/DFabric/dppm/blob/4a1bc37bc6872377dbc36759a4d46e84ec35bbb5/src/prefix/app.cr#L287","def":{"name":"shared?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Bool","visibility":"Public","body":"app_path_str = app_path.to_s\nif !(File.exists?(app_path_str))\n  raise(\"Application directory doesn't exist: \" + app_path_str)\nend\nFile.symlink?(app_path_str)\n"}},{"id":"upgrade(tag:String?=nil,version:String?=nil,vars:Hash(String,String)=Hash(String,String).new,shared:Bool=true,confirmation:Bool=true,&block)-instance-method","html_id":"upgrade(tag:String?=nil,version:String?=nil,vars:Hash(String,String)=Hash(String,String).new,shared:Bool=true,confirmation:Bool=true,&block)-instance-method","name":"upgrade","doc":null,"summary":null,"abstract":false,"args":[{"name":"tag","doc":null,"default_value":"nil","external_name":"tag","restriction":"String | ::Nil"},{"name":"version","doc":null,"default_value":"nil","external_name":"version","restriction":"String | ::Nil"},{"name":"vars","doc":null,"default_value":"Hash(String, String).new","external_name":"vars","restriction":"Hash(String, String)"},{"name":"shared","doc":null,"default_value":"true","external_name":"shared","restriction":"Bool"},{"name":"confirmation","doc":null,"default_value":"true","external_name":"confirmation","restriction":"Bool"}],"args_string":"(tag : String? = <span class=\"n\">nil</span>, version : String? = <span class=\"n\">nil</span>, vars : Hash(String, String) = <span class=\"t\">Hash</span>(<span class=\"t\">String</span>, <span class=\"t\">String</span>).<span class=\"k\">new</span>, shared : Bool = <span class=\"n\">true</span>, confirmation : Bool = <span class=\"n\">true</span>, &block)","source_link":"https://github.com/DFabric/dppm/blob/4a1bc37bc6872377dbc36759a4d46e84ec35bbb5/src/prefix/app.cr#L380","def":{"name":"upgrade","args":[{"name":"tag","doc":null,"default_value":"nil","external_name":"tag","restriction":"String | ::Nil"},{"name":"version","doc":null,"default_value":"nil","external_name":"version","restriction":"String | ::Nil"},{"name":"vars","doc":null,"default_value":"Hash(String, String).new","external_name":"vars","restriction":"Hash(String, String)"},{"name":"shared","doc":null,"default_value":"true","external_name":"shared","restriction":"Bool"},{"name":"confirmation","doc":null,"default_value":"true","external_name":"confirmation","restriction":"Bool"}],"double_splat":null,"splat_index":null,"yields":0,"block_arg":{"name":"block","doc":null,"default_value":"","external_name":"block","restriction":""},"return_type":"","visibility":"Public","body":"new_pkg = @prefix.new_pkg(package: pkg.package, version: version, tag: tag)\ncase new_pkg.semantic_version\nwhen  < pkg.semantic_version\n  Logger.warn(\"downgrading is not recommended\", \"from `#{pkg.version}` to `#{new_pkg.version}`\")\nwhen  == pkg.semantic_version\n  current_shared_state = shared?\n  if current_shared_state == shared\n    Logger.info(\"nothing to do\", pkg.version)\n    return self\n  else\n    Logger.info(\"changing application's package shared state\", \"from `#{current_shared_state}` to `#{shared}`\")\n  end\nend\nvars[\"package\"] = pkg.package\nvars[\"version_current\"] = pkg.version\nvars[\"version\"] = new_pkg.version\nvars[\"basedir\"] = @path.to_s\nvars[\"name\"] = @name\nif env = pkg_file.env\n  vars.merge!(env)\nend\ndeps = Set(Prefix::Pkg).new\nnew_pkg.build(deps, false) do\n  simulate(vars, deps, \"upgrade\", confirmation, Logger.output, &block)\nend\nFileUtils.rm_r(app_path.to_s)\nFile.delete(pkg_file.path.to_s)\n@pkg = new_pkg\ncreate_application_dir(shared)\nwrite_configs\nset_permissions\nif Process.root?\n  Utils.chown_r(@path.to_s, file_info.owner_id.to_u32, file_info.group_id.to_u32)\nend\nLogger.info(\"upgrade completed\", @path.to_s)\nself\n"}},{"id":"uri?:URI?-instance-method","html_id":"uri?:URI?-instance-method","name":"uri?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : URI?","source_link":"https://github.com/DFabric/dppm/blob/4a1bc37bc6872377dbc36759a4d46e84ec35bbb5/src/prefix/app.cr#L902","def":{"name":"uri?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"URI | ::Nil","visibility":"Public","body":"if (host = get_config?(\"host\")) && (port = get_config?(\"port\"))\n  URI.parse(\"//#{host}:#{port}\")\nend"}},{"id":"webserver?:Prefix::App?-instance-method","html_id":"webserver?:Prefix::App?-instance-method","name":"webserver?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Prefix::App?","source_link":"https://github.com/DFabric/dppm/blob/4a1bc37bc6872377dbc36759a4d46e84ec35bbb5/src/prefix/app.cr#L337","def":{"name":"webserver?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Prefix::App | ::Nil","visibility":"Public","body":"if File.exists?(webserver_sites_path)\n  @prefix.new_app(Path[File.real_path(webserver_sites_path.to_s)].parent.parent.parent.basename)\nend"}},{"id":"webserver_sites_path-instance-method","html_id":"webserver_sites_path-instance-method","name":"webserver_sites_path","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/DFabric/dppm/blob/4a1bc37bc6872377dbc36759a4d46e84ec35bbb5/src/prefix/app.cr#L12","def":{"name":"webserver_sites_path","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"if (value = @webserver_sites_path).nil?\n  @webserver_sites_path = (conf_path / \"sites\")\nelse\n  value\nend"}},{"id":"website=(website:WebSite::Caddy)-instance-method","html_id":"website=(website:WebSite::Caddy)-instance-method","name":"website=","doc":null,"summary":null,"abstract":false,"args":[{"name":"website","doc":null,"default_value":"","external_name":"website","restriction":"WebSite::Caddy"}],"args_string":"(website : WebSite::Caddy)","source_link":"https://github.com/DFabric/dppm/blob/4a1bc37bc6872377dbc36759a4d46e84ec35bbb5/src/prefix/app.cr#L349","def":{"name":"website=","args":[{"name":"website","doc":null,"default_value":"","external_name":"website","restriction":"WebSite::Caddy"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@website = website"}},{"id":"website?:WebSite::Caddy|Nil?-instance-method","html_id":"website?:WebSite::Caddy|Nil?-instance-method","name":"website?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : WebSite::Caddy | Nil?","source_link":"https://github.com/DFabric/dppm/blob/4a1bc37bc6872377dbc36759a4d46e84ec35bbb5/src/prefix/app.cr#L343","def":{"name":"website?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"WebSite::Caddy | ::Nil | ::Nil","visibility":"Public","body":"if (value = @website).nil?\n  @website = (if server = webserver?\n    server.parse_site(@name)\n  end)\nelse\n  value\nend"}},{"id":"write_configs:Nil-instance-method","html_id":"write_configs:Nil-instance-method","name":"write_configs","doc":"Write all configurations","summary":"<p>Write all configurations</p>","abstract":false,"args":[],"args_string":" : Nil","source_link":"https://github.com/DFabric/dppm/blob/4a1bc37bc6872377dbc36759a4d46e84ec35bbb5/src/prefix/app.cr#L213","def":{"name":"write_configs","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Nil","visibility":"Public","body":"if app_config = @config\n  File.write(config_file!.to_s, app_config.build, 448)\nend\nconfig_import\nlibs.each do |library|\n  if (lib_config_file = library.app_config_file) && (lib_config = library.app_config)\n    File.write(lib_config_file.to_s, lib_config.build)\n  end\nend\n"}}],"macros":[],"types":[{"html_id":"dppm/DPPM/Prefix/App/Owner","path":"DPPM/Prefix/App/Owner.html","kind":"struct","full_name":"DPPM::Prefix::App::Owner","name":"Owner","abstract":false,"superclass":{"html_id":"dppm/Struct","kind":"struct","full_name":"Struct","name":"Struct"},"ancestors":[{"html_id":"dppm/Struct","kind":"struct","full_name":"Struct","name":"Struct"},{"html_id":"dppm/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"dppm/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/prefix/app.cr","line_number":908,"url":"https://github.com/DFabric/dppm/blob/4a1bc37bc6872377dbc36759a4d46e84ec35bbb5/src/prefix/app.cr#L908"}],"repository_name":"dppm","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"dppm/DPPM/Prefix/App","kind":"struct","full_name":"DPPM::Prefix::App","name":"App"},"doc":null,"summary":null,"class_methods":[],"constructors":[{"id":"new(user:Libcrown::User,group:Libcrown::Group)-class-method","html_id":"new(user:Libcrown::User,group:Libcrown::Group)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"user","doc":null,"default_value":"","external_name":"user","restriction":"Libcrown::User"},{"name":"group","doc":null,"default_value":"","external_name":"group","restriction":"Libcrown::Group"}],"args_string":"(user : Libcrown::User, group : Libcrown::Group)","source_link":"https://github.com/DFabric/dppm/blob/4a1bc37bc6872377dbc36759a4d46e84ec35bbb5/src/prefix/app.cr#L908","def":{"name":"new","args":[{"name":"user","doc":null,"default_value":"","external_name":"user","restriction":"Libcrown::User"},{"name":"group","doc":null,"default_value":"","external_name":"group","restriction":"Libcrown::Group"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(user, group)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"clone-instance-method","html_id":"clone-instance-method","name":"clone","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/DFabric/dppm/blob/4a1bc37bc6872377dbc36759a4d46e84ec35bbb5/src/prefix/app.cr#L908","def":{"name":"clone","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self.class.new(@user.clone, @group.clone)"}},{"id":"copy_with(user_user=@user,group_group=@group)-instance-method","html_id":"copy_with(user_user=@user,group_group=@group)-instance-method","name":"copy_with","doc":null,"summary":null,"abstract":false,"args":[{"name":"_user","doc":null,"default_value":"@user","external_name":"user","restriction":""},{"name":"_group","doc":null,"default_value":"@group","external_name":"group","restriction":""}],"args_string":"(user _user = @user, group _group = @group)","source_link":"https://github.com/DFabric/dppm/blob/4a1bc37bc6872377dbc36759a4d46e84ec35bbb5/src/prefix/app.cr#L908","def":{"name":"copy_with","args":[{"name":"_user","doc":null,"default_value":"@user","external_name":"user","restriction":""},{"name":"_group","doc":null,"default_value":"@group","external_name":"group","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self.class.new(_user, _group)"}},{"id":"group:Libcrown::Group-instance-method","html_id":"group:Libcrown::Group-instance-method","name":"group","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Libcrown::Group","source_link":null,"def":{"name":"group","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Libcrown::Group","visibility":"Public","body":"@group"}},{"id":"user:Libcrown::User-instance-method","html_id":"user:Libcrown::User-instance-method","name":"user","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Libcrown::User","source_link":null,"def":{"name":"user","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Libcrown::User","visibility":"Public","body":"@user"}}],"macros":[],"types":[]}]},{"html_id":"dppm/DPPM/Prefix/Base","path":"DPPM/Prefix/Base.html","kind":"module","full_name":"DPPM::Prefix::Base","name":"Base","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"src/prefix/base.cr","line_number":5,"url":"https://github.com/DFabric/dppm/blob/4a1bc37bc6872377dbc36759a4d46e84ec35bbb5/src/prefix/base.cr#L5"}],"repository_name":"dppm","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[{"html_id":"dppm/DPPM/Prefix/ProgramData","kind":"module","full_name":"DPPM::Prefix::ProgramData","name":"ProgramData"},{"html_id":"dppm/DPPM/Prefix/Src","kind":"struct","full_name":"DPPM::Prefix::Src","name":"Src"}],"namespace":{"html_id":"dppm/DPPM/Prefix","kind":"struct","full_name":"DPPM::Prefix","name":"Prefix"},"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[{"id":"conf_path-instance-method","html_id":"conf_path-instance-method","name":"conf_path","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/DFabric/dppm/blob/4a1bc37bc6872377dbc36759a4d46e84ec35bbb5/src/prefix/base.cr#L16","def":{"name":"conf_path","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"if (value = @conf_path).nil?\n  @conf_path = (@path / \"conf\")\nelse\n  value\nend"}},{"id":"config!:::Config::Types-instance-method","html_id":"config!:::Config::Types-instance-method","name":"config!","doc":"Raises if no configuration is available.","summary":"<p>Raises if no configuration is available.</p>","abstract":false,"args":[],"args_string":" : ::Config::Types","source_link":"https://github.com/DFabric/dppm/blob/4a1bc37bc6872377dbc36759a4d46e84ec35bbb5/src/prefix/base.cr#L53","def":{"name":"config!","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"::Config::Types","visibility":"Public","body":"config? || (raise(\"No valid config file: #{conf_path}/config.*\"))"}},{"id":"config?:::Config::Types|Nil?-instance-method","html_id":"config?:::Config::Types|Nil?-instance-method","name":"config?","doc":"Returns the main configuration.","summary":"<p>Returns the main configuration.</p>","abstract":false,"args":[],"args_string":" : ::Config::Types | Nil?","source_link":"https://github.com/DFabric/dppm/blob/4a1bc37bc6872377dbc36759a4d46e84ec35bbb5/src/prefix/base.cr#L44","def":{"name":"config?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"::Config::Types | ::Nil | ::Nil","visibility":"Public","body":"if (value = @config).nil?\n  @config = (begin\n    if (!@config_initialized) && config_file?\n      @config = ::Config.read?(config_file!)\n      @config_initialized = true\n    end\n    @config\n  end)\nelse\n  value\nend"}},{"id":"config_file!:Path-instance-method","html_id":"config_file!:Path-instance-method","name":"config_file!","doc":"Raises if the configuration file doesn't exist.","summary":"<p>Raises if the configuration file doesn't exist.</p>","abstract":false,"args":[],"args_string":" : Path","source_link":"https://github.com/DFabric/dppm/blob/4a1bc37bc6872377dbc36759a4d46e84ec35bbb5/src/prefix/base.cr#L37","def":{"name":"config_file!","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Path","visibility":"Public","body":"config_file? || (raise(\"Config file not available\"))"}},{"id":"config_file?:Path|Nil?-instance-method","html_id":"config_file?:Path|Nil?-instance-method","name":"config_file?","doc":"Raises if the configuration file if it exists.","summary":"<p>Raises if the configuration file if it exists.</p>","abstract":false,"args":[],"args_string":" : Path | Nil?","source_link":"https://github.com/DFabric/dppm/blob/4a1bc37bc6872377dbc36759a4d46e84ec35bbb5/src/prefix/base.cr#L22","def":{"name":"config_file?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Path | ::Nil | ::Nil","visibility":"Public","body":"if (value = @config_file).nil?\n  @config_file = (begin\n    if !@config_file_initialized\n      if Dir.exists?(conf_path.to_s)\n        Dir.each_child(conf_path.to_s) do |file|\n          if file.starts_with?(\"config.\")\n            @config_file = conf_path / file\n          end\n        end\n      end\n      @config_file_initialized = true\n    end\n    @config_file\n  end)\nelse\n  value\nend"}},{"id":"database?:Database::MySQL|Nil?-instance-method","html_id":"database?:Database::MySQL|Nil?-instance-method","name":"database?","doc":"Returns a database, if any.","summary":"<p>Returns a database, if any.</p>","abstract":false,"args":[],"args_string":" : Database::MySQL | Nil?","source_link":"https://github.com/DFabric/dppm/blob/4a1bc37bc6872377dbc36759a4d46e84ec35bbb5/src/prefix/base.cr#L59","def":{"name":"database?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Database::MySQL | Nil | ::Nil","visibility":"Public","body":"if (value = @database).nil?\n  @database = (if !@database_initialized\n    @database_initialized = true\n    if pkg_file.config_vars\n      if database_type = get_config?(\"database_type\")\n        type = database_type.to_s\n      else\n        if databases = pkg_file.databases\n          type = databases.first.first\n        else\n          return\n        end\n      end\n      if !(Database.supported?(type))\n        return\n      end\n      if database_address = get_config?(\"database_address\")\n        uri = URI.parse(\"//#{database_address}\")\n      else\n        if database_host = get_config?(\"database_host\")\n          uri = URI.new(host: database_host.to_s, port: (get_config(\"database_port\")).to_s.to_i?)\n        end\n      end\n    else\n      return\n    end\n    if uri\n      uri.password = (get_config(\"database_password\")).to_s\n      uri.user = user = (get_config(\"database_user\")).to_s\n      Database.new(uri, user, type)\n    end\n  end)\nelse\n  value\nend"}},{"id":"deps_with_expr-instance-method","html_id":"deps_with_expr-instance-method","name":"deps_with_expr","doc":"`Hash` of each source with its version expression to match.","summary":"<p><code>Hash</code> of each source with its version expression to match.</p>","abstract":false,"args":[],"args_string":"","source_link":"https://github.com/DFabric/dppm/blob/4a1bc37bc6872377dbc36759a4d46e84ec35bbb5/src/prefix/base.cr#L132","def":{"name":"deps_with_expr","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"if (value = @deps_with_expr).nil?\n  @deps_with_expr = (begin\n    deps = Hash(Prefix::Src, String).new\n    pkg_file.deps.try(&.each do |name, version|\n      deps[prefix.new_src(name)] = version\n    end)\n    deps\n  end)\nelse\n  value\nend"}},{"id":"each_config_key(&block:String->)-instance-method","html_id":"each_config_key(&block:String->)-instance-method","name":"each_config_key","doc":null,"summary":null,"abstract":true,"args":[],"args_string":"(&block : String -> )","source_link":"https://github.com/DFabric/dppm/blob/4a1bc37bc6872377dbc36759a4d46e84ec35bbb5/src/prefix/base.cr#L123","def":{"name":"each_config_key","args":[],"double_splat":null,"splat_index":null,"yields":1,"block_arg":{"name":"block","doc":null,"default_value":"","external_name":"block","restriction":"(String -> )"},"return_type":"","visibility":"Public","body":""}},{"id":"get_config(key:String)-instance-method","html_id":"get_config(key:String)-instance-method","name":"get_config","doc":"Gets the config key. Raises a `ConfigKeyError` if the key is not found.","summary":"<p>Gets the config key.</p>","abstract":false,"args":[{"name":"key","doc":null,"default_value":"","external_name":"key","restriction":"String"}],"args_string":"(key : String)","source_link":"https://github.com/DFabric/dppm/blob/4a1bc37bc6872377dbc36759a4d46e84ec35bbb5/src/prefix/base.cr#L102","def":{"name":"get_config","args":[{"name":"key","doc":null,"default_value":"","external_name":"key","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"get_config(key) do\n  config_key_exception(key)\nend"}},{"id":"get_config(key:String,&)-instance-method","html_id":"get_config(key:String,&)-instance-method","name":"get_config","doc":null,"summary":null,"abstract":true,"args":[{"name":"key","doc":null,"default_value":"","external_name":"key","restriction":"String"}],"args_string":"(key : String, &)","source_link":"https://github.com/DFabric/dppm/blob/4a1bc37bc6872377dbc36759a4d46e84ec35bbb5/src/prefix/base.cr#L111","def":{"name":"get_config","args":[{"name":"key","doc":null,"default_value":"","external_name":"key","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":0,"block_arg":null,"return_type":"","visibility":"Public","body":""}},{"id":"get_config?(key:String)-instance-method","html_id":"get_config?(key:String)-instance-method","name":"get_config?","doc":"Gets the config key, if any.","summary":"<p>Gets the config key, if any.</p>","abstract":false,"args":[{"name":"key","doc":null,"default_value":"","external_name":"key","restriction":"String"}],"args_string":"(key : String)","source_link":"https://github.com/DFabric/dppm/blob/4a1bc37bc6872377dbc36759a4d46e84ec35bbb5/src/prefix/base.cr#L107","def":{"name":"get_config?","args":[{"name":"key","doc":null,"default_value":"","external_name":"key","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"get_config(key) do\n  nil\nend"}},{"id":"libs_path-instance-method","html_id":"libs_path-instance-method","name":"libs_path","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/DFabric/dppm/blob/4a1bc37bc6872377dbc36759a4d46e84ec35bbb5/src/prefix/base.cr#L15","def":{"name":"libs_path","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"if (value = @libs_path).nil?\n  @libs_path = (@path / \"libs/\")\nelse\n  value\nend"}},{"id":"name:String-instance-method","html_id":"name:String-instance-method","name":"name","doc":"Name of the package.","summary":"<p>Name of the package.</p>","abstract":false,"args":[],"args_string":" : String","source_link":"https://github.com/DFabric/dppm/blob/4a1bc37bc6872377dbc36759a4d46e84ec35bbb5/src/prefix/base.cr#L10","def":{"name":"name","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"String","visibility":"Public","body":"@name"}},{"id":"path:Path-instance-method","html_id":"path:Path-instance-method","name":"path","doc":"Root path of the package.","summary":"<p>Root path of the package.</p>","abstract":false,"args":[],"args_string":" : Path","source_link":"https://github.com/DFabric/dppm/blob/4a1bc37bc6872377dbc36759a4d46e84ec35bbb5/src/prefix/base.cr#L7","def":{"name":"path","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Path","visibility":"Public","body":"@path"}},{"id":"pkg_file-instance-method","html_id":"pkg_file-instance-method","name":"pkg_file","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/DFabric/dppm/blob/4a1bc37bc6872377dbc36759a4d46e84ec35bbb5/src/prefix/base.cr#L17","def":{"name":"pkg_file","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"if (value = @pkg_file).nil?\n  @pkg_file = (PkgFile.new(@path))\nelse\n  value\nend"}},{"id":"port_checker(host:String):PortChecker-instance-method","html_id":"port_checker(host:String):PortChecker-instance-method","name":"port_checker","doc":"Returns a port checker.","summary":"<p>Returns a port checker.</p>","abstract":false,"args":[{"name":"host","doc":null,"default_value":"","external_name":"host","restriction":"String"}],"args_string":"(host : String) : PortChecker","source_link":"https://github.com/DFabric/dppm/blob/4a1bc37bc6872377dbc36759a4d46e84ec35bbb5/src/prefix/base.cr#L176","def":{"name":"port_checker","args":[{"name":"host","doc":null,"default_value":"","external_name":"host","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"PortChecker","visibility":"Public","body":"case pkg_file.type\nwhen .http?, .tcp?, .php?, .tcp_udp?\n  PortChecker.new(host, tcp: true)\nwhen .udp?\n  PortChecker.new(host, udp: true)\nwhen .tcp_udp?\n  PortChecker.new(host, tcp: true, udp: true)\nelse\n  raise(\"Not an application that can listen to an address with a host and port: #{pkg_file.type}\")\nend"}},{"id":"prefix:Prefix-instance-method","html_id":"prefix:Prefix-instance-method","name":"prefix","doc":"Prefix used.","summary":"<p>Prefix used.</p>","abstract":false,"args":[],"args_string":" : Prefix","source_link":"https://github.com/DFabric/dppm/blob/4a1bc37bc6872377dbc36759a4d46e84ec35bbb5/src/prefix/base.cr#L13","def":{"name":"prefix","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Prefix","visibility":"Public","body":"@prefix"}},{"id":"resolve_deps(dependencies:Hash(String,Array(SemanticVersion))=Hash(String,Array(SemanticVersion)).new):Hash(String,Array(SemanticVersion))-instance-method","html_id":"resolve_deps(dependencies:Hash(String,Array(SemanticVersion))=Hash(String,Array(SemanticVersion)).new):Hash(String,Array(SemanticVersion))-instance-method","name":"resolve_deps","doc":"Resolves semver expressions recursively.","summary":"<p>Resolves semver expressions recursively.</p>","abstract":false,"args":[{"name":"dependencies","doc":null,"default_value":"Hash(String, Array(SemanticVersion)).new","external_name":"dependencies","restriction":"Hash(String, Array(SemanticVersion))"}],"args_string":"(dependencies : Hash(String, Array(SemanticVersion)) = <span class=\"t\">Hash</span>(<span class=\"t\">String</span>, <span class=\"t\">Array</span>(<span class=\"t\">SemanticVersion</span>)).<span class=\"k\">new</span>) : Hash(String, Array(SemanticVersion))","source_link":"https://github.com/DFabric/dppm/blob/4a1bc37bc6872377dbc36759a4d46e84ec35bbb5/src/prefix/base.cr#L141","def":{"name":"resolve_deps","args":[{"name":"dependencies","doc":null,"default_value":"Hash(String, Array(SemanticVersion)).new","external_name":"dependencies","restriction":"Hash(String, Array(SemanticVersion))"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Hash(String, Array(SemanticVersion))","visibility":"Public","body":"deps_with_expr.each do |dep_src, version_expr|\n  if !(File.exists?((libs_path / dep_src.name).to_s))\n    Logger.info(\"calculating dependency\", dep_src.name)\n    if dep_vers = dependencies[dep_src.name]?\n      dep_vers.select! do |semantic_version|\n        SemanticCompare.complex_expression(semantic_version, version_expr)\n      end\n    else\n      dep_vers = dependencies[dep_src.name] = Array(SemanticVersion).new\n      dep_src.pkg_file.each_version do |ver|\n        semantic_version = SemanticVersion.parse(ver)\n        if SemanticCompare.complex_expression(semantic_version, version_expr)\n          dep_vers << semantic_version\n        end\n      end\n    end\n    if dep_vers.empty?\n      raise(\"Dependency error for `#{dep_src.pkg_file.package}`: no versions match `#{version_expr}`\")\n    end\n    if dep_src.pkg_file.deps\n      dependencies = dep_src.resolve_deps(dependencies)\n    end\n  end\nend\ndependencies\n"}}],"macros":[],"types":[{"html_id":"dppm/DPPM/Prefix/Base/ConfigKeyError","path":"DPPM/Prefix/Base/ConfigKeyError.html","kind":"class","full_name":"DPPM::Prefix::Base::ConfigKeyError","name":"ConfigKeyError","abstract":false,"superclass":{"html_id":"dppm/Exception","kind":"class","full_name":"Exception","name":"Exception"},"ancestors":[{"html_id":"dppm/Exception","kind":"class","full_name":"Exception","name":"Exception"},{"html_id":"dppm/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"dppm/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/prefix/base.cr","line_number":94,"url":"https://github.com/DFabric/dppm/blob/4a1bc37bc6872377dbc36759a4d46e84ec35bbb5/src/prefix/base.cr#L94"}],"repository_name":"dppm","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"dppm/DPPM/Prefix/Base","kind":"module","full_name":"DPPM::Prefix::Base","name":"Base"},"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[]}]},{"html_id":"dppm/DPPM/Prefix/Config","path":"DPPM/Prefix/Config.html","kind":"struct","full_name":"DPPM::Prefix::Config","name":"Config","abstract":false,"superclass":{"html_id":"dppm/Struct","kind":"struct","full_name":"Struct","name":"Struct"},"ancestors":[{"html_id":"dppm/Struct","kind":"struct","full_name":"Struct","name":"Struct"},{"html_id":"dppm/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"dppm/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/prefix/config.cr","line_number":1,"url":"https://github.com/DFabric/dppm/blob/4a1bc37bc6872377dbc36759a4d46e84ec35bbb5/src/prefix/config.cr#L1"}],"repository_name":"dppm","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"dppm/DPPM/Prefix","kind":"struct","full_name":"DPPM::Prefix","name":"Prefix"},"doc":null,"summary":null,"class_methods":[],"constructors":[{"id":"new(data:String|IO)-class-method","html_id":"new(data:String|IO)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"data","doc":null,"default_value":"","external_name":"data","restriction":"String | IO"}],"args_string":"(data : String | IO)","source_link":"https://github.com/DFabric/dppm/blob/4a1bc37bc6872377dbc36759a4d46e84ec35bbb5/src/prefix/config.cr#L6","def":{"name":"new","args":[{"name":"data","doc":null,"default_value":"","external_name":"data","restriction":"String | IO"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(data)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"host:String-instance-method","html_id":"host:String-instance-method","name":"host","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : String","source_link":"https://github.com/DFabric/dppm/blob/4a1bc37bc6872377dbc36759a4d46e84ec35bbb5/src/prefix/config.cr#L3","def":{"name":"host","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"String","visibility":"Public","body":"@host"}},{"id":"port:Int32-instance-method","html_id":"port:Int32-instance-method","name":"port","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Int32","source_link":"https://github.com/DFabric/dppm/blob/4a1bc37bc6872377dbc36759a4d46e84ec35bbb5/src/prefix/config.cr#L4","def":{"name":"port","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Int32","visibility":"Public","body":"@port"}},{"id":"sources:Hash(String,String)-instance-method","html_id":"sources:Hash(String,String)-instance-method","name":"sources","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Hash(String, String)","source_link":"https://github.com/DFabric/dppm/blob/4a1bc37bc6872377dbc36759a4d46e84ec35bbb5/src/prefix/config.cr#L2","def":{"name":"sources","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Hash(String, String)","visibility":"Public","body":"@sources"}}],"macros":[],"types":[]},{"html_id":"dppm/DPPM/Prefix/Pkg","path":"DPPM/Prefix/Pkg.html","kind":"class","full_name":"DPPM::Prefix::Pkg","name":"Pkg","abstract":false,"superclass":{"html_id":"dppm/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"dppm/DPPM/Prefix/ProgramData","kind":"module","full_name":"DPPM::Prefix::ProgramData","name":"ProgramData"},{"html_id":"dppm/DPPM/Prefix/Base","kind":"module","full_name":"DPPM::Prefix::Base","name":"Base"},{"html_id":"dppm/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"dppm/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/prefix/pkg.cr","line_number":4,"url":"https://github.com/DFabric/dppm/blob/4a1bc37bc6872377dbc36759a4d46e84ec35bbb5/src/prefix/pkg.cr#L4"}],"repository_name":"dppm","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[{"html_id":"dppm/DPPM/Prefix/ProgramData","kind":"module","full_name":"DPPM::Prefix::ProgramData","name":"ProgramData"}],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"dppm/DPPM/Prefix","kind":"struct","full_name":"DPPM::Prefix","name":"Prefix"},"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[{"id":"bin_path:Path-instance-method","html_id":"bin_path:Path-instance-method","name":"bin_path","doc":"Path of the application binary.","summary":"<p>Path of the application binary.</p>","abstract":false,"args":[],"args_string":" : Path","source_link":"https://github.com/DFabric/dppm/blob/4a1bc37bc6872377dbc36759a4d46e84ec35bbb5/src/prefix/pkg.cr#L17","def":{"name":"bin_path","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Path","visibility":"Public","body":"@bin_path"}},{"id":"build-instance-method","html_id":"build-instance-method","name":"build","doc":"Used to install dependencies, avoiding recursive block expansions","summary":"<p>Used to install dependencies, avoiding recursive block expansions</p>","abstract":false,"args":[],"args_string":"","source_link":"https://github.com/DFabric/dppm/blob/4a1bc37bc6872377dbc36759a4d46e84ec35bbb5/src/prefix/pkg.cr#L105","def":{"name":"build","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"build(confirmation: false) do\nend"}},{"id":"build(deps:Set(Pkg)=Set(Pkg).new,confirmation:Bool=true,&block):Pkg-instance-method","html_id":"build(deps:Set(Pkg)=Set(Pkg).new,confirmation:Bool=true,&block):Pkg-instance-method","name":"build","doc":"Build the package. Yields a block before writing on disk. When confirmation is set, the block must be true to continue.","summary":"<p>Build the package.</p>","abstract":false,"args":[{"name":"deps","doc":null,"default_value":"Set(Pkg).new","external_name":"deps","restriction":"Set(Pkg)"},{"name":"confirmation","doc":null,"default_value":"true","external_name":"confirmation","restriction":"Bool"}],"args_string":"(deps : Set(Pkg) = <span class=\"t\">Set</span>(<span class=\"t\">Pkg</span>).<span class=\"k\">new</span>, confirmation : Bool = <span class=\"n\">true</span>, &block) : Pkg","source_link":"https://github.com/DFabric/dppm/blob/4a1bc37bc6872377dbc36759a4d46e84ec35bbb5/src/prefix/pkg.cr#L110","def":{"name":"build","args":[{"name":"deps","doc":null,"default_value":"Set(Pkg).new","external_name":"deps","restriction":"Set(Pkg)"},{"name":"confirmation","doc":null,"default_value":"true","external_name":"confirmation","restriction":"Bool"}],"double_splat":null,"splat_index":null,"yields":0,"block_arg":{"name":"block","doc":null,"default_value":"","external_name":"block","restriction":""},"return_type":"Pkg","visibility":"Public","body":"Logger.info(\"calculing package dependencies\", @name)\nsrc.resolve_deps.each do |dep_name, versions|\n  dep_src = @prefix.new_src(dep_name)\n  latest = dep_src.pkg_file.version_from_tag(\"latest\")\n  version = if versions.includes?(latest)\n    latest\n  else\n    versions.first.to_s\n  end\n  deps << (dep_src.new_pkg(dep_name, version))\nend\nif exists?\n  Logger.info(\"already present\", @path.to_s)\n  if confirmation\n    return self\n  end\n  yield\n  return self\nend\nif !@pkg_file\n  import_pkg_file(src.pkg_file)\nend\npkg_file.ensure_version(@version)\nvars = Host.vars.dup\narch_alias = if version_alias = pkg_file.aliases.try(&.[]?(Host.arch))\n  version_alias\nelse\n  Host.arch\nend\nvars[\"prefix\"] = @prefix.path.to_s\nvars[\"version\"] = @version\nvars[\"package\"] = @package\nvars[\"basedir\"] = @path.to_s\nvars[\"arch_alias\"] = arch_alias\nif env = pkg_file.env\n  vars.merge!(env)\nend\nsimulate(vars, deps, \"build\", confirmation, Logger.output, &block)\nbegin\n  copy_src_to_path\n  install_deps(deps) do\n  end\n  if (tasks = pkg_file.tasks) && (build_task = tasks[\"build\"]?)\n    Logger.info(\"building\", @name)\n    Dir.cd(@path.to_s) do\n      (Task.new(vars.dup, all_bin_paths)).run(build_task)\n    end\n  else\n    raise(\"Missing tasks.build key in \" + pkg_file.path.to_s)\n  end\n  FileUtils.rm_rf(libs_path.to_s)\n  @libs = @all_bin_paths = nil\n  Logger.info(\"build completed\", @path.to_s)\n  self\nrescue ex\n  begin\n    delete(false) do\n    end\n  ensure\n    raise(Error.new(\"Build failed - package deleted: #{@path}\", ex))\n  end\nend\n"}},{"id":"copy_src_to_path-instance-method","html_id":"copy_src_to_path-instance-method","name":"copy_src_to_path","doc":"Copy the source to this package directory path","summary":"<p>Copy the source to this package directory path</p>","abstract":false,"args":[],"args_string":"","source_link":"https://github.com/DFabric/dppm/blob/4a1bc37bc6872377dbc36759a4d46e84ec35bbb5/src/prefix/pkg.cr#L56","def":{"name":"copy_src_to_path","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"FileUtils.cp_r(src.path.to_s, @path.to_s)"}},{"id":"create_global_bin_symlinks(force:Bool=false)-instance-method","html_id":"create_global_bin_symlinks(force:Bool=false)-instance-method","name":"create_global_bin_symlinks","doc":"Create symlinks to a globally reachable path","summary":"<p>Create symlinks to a globally reachable path</p>","abstract":false,"args":[{"name":"force","doc":null,"default_value":"false","external_name":"force","restriction":"Bool"}],"args_string":"(force : Bool = <span class=\"n\">false</span>)","source_link":"https://github.com/DFabric/dppm/blob/4a1bc37bc6872377dbc36759a4d46e84ec35bbb5/src/prefix/pkg.cr#L87","def":{"name":"create_global_bin_symlinks","args":[{"name":"force","doc":null,"default_value":"false","external_name":"force","restriction":"Bool"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"each_binary_with_path do |path, binary|\n  global_bin = Path[\"/usr/local/bin\", binary].to_s\n  if (File.symlink?(global_bin)) || (File.exists?(global_bin))\n    File.delete(global_bin)\n  end\n  File.symlink((path / binary).to_s, global_bin)\nend"}},{"id":"delete(confirmation:Bool=true,&):Pkg?-instance-method","html_id":"delete(confirmation:Bool=true,&):Pkg?-instance-method","name":"delete","doc":null,"summary":null,"abstract":false,"args":[{"name":"confirmation","doc":null,"default_value":"true","external_name":"confirmation","restriction":"Bool"}],"args_string":"(confirmation : Bool = <span class=\"n\">true</span>, &) : Pkg?","source_link":"https://github.com/DFabric/dppm/blob/4a1bc37bc6872377dbc36759a4d46e84ec35bbb5/src/prefix/pkg.cr#L194","def":{"name":"delete","args":[{"name":"confirmation","doc":null,"default_value":"true","external_name":"confirmation","restriction":"Bool"}],"double_splat":null,"splat_index":null,"yields":0,"block_arg":null,"return_type":"Pkg | ::Nil","visibility":"Public","body":"if !(File.exists?(@path.to_s))\n  raise(\"Package doesn't exist: \" + @path.to_s)\nend\nLogger.info(\"check packages in use\", @path.to_s)\nprefix.each_app do |app|\n  if @path == app.real_app_path\n    raise(\"Application package `#{package}` still in use by an application: \" + app.name)\n  end\n  app.libs.each do |library|\n    if @path == library.path\n      raise(\"Library package `#{package}` still in use by an application: \" + app.name)\n    end\n  end\nend\nif confirmation\n  Logger.output << \"task: delete\"\n  (Logger.output << \"\\npackage: \") << @package\n  (Logger.output << \"\\nversion: \") << @version\n  (Logger.output << \"\\nbasedir: \") << @path\n  Logger.output << '\\n'\n  if !(yield)\n    return\n  end\nend\nif Process.root?\n  delete_global_bin_symlinks\nend\nFileUtils.rm_rf(@path.to_s)\nLogger.info(\"package deleted\", @path.to_s)\nself\n"}},{"id":"delete_global_bin_symlinks-instance-method","html_id":"delete_global_bin_symlinks-instance-method","name":"delete_global_bin_symlinks","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/DFabric/dppm/blob/4a1bc37bc6872377dbc36759a4d46e84ec35bbb5/src/prefix/pkg.cr#L95","def":{"name":"delete_global_bin_symlinks","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"each_binary_with_path do |path, binary|\n  global_bin = Path[\"/usr/local/bin\", binary].to_s\n  if (File.exists?(global_bin)) && ((File.real_path(global_bin)) == (path / binary).to_s)\n    File.delete(global_bin)\n  end\nend"}},{"id":"each_binary_with_path(&block:Path,String->)-instance-method","html_id":"each_binary_with_path(&block:Path,String->)-instance-method","name":"each_binary_with_path","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"(&block : Path, String -> )","source_link":"https://github.com/DFabric/dppm/blob/4a1bc37bc6872377dbc36759a4d46e84ec35bbb5/src/prefix/pkg.cr#L76","def":{"name":"each_binary_with_path","args":[],"double_splat":null,"splat_index":null,"yields":2,"block_arg":{"name":"block","doc":null,"default_value":"","external_name":"block","restriction":"(Path, String -> )"},"return_type":"","visibility":"Public","body":"{@bin_path, app_bin_path}.each do |path|\n  if Dir.exists?(path.to_s)\n    Dir.each_child(path.to_s) do |binary|\n      yield path, binary\n    end\n  end\nend"}},{"id":"each_config_key(&block:String->)-instance-method","html_id":"each_config_key(&block:String->)-instance-method","name":"each_config_key","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"(&block : String -> )","source_link":"https://github.com/DFabric/dppm/blob/4a1bc37bc6872377dbc36759a4d46e84ec35bbb5/src/prefix/pkg.cr#L71","def":{"name":"each_config_key","args":[],"double_splat":null,"splat_index":null,"yields":1,"block_arg":{"name":"block","doc":null,"default_value":"","external_name":"block","restriction":"(String -> )"},"return_type":"","visibility":"Public","body":"internal_each_config_key do |key|\n  yield key\nend\ndeps_with_expr.each_key(&.internal_each_config_key do |key|\n  yield key\nend)\n"}},{"id":"get_config(key:String,&)-instance-method","html_id":"get_config(key:String,&)-instance-method","name":"get_config","doc":"Gets the config key. Yields the block if not found.","summary":"<p>Gets the config key.</p>","abstract":false,"args":[{"name":"key","doc":null,"default_value":"","external_name":"key","restriction":"String"}],"args_string":"(key : String, &)","source_link":"https://github.com/DFabric/dppm/blob/4a1bc37bc6872377dbc36759a4d46e84ec35bbb5/src/prefix/pkg.cr#L61","def":{"name":"get_config","args":[{"name":"key","doc":null,"default_value":"","external_name":"key","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":0,"block_arg":null,"return_type":"","visibility":"Public","body":"config_from_pkg_file(key) do |package_config, config_key|\n  return package_config.get(config_key)\nend\ndeps_with_expr.each_key(&.config_from_pkg_file(key) do |package_config, config_key|\n  return package_config.get(config_key)\nend)\nyield\n"}},{"id":"new_app(app_name:String?=nil):App-instance-method","html_id":"new_app(app_name:String?=nil):App-instance-method","name":"new_app","doc":null,"summary":null,"abstract":false,"args":[{"name":"app_name","doc":null,"default_value":"nil","external_name":"app_name","restriction":"String | ::Nil"}],"args_string":"(app_name : String? = <span class=\"n\">nil</span>) : App","source_link":"https://github.com/DFabric/dppm/blob/4a1bc37bc6872377dbc36759a4d46e84ec35bbb5/src/prefix/pkg.cr#L39","def":{"name":"new_app","args":[{"name":"app_name","doc":null,"default_value":"nil","external_name":"app_name","restriction":"String | ::Nil"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"App","visibility":"Public","body":"case pkg_file.type\nwhen .lib?\n  raise(\"Only applications can be added to the system: #{pkg_file.type}\")\nelse\n  app_name || (app_name = (package + '-') + (Random::Secure.hex(8)))\n  Utils.ascii_alphanumeric_dash?(app_name)\nend\nApp.new(@prefix, app_name, pkg_file, self)\n"}},{"id":"package:String-instance-method","html_id":"package:String-instance-method","name":"package","doc":"Package name.","summary":"<p>Package name.</p>","abstract":false,"args":[],"args_string":" : String","source_link":"https://github.com/DFabric/dppm/blob/4a1bc37bc6872377dbc36759a4d46e84ec35bbb5/src/prefix/pkg.cr#L8","def":{"name":"package","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"String","visibility":"Public","body":"@package"}},{"id":"semantic_version-instance-method","html_id":"semantic_version-instance-method","name":"semantic_version","doc":"Semantic version representation.","summary":"<p>Semantic version representation.</p>","abstract":false,"args":[],"args_string":"","source_link":"https://github.com/DFabric/dppm/blob/4a1bc37bc6872377dbc36759a4d46e84ec35bbb5/src/prefix/pkg.cr#L14","def":{"name":"semantic_version","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"if (value = @semantic_version).nil?\n  @semantic_version = (SemanticVersion.parse(@version))\nelse\n  value\nend"}},{"id":"src:Src-instance-method","html_id":"src:Src-instance-method","name":"src","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Src","source_link":"https://github.com/DFabric/dppm/blob/4a1bc37bc6872377dbc36759a4d46e84ec35bbb5/src/prefix/pkg.cr#L51","def":{"name":"src","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Src","visibility":"Public","body":"@src || (@src = Src.new(@prefix, @package, @pkg_file))"}},{"id":"version:String-instance-method","html_id":"version:String-instance-method","name":"version","doc":"Version of the package.","summary":"<p>Version of the package.</p>","abstract":false,"args":[],"args_string":" : String","source_link":"https://github.com/DFabric/dppm/blob/4a1bc37bc6872377dbc36759a4d46e84ec35bbb5/src/prefix/pkg.cr#L11","def":{"name":"version","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"String","visibility":"Public","body":"@version"}}],"macros":[],"types":[]},{"html_id":"dppm/DPPM/Prefix/PkgFile","path":"DPPM/Prefix/PkgFile.html","kind":"struct","full_name":"DPPM::Prefix::PkgFile","name":"PkgFile","abstract":false,"superclass":{"html_id":"dppm/Struct","kind":"struct","full_name":"Struct","name":"Struct"},"ancestors":[{"html_id":"dppm/Struct","kind":"struct","full_name":"Struct","name":"Struct"},{"html_id":"dppm/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"dppm/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/prefix/pkg_file.cr","line_number":3,"url":"https://github.com/DFabric/dppm/blob/4a1bc37bc6872377dbc36759a4d46e84ec35bbb5/src/prefix/pkg_file.cr#L3"}],"repository_name":"dppm","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"dppm/DPPM/Prefix","kind":"struct","full_name":"DPPM::Prefix","name":"Prefix"},"doc":null,"summary":null,"class_methods":[],"constructors":[{"id":"new(root_path:Path)-class-method","html_id":"new(root_path:Path)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"root_path","doc":null,"default_value":"","external_name":"root_path","restriction":"Path"}],"args_string":"(root_path : Path)","source_link":"https://github.com/DFabric/dppm/blob/4a1bc37bc6872377dbc36759a4d46e84ec35bbb5/src/prefix/pkg_file.cr#L85","def":{"name":"new","args":[{"name":"root_path","doc":null,"default_value":"","external_name":"root_path","restriction":"Path"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(root_path)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"aliases:Hash(String,String)?-instance-method","html_id":"aliases:Hash(String,String)?-instance-method","name":"aliases","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Hash(String, String)?","source_link":"https://github.com/DFabric/dppm/blob/4a1bc37bc6872377dbc36759a4d46e84ec35bbb5/src/prefix/pkg_file.cr#L49","def":{"name":"aliases","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Hash(String, String) | ::Nil","visibility":"Public","body":"@aliases"}},{"id":"any:CON::Any-instance-method","html_id":"any:CON::Any-instance-method","name":"any","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : CON::Any","source_link":"https://github.com/DFabric/dppm/blob/4a1bc37bc6872377dbc36759a4d46e84ec35bbb5/src/prefix/pkg_file.cr#L49","def":{"name":"any","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"CON::Any","visibility":"Public","body":"@any"}},{"id":"config:Config?-instance-method","html_id":"config:Config?-instance-method","name":"config","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Config?","source_link":"https://github.com/DFabric/dppm/blob/4a1bc37bc6872377dbc36759a4d46e84ec35bbb5/src/prefix/pkg_file.cr#L49","def":{"name":"config","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Config | ::Nil","visibility":"Public","body":"@config"}},{"id":"config_export:String?-instance-method","html_id":"config_export:String?-instance-method","name":"config_export","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : String?","source_link":"https://github.com/DFabric/dppm/blob/4a1bc37bc6872377dbc36759a4d46e84ec35bbb5/src/prefix/pkg_file.cr#L49","def":{"name":"config_export","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"String | ::Nil","visibility":"Public","body":"@config_export"}},{"id":"config_import:String?-instance-method","html_id":"config_import:String?-instance-method","name":"config_import","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : String?","source_link":"https://github.com/DFabric/dppm/blob/4a1bc37bc6872377dbc36759a4d46e84ec35bbb5/src/prefix/pkg_file.cr#L49","def":{"name":"config_import","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"String | ::Nil","visibility":"Public","body":"@config_import"}},{"id":"config_origin:String?-instance-method","html_id":"config_origin:String?-instance-method","name":"config_origin","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : String?","source_link":"https://github.com/DFabric/dppm/blob/4a1bc37bc6872377dbc36759a4d46e84ec35bbb5/src/prefix/pkg_file.cr#L49","def":{"name":"config_origin","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"String | ::Nil","visibility":"Public","body":"@config_origin"}},{"id":"config_vars:Hash(String,String)?-instance-method","html_id":"config_vars:Hash(String,String)?-instance-method","name":"config_vars","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Hash(String, String)?","source_link":"https://github.com/DFabric/dppm/blob/4a1bc37bc6872377dbc36759a4d46e84ec35bbb5/src/prefix/pkg_file.cr#L49","def":{"name":"config_vars","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Hash(String, String) | ::Nil","visibility":"Public","body":"@config_vars"}},{"id":"databases:Hash(String,String?)?-instance-method","html_id":"databases:Hash(String,String?)?-instance-method","name":"databases","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Hash(String, String?)?","source_link":"https://github.com/DFabric/dppm/blob/4a1bc37bc6872377dbc36759a4d46e84ec35bbb5/src/prefix/pkg_file.cr#L49","def":{"name":"databases","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Hash(String, String | ::Nil) | ::Nil","visibility":"Public","body":"@databases"}},{"id":"deps:Hash(String,String)?-instance-method","html_id":"deps:Hash(String,String)?-instance-method","name":"deps","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Hash(String, String)?","source_link":"https://github.com/DFabric/dppm/blob/4a1bc37bc6872377dbc36759a4d46e84ec35bbb5/src/prefix/pkg_file.cr#L49","def":{"name":"deps","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Hash(String, String) | ::Nil","visibility":"Public","body":"@deps"}},{"id":"description:String-instance-method","html_id":"description:String-instance-method","name":"description","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : String","source_link":"https://github.com/DFabric/dppm/blob/4a1bc37bc6872377dbc36759a4d46e84ec35bbb5/src/prefix/pkg_file.cr#L49","def":{"name":"description","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"String","visibility":"Public","body":"@description"}},{"id":"docs:String-instance-method","html_id":"docs:String-instance-method","name":"docs","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : String","source_link":"https://github.com/DFabric/dppm/blob/4a1bc37bc6872377dbc36759a4d46e84ec35bbb5/src/prefix/pkg_file.cr#L49","def":{"name":"docs","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"String","visibility":"Public","body":"@docs"}},{"id":"each_version(arch:String=Host.arch,kernel:String=Host.kernel,&block:String->)-instance-method","html_id":"each_version(arch:String=Host.arch,kernel:String=Host.kernel,&block:String->)-instance-method","name":"each_version","doc":null,"summary":null,"abstract":false,"args":[{"name":"arch","doc":null,"default_value":"Host.arch","external_name":"arch","restriction":"String"},{"name":"kernel","doc":null,"default_value":"Host.kernel","external_name":"kernel","restriction":"String"}],"args_string":"(arch : String = <span class=\"t\">Host</span>.arch, kernel : String = <span class=\"t\">Host</span>.kernel, &block : String -> )","source_link":"https://github.com/DFabric/dppm/blob/4a1bc37bc6872377dbc36759a4d46e84ec35bbb5/src/prefix/pkg_file.cr#L139","def":{"name":"each_version","args":[{"name":"arch","doc":null,"default_value":"Host.arch","external_name":"arch","restriction":"String"},{"name":"kernel","doc":null,"default_value":"Host.kernel","external_name":"kernel","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":1,"block_arg":{"name":"block","doc":null,"default_value":"","external_name":"block","restriction":"(String -> )"},"return_type":"","visibility":"Public","body":"if hash = @version[\"self\"]?\n  src = hash[\"src\"]?\n  regex = hash[\"regex\"]?\nend\nif version_kernel = @version[kernel]?\n  if !regex\n    if !src\n      raise(\"Unsupported architecure: \" + arch)\n    end\n    regex = version_kernel[arch]\n  end\nelse\n  if (!src) && (!regex)\n    raise(\"Unsupported kernel: \" + kernel)\n  end\nend\nif src\n  if src_array = src.as_a?\n    src_array.each do |version|\n      yield version.as_s\n    end\n  else\n    (HTTPHelper.get_string(src.to_s)).each_line do |line|\n      if line =~ (/#{regex}/)\n        yield $~[0]\n      end\n    end\n  end\nelse\n  raise(\"No source url\")\nend\n"}},{"id":"ensure_version(version:String):String-instance-method","html_id":"ensure_version(version:String):String-instance-method","name":"ensure_version","doc":"Ensure the version number is available","summary":"<p>Ensure the version number is available</p>","abstract":false,"args":[{"name":"version","doc":null,"default_value":"","external_name":"version","restriction":"String"}],"args_string":"(version : String) : String","source_link":"https://github.com/DFabric/dppm/blob/4a1bc37bc6872377dbc36759a4d46e84ec35bbb5/src/prefix/pkg_file.cr#L193","def":{"name":"ensure_version","args":[{"name":"version","doc":null,"default_value":"","external_name":"version","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"String","visibility":"Public","body":"available_version = false\neach_version do |ver|\n  if version == ver\n    available_version = true\n    break\n  end\nend\nif !available_version\n  raise(\"No available version number: \" + version)\nend\nversion\n"}},{"id":"env:Hash(String,String)?-instance-method","html_id":"env:Hash(String,String)?-instance-method","name":"env","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Hash(String, String)?","source_link":"https://github.com/DFabric/dppm/blob/4a1bc37bc6872377dbc36759a4d46e84ec35bbb5/src/prefix/pkg_file.cr#L49","def":{"name":"env","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Hash(String, String) | ::Nil","visibility":"Public","body":"@env"}},{"id":"exec:Hash(String,String)?-instance-method","html_id":"exec:Hash(String,String)?-instance-method","name":"exec","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Hash(String, String)?","source_link":"https://github.com/DFabric/dppm/blob/4a1bc37bc6872377dbc36759a4d46e84ec35bbb5/src/prefix/pkg_file.cr#L49","def":{"name":"exec","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Hash(String, String) | ::Nil","visibility":"Public","body":"@exec"}},{"id":"info:String-instance-method","html_id":"info:String-instance-method","name":"info","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : String","source_link":"https://github.com/DFabric/dppm/blob/4a1bc37bc6872377dbc36759a4d46e84ec35bbb5/src/prefix/pkg_file.cr#L49","def":{"name":"info","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"String","visibility":"Public","body":"@info"}},{"id":"ipv6_braces:Bool?-instance-method","html_id":"ipv6_braces:Bool?-instance-method","name":"ipv6_braces","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Bool?","source_link":"https://github.com/DFabric/dppm/blob/4a1bc37bc6872377dbc36759a4d46e84ec35bbb5/src/prefix/pkg_file.cr#L49","def":{"name":"ipv6_braces","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Bool | ::Nil","visibility":"Public","body":"@ipv6_braces"}},{"id":"license:String-instance-method","html_id":"license:String-instance-method","name":"license","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : String","source_link":"https://github.com/DFabric/dppm/blob/4a1bc37bc6872377dbc36759a4d46e84ec35bbb5/src/prefix/pkg_file.cr#L49","def":{"name":"license","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"String","visibility":"Public","body":"@license"}},{"id":"name:String-instance-method","html_id":"name:String-instance-method","name":"name","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : String","source_link":"https://github.com/DFabric/dppm/blob/4a1bc37bc6872377dbc36759a4d46e84ec35bbb5/src/prefix/pkg_file.cr#L49","def":{"name":"name","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"String","visibility":"Public","body":"@name"}},{"id":"package:String-instance-method","html_id":"package:String-instance-method","name":"package","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : String","source_link":"https://github.com/DFabric/dppm/blob/4a1bc37bc6872377dbc36759a4d46e84ec35bbb5/src/prefix/pkg_file.cr#L49","def":{"name":"package","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"String","visibility":"Public","body":"@package"}},{"id":"path-instance-method","html_id":"path-instance-method","name":"path","doc":"Returns the `pkg.con` file path.","summary":"<p>Returns the <code>pkg.con</code> file path.</p>","abstract":false,"args":[],"args_string":"","source_link":"https://github.com/DFabric/dppm/blob/4a1bc37bc6872377dbc36759a4d46e84ec35bbb5/src/prefix/pkg_file.cr#L76","def":{"name":"path","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"if (value = @path).nil?\n  @path = (@root_path / \"pkg.con\")\nelse\n  value\nend"}},{"id":"provides:String?-instance-method","html_id":"provides:String?-instance-method","name":"provides","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : String?","source_link":"https://github.com/DFabric/dppm/blob/4a1bc37bc6872377dbc36759a4d46e84ec35bbb5/src/prefix/pkg_file.cr#L49","def":{"name":"provides","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"String | ::Nil","visibility":"Public","body":"@provides"}},{"id":"shared:Bool?-instance-method","html_id":"shared:Bool?-instance-method","name":"shared","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Bool?","source_link":"https://github.com/DFabric/dppm/blob/4a1bc37bc6872377dbc36759a4d46e84ec35bbb5/src/prefix/pkg_file.cr#L49","def":{"name":"shared","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Bool | ::Nil","visibility":"Public","body":"@shared"}},{"id":"tags:Hash(String,Hash(String,String))-instance-method","html_id":"tags:Hash(String,Hash(String,String))-instance-method","name":"tags","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Hash(String, Hash(String, String))","source_link":"https://github.com/DFabric/dppm/blob/4a1bc37bc6872377dbc36759a4d46e84ec35bbb5/src/prefix/pkg_file.cr#L49","def":{"name":"tags","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Hash(String, Hash(String, String))","visibility":"Public","body":"@tags"}},{"id":"tasks:Hash(String,Array(CON::Any))?-instance-method","html_id":"tasks:Hash(String,Array(CON::Any))?-instance-method","name":"tasks","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Hash(String, Array(CON::Any))?","source_link":"https://github.com/DFabric/dppm/blob/4a1bc37bc6872377dbc36759a4d46e84ec35bbb5/src/prefix/pkg_file.cr#L49","def":{"name":"tasks","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Hash(String, Array(CON::Any)) | ::Nil","visibility":"Public","body":"@tasks"}},{"id":"type:Type-instance-method","html_id":"type:Type-instance-method","name":"type","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Type","source_link":"https://github.com/DFabric/dppm/blob/4a1bc37bc6872377dbc36759a4d46e84ec35bbb5/src/prefix/pkg_file.cr#L49","def":{"name":"type","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Type","visibility":"Public","body":"@type"}},{"id":"url:String-instance-method","html_id":"url:String-instance-method","name":"url","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : String","source_link":"https://github.com/DFabric/dppm/blob/4a1bc37bc6872377dbc36759a4d46e84ec35bbb5/src/prefix/pkg_file.cr#L49","def":{"name":"url","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"String","visibility":"Public","body":"@url"}},{"id":"version:CON::Any-instance-method","html_id":"version:CON::Any-instance-method","name":"version","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : CON::Any","source_link":"https://github.com/DFabric/dppm/blob/4a1bc37bc6872377dbc36759a4d46e84ec35bbb5/src/prefix/pkg_file.cr#L49","def":{"name":"version","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"CON::Any","visibility":"Public","body":"@version"}},{"id":"version_from_tag(tag:String):String-instance-method","html_id":"version_from_tag(tag:String):String-instance-method","name":"version_from_tag","doc":null,"summary":null,"abstract":false,"args":[{"name":"tag","doc":null,"default_value":"","external_name":"tag","restriction":"String"}],"args_string":"(tag : String) : String","source_link":"https://github.com/DFabric/dppm/blob/4a1bc37bc6872377dbc36759a4d46e84ec35bbb5/src/prefix/pkg_file.cr#L170","def":{"name":"version_from_tag","args":[{"name":"tag","doc":null,"default_value":"","external_name":"tag","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"String","visibility":"Public","body":"pkg_tag = @tags[tag]? || (raise(\"Tag key not present in #{path}: #{tag}\"))\nsrc = pkg_tag[\"src\"]? || (raise(\"'src' key not present in tag #{tag}\"))\nif HTTPHelper.url?(src)\n  regex = if regex_tag = @tags[tag][\"regex\"]?\n    regex_tag\n  else\n    @tags[\"self\"][\"regex\"]\n  end\n  if version = ((/(#{regex})/).match(HTTPHelper.get_string(src))).try(&.[]?(1))\n    version\n  else\n    raise(\"Can't match the regex `#{regex}` with the data from the url `#{src}`\")\n  end\nelse\n  src\nend\n"}}],"macros":[],"types":[{"html_id":"dppm/DPPM/Prefix/PkgFile/Type","path":"DPPM/Prefix/PkgFile/Type.html","kind":"enum","full_name":"DPPM::Prefix::PkgFile::Type","name":"Type","abstract":false,"superclass":null,"ancestors":[{"html_id":"dppm/Enum","kind":"struct","full_name":"Enum","name":"Enum"},{"html_id":"dppm/Comparable","kind":"module","full_name":"Comparable","name":"Comparable"},{"html_id":"dppm/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"dppm/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/prefix/pkg_file.cr","line_number":5,"url":"https://github.com/DFabric/dppm/blob/4a1bc37bc6872377dbc36759a4d46e84ec35bbb5/src/prefix/pkg_file.cr#L5"}],"repository_name":"dppm","program":false,"enum":true,"alias":false,"aliased":"","const":false,"constants":[{"id":"HTML","name":"HTML","value":"0","doc":null,"summary":null},{"id":"HTTP","name":"HTTP","value":"1","doc":null,"summary":null},{"id":"Lib","name":"Lib","value":"2","doc":null,"summary":null},{"id":"PHP","name":"PHP","value":"3","doc":null,"summary":null},{"id":"TCP","name":"TCP","value":"4","doc":null,"summary":null},{"id":"TCP_UDP","name":"TCP_UDP","value":"5","doc":null,"summary":null},{"id":"UDP","name":"UDP","value":"6","doc":null,"summary":null}],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"dppm/DPPM/Prefix/PkgFile","kind":"struct","full_name":"DPPM::Prefix::PkgFile","name":"PkgFile"},"doc":"Supported application types.","summary":"<p>Supported application types.</p>","class_methods":[],"constructors":[{"id":"new(type:String)-class-method","html_id":"new(type:String)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"type","doc":null,"default_value":"","external_name":"type","restriction":"String"}],"args_string":"(type : String)","source_link":"https://github.com/DFabric/dppm/blob/4a1bc37bc6872377dbc36759a4d46e84ec35bbb5/src/prefix/pkg_file.cr#L14","def":{"name":"new","args":[{"name":"type","doc":null,"default_value":"","external_name":"type","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"case type\nwhen \"HTML\"\n  HTML\nwhen \"HTTP\"\n  HTTP\nwhen \"lib\"\n  Lib\nwhen \"PHP\"\n  PHP\nwhen \"TCP\"\n  TCP\nwhen \"TCP/UDP\"\n  TCP_UDP\nwhen \"UDP\"\n  UDP\nelse\n  raise(\"Unknow package type: \" + type)\nend"}}],"instance_methods":[{"id":"html?-instance-method","html_id":"html?-instance-method","name":"html?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/DFabric/dppm/blob/4a1bc37bc6872377dbc36759a4d46e84ec35bbb5/src/prefix/pkg_file.cr#L6","def":{"name":"html?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self == HTML"}},{"id":"http?-instance-method","html_id":"http?-instance-method","name":"http?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/DFabric/dppm/blob/4a1bc37bc6872377dbc36759a4d46e84ec35bbb5/src/prefix/pkg_file.cr#L7","def":{"name":"http?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self == HTTP"}},{"id":"lib?-instance-method","html_id":"lib?-instance-method","name":"lib?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/DFabric/dppm/blob/4a1bc37bc6872377dbc36759a4d46e84ec35bbb5/src/prefix/pkg_file.cr#L8","def":{"name":"lib?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self == Lib"}},{"id":"php?-instance-method","html_id":"php?-instance-method","name":"php?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/DFabric/dppm/blob/4a1bc37bc6872377dbc36759a4d46e84ec35bbb5/src/prefix/pkg_file.cr#L9","def":{"name":"php?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self == PHP"}},{"id":"tcp?-instance-method","html_id":"tcp?-instance-method","name":"tcp?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/DFabric/dppm/blob/4a1bc37bc6872377dbc36759a4d46e84ec35bbb5/src/prefix/pkg_file.cr#L10","def":{"name":"tcp?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self == TCP"}},{"id":"tcp_udp?-instance-method","html_id":"tcp_udp?-instance-method","name":"tcp_udp?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/DFabric/dppm/blob/4a1bc37bc6872377dbc36759a4d46e84ec35bbb5/src/prefix/pkg_file.cr#L11","def":{"name":"tcp_udp?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self == TCP_UDP"}},{"id":"to_s(io:IO):Nil-instance-method","html_id":"to_s(io:IO):Nil-instance-method","name":"to_s","doc":"Appends a `String` representation of this enum member to the given *io*.\n\nSee also: `to_s`.","summary":"<p>Appends a <code>String</code> representation of this enum member to the given <em>io</em>.</p>","abstract":false,"args":[{"name":"io","doc":null,"default_value":"","external_name":"io","restriction":"IO"}],"args_string":"(io : IO) : Nil","source_link":"https://github.com/DFabric/dppm/blob/4a1bc37bc6872377dbc36759a4d46e84ec35bbb5/src/prefix/pkg_file.cr#L27","def":{"name":"to_s","args":[{"name":"io","doc":null,"default_value":"","external_name":"io","restriction":"IO"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Nil","visibility":"Public","body":"case self\nwhen Lib\n  \"lib\".to_s(io)\nwhen TCP_UDP\n  \"TCP/UDP\".to_s(io)\nelse\n  value.to_s(io)\nend"}},{"id":"udp?-instance-method","html_id":"udp?-instance-method","name":"udp?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/DFabric/dppm/blob/4a1bc37bc6872377dbc36759a4d46e84ec35bbb5/src/prefix/pkg_file.cr#L12","def":{"name":"udp?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self == UDP"}},{"id":"webapp!-instance-method","html_id":"webapp!-instance-method","name":"webapp!","doc":"Raises if the application isn't a webapp; not of a `HTML`, `HTTP` or `PHP` type.","summary":"<p>Raises if the application isn't a webapp; not of a <code><a href=\"../../../DPPM/Prefix/PkgFile/Type.html#HTML\">HTML</a></code>, <code><a href=\"../../../DPPM/Prefix/PkgFile/Type.html#HTTP\">HTTP</a></code> or <code><a href=\"../../../DPPM/Prefix/PkgFile/Type.html#PHP\">PHP</a></code> type.</p>","abstract":false,"args":[],"args_string":"","source_link":"https://github.com/DFabric/dppm/blob/4a1bc37bc6872377dbc36759a4d46e84ec35bbb5/src/prefix/pkg_file.cr#L44","def":{"name":"webapp!","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"webapp? || (raise(\"Only HTML, HTTP and PHP applications can be served behind a web server: #{self}\"))"}},{"id":"webapp?:Bool-instance-method","html_id":"webapp?:Bool-instance-method","name":"webapp?","doc":"Returns `true` if the type is usually used along with an url.","summary":"<p>Returns <code>true</code> if the type is usually used along with an url.</p>","abstract":false,"args":[],"args_string":" : Bool","source_link":"https://github.com/DFabric/dppm/blob/4a1bc37bc6872377dbc36759a4d46e84ec35bbb5/src/prefix/pkg_file.cr#L36","def":{"name":"webapp?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Bool","visibility":"Public","body":"case self\nwhen HTML, HTTP, PHP\n  true\nelse\n  false\nend"}}],"macros":[],"types":[]}]},{"html_id":"dppm/DPPM/Prefix/ProgramData","path":"DPPM/Prefix/ProgramData.html","kind":"module","full_name":"DPPM::Prefix::ProgramData","name":"ProgramData","abstract":false,"superclass":null,"ancestors":[{"html_id":"dppm/DPPM/Prefix/Base","kind":"module","full_name":"DPPM::Prefix::Base","name":"Base"}],"locations":[{"filename":"src/prefix/program_data.cr","line_number":4,"url":"https://github.com/DFabric/dppm/blob/4a1bc37bc6872377dbc36759a4d46e84ec35bbb5/src/prefix/program_data.cr#L4"},{"filename":"src/prefix/program_data_task.cr","line_number":3,"url":"https://github.com/DFabric/dppm/blob/4a1bc37bc6872377dbc36759a4d46e84ec35bbb5/src/prefix/program_data_task.cr#L3"}],"repository_name":"dppm","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[{"html_id":"dppm/DPPM/Prefix/Base","kind":"module","full_name":"DPPM::Prefix::Base","name":"Base"}],"extended_modules":[],"subclasses":[],"including_types":[{"html_id":"dppm/DPPM/Prefix/App","kind":"struct","full_name":"DPPM::Prefix::App","name":"App"},{"html_id":"dppm/DPPM/Prefix/Pkg","kind":"class","full_name":"DPPM::Prefix::Pkg","name":"Pkg"}],"namespace":{"html_id":"dppm/DPPM/Prefix","kind":"struct","full_name":"DPPM::Prefix","name":"Prefix"},"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[{"id":"all_bin_paths-instance-method","html_id":"all_bin_paths-instance-method","name":"all_bin_paths","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/DFabric/dppm/blob/4a1bc37bc6872377dbc36759a4d46e84ec35bbb5/src/prefix/program_data.cr#L7","def":{"name":"all_bin_paths","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"if (value = @all_bin_paths).nil?\n  @all_bin_paths = (begin\n    paths = [app_bin_path]\n    libs.each do |library|\n      paths << library.bin_path\n    end\n    paths\n  end)\nelse\n  value\nend"}},{"id":"app_bin_path-instance-method","html_id":"app_bin_path-instance-method","name":"app_bin_path","doc":"Path of the application binary.","summary":"<p>Path of the application binary.</p>","abstract":false,"args":[],"args_string":"","source_link":"https://github.com/DFabric/dppm/blob/4a1bc37bc6872377dbc36759a4d46e84ec35bbb5/src/prefix/program_data.cr#L22","def":{"name":"app_bin_path","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"if (value = @app_bin_path).nil?\n  @app_bin_path = (app_path / \"bin\")\nelse\n  value\nend"}},{"id":"app_path-instance-method","html_id":"app_path-instance-method","name":"app_path","doc":"Application package path, where is the application executable.","summary":"<p>Application package path, where is the application executable.</p>","abstract":false,"args":[],"args_string":"","source_link":"https://github.com/DFabric/dppm/blob/4a1bc37bc6872377dbc36759a4d46e84ec35bbb5/src/prefix/program_data.cr#L19","def":{"name":"app_path","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"if (value = @app_path).nil?\n  @app_path = (@path / \"app\")\nelse\n  value\nend"}},{"id":"available!-instance-method","html_id":"available!-instance-method","name":"available!","doc":"Return `self` if the root directory is available, else raise.","summary":"<p>Return <code>self</code> if the root directory is available, else raise.</p>","abstract":false,"args":[],"args_string":"","source_link":"https://github.com/DFabric/dppm/blob/4a1bc37bc6872377dbc36759a4d46e84ec35bbb5/src/prefix/program_data.cr#L51","def":{"name":"available!","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"if exists?\n  raise(\"Directory already exists: \" + @path.to_s)\nend\nself\n"}},{"id":"data_path-instance-method","html_id":"data_path-instance-method","name":"data_path","doc":"Path where application data is stored.","summary":"<p>Path where application data is stored.</p>","abstract":false,"args":[],"args_string":"","source_link":"https://github.com/DFabric/dppm/blob/4a1bc37bc6872377dbc36759a4d46e84ec35bbb5/src/prefix/program_data.cr#L16","def":{"name":"data_path","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"if (value = @data_path).nil?\n  @data_path = (@path / \"data\")\nelse\n  value\nend"}},{"id":"exists?-instance-method","html_id":"exists?-instance-method","name":"exists?","doc":"Returns `self` if the root directory exists.","summary":"<p>Returns <code>self</code> if the root directory exists.</p>","abstract":false,"args":[],"args_string":"","source_link":"https://github.com/DFabric/dppm/blob/4a1bc37bc6872377dbc36759a4d46e84ec35bbb5/src/prefix/program_data.cr#L57","def":{"name":"exists?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"if File.exists?(@path.to_s)\n  self\nend"}},{"id":"install_deps(deps:Set(Pkg),shared:Bool=true,&)-instance-method","html_id":"install_deps(deps:Set(Pkg),shared:Bool=true,&)-instance-method","name":"install_deps","doc":"Install the package dependencies.","summary":"<p>Install the package dependencies.</p>","abstract":false,"args":[{"name":"deps","doc":null,"default_value":"","external_name":"deps","restriction":"Set(Pkg)"},{"name":"shared","doc":null,"default_value":"true","external_name":"shared","restriction":"Bool"}],"args_string":"(deps : Set(Pkg), shared : Bool = <span class=\"n\">true</span>, &)","source_link":"https://github.com/DFabric/dppm/blob/4a1bc37bc6872377dbc36759a4d46e84ec35bbb5/src/prefix/program_data.cr#L62","def":{"name":"install_deps","args":[{"name":"deps","doc":null,"default_value":"","external_name":"deps","restriction":"Set(Pkg)"},{"name":"shared","doc":null,"default_value":"true","external_name":"shared","restriction":"Bool"}],"double_splat":null,"splat_index":null,"yields":1,"block_arg":null,"return_type":"","visibility":"Public","body":"Logger.info(\"bulding dependencies\", libs_path.to_s)\nDir.mkdir_p(libs_path.to_s)\ndeps.each do |dep_pkg|\n  dest_pkg_dep_dir = (libs_path / dep_pkg.package).to_s\n  if !(Dir.exists?(dep_pkg.path.to_s))\n    Logger.info(\"building dependency\", dep_pkg.path.to_s)\n    dep_pkg.build\n  end\n  if !(File.exists?(dest_pkg_dep_dir))\n    if shared\n      Logger.info(\"adding symlink to dependency\", dep_pkg.name)\n      File.symlink(dep_pkg.path.to_s, dest_pkg_dep_dir)\n    else\n      Logger.info(\"copying dependency\", dep_pkg.name)\n      FileUtils.cp_r(dep_pkg.path.to_s, dest_pkg_dep_dir)\n    end\n  end\n  Logger.info(\"dependency added\", dep_pkg.name)\n  yield dep_pkg\nend\n"}},{"id":"libs-instance-method","html_id":"libs-instance-method","name":"libs","doc":"Libraries on which the application depend.","summary":"<p>Libraries on which the application depend.</p>","abstract":false,"args":[],"args_string":"","source_link":"https://github.com/DFabric/dppm/blob/4a1bc37bc6872377dbc36759a4d46e84ec35bbb5/src/prefix/program_data.cr#L28","def":{"name":"libs","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"if (value = @libs).nil?\n  @libs = (begin\n    libs = Array(Pkg).new\n    if !(Dir.exists?(libs_path.to_s))\n      return libs\n    end\n    Dir.each_child(libs_path.to_s) do |lib_package|\n      lib_path = libs_path / lib_package\n      lib_pkg = @prefix.new_pkg(Path[File.real_path(lib_path.to_s)].basename)\n      app_config_file = nil\n      conf_libs_path = (conf_path / lib_pkg.package).to_s\n      if Dir.exists?(conf_libs_path)\n        Dir.each_child(conf_libs_path) do |file|\n          app_config_file = Path[conf_libs_path, file]\n          lib_pkg.app_config = ::Config.read?(app_config_file)\n        end\n      end\n      lib_pkg.app_config_file = app_config_file\n      libs << lib_pkg\n    end\n    libs\n  end)\nelse\n  value\nend"}},{"id":"site_path-instance-method","html_id":"site_path-instance-method","name":"site_path","doc":"Path of the web-sites files.","summary":"<p>Path of the web-sites files.</p>","abstract":false,"args":[],"args_string":"","source_link":"https://github.com/DFabric/dppm/blob/4a1bc37bc6872377dbc36759a4d46e84ec35bbb5/src/prefix/program_data.cr#L25","def":{"name":"site_path","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"if (value = @site_path).nil?\n  @site_path = (@path / \"site\")\nelse\n  value\nend"}}],"macros":[],"types":[{"html_id":"dppm/DPPM/Prefix/ProgramData/Task","path":"DPPM/Prefix/ProgramData/Task.html","kind":"struct","full_name":"DPPM::Prefix::ProgramData::Task","name":"Task","abstract":false,"superclass":{"html_id":"dppm/Struct","kind":"struct","full_name":"Struct","name":"Struct"},"ancestors":[{"html_id":"dppm/Struct","kind":"struct","full_name":"Struct","name":"Struct"},{"html_id":"dppm/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"dppm/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/prefix/program_data_task.cr","line_number":3,"url":"https://github.com/DFabric/dppm/blob/4a1bc37bc6872377dbc36759a4d46e84ec35bbb5/src/prefix/program_data_task.cr#L3"}],"repository_name":"dppm","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"dppm/DPPM/Prefix/ProgramData","kind":"module","full_name":"DPPM::Prefix::ProgramData","name":"ProgramData"},"doc":null,"summary":null,"class_methods":[],"constructors":[{"id":"new(vars:Hash(String,String),all_bin_paths:Array(Path))-class-method","html_id":"new(vars:Hash(String,String),all_bin_paths:Array(Path))-class-method","name":"new","doc":"Creates a new task runtime with variables and paths where to search binaries.","summary":"<p>Creates a new task runtime with variables and paths where to search binaries.</p>","abstract":false,"args":[{"name":"vars","doc":null,"default_value":"","external_name":"vars","restriction":"Hash(String, String)"},{"name":"all_bin_paths","doc":null,"default_value":"","external_name":"all_bin_paths","restriction":"Array(Path)"}],"args_string":"(vars : Hash(String, String), all_bin_paths : Array(Path))","source_link":"https://github.com/DFabric/dppm/blob/4a1bc37bc6872377dbc36759a4d46e84ec35bbb5/src/prefix/program_data_task.cr#L8","def":{"name":"new","args":[{"name":"vars","doc":null,"default_value":"","external_name":"vars","restriction":"Hash(String, String)"},{"name":"all_bin_paths","doc":null,"default_value":"","external_name":"all_bin_paths","restriction":"Array(Path)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(vars, all_bin_paths)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"ascii_alphanumeric_underscore?(string:String)-instance-method","html_id":"ascii_alphanumeric_underscore?(string:String)-instance-method","name":"ascii_alphanumeric_underscore?","doc":null,"summary":null,"abstract":false,"args":[{"name":"string","doc":null,"default_value":"","external_name":"string","restriction":"String"}],"args_string":"(string : String)","source_link":"https://github.com/DFabric/dppm/blob/4a1bc37bc6872377dbc36759a4d46e84ec35bbb5/src/prefix/program_data_task.cr#L100","def":{"name":"ascii_alphanumeric_underscore?","args":[{"name":"string","doc":null,"default_value":"","external_name":"string","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"string.each_char do |char|\n  ((char.ascii_letter? || char.ascii_number?) || (char == '_')) || (return)\nend\ntrue\n"}},{"id":"executable?(cmd:String):String?-instance-method","html_id":"executable?(cmd:String):String?-instance-method","name":"executable?","doc":"Returns the first executable matching `cmd` in .","summary":"<p>Returns the first executable matching <code>cmd</code> in .</p>","abstract":false,"args":[{"name":"cmd","doc":null,"default_value":"","external_name":"cmd","restriction":"String"}],"args_string":"(cmd : String) : String?","source_link":"https://github.com/DFabric/dppm/blob/4a1bc37bc6872377dbc36759a4d46e84ec35bbb5/src/prefix/program_data_task.cr#L13","def":{"name":"executable?","args":[{"name":"cmd","doc":null,"default_value":"","external_name":"cmd","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"String | ::Nil","visibility":"Public","body":"@all_bin_paths.each do |path|\n  bin = path / cmd\n  if File.executable?(bin.to_s)\n    return bin.to_s\n  end\nend"}},{"id":"execute(cmdline:String,last_cond:Bool=false):String|Bool-instance-method","html_id":"execute(cmdline:String,last_cond:Bool=false):String|Bool-instance-method","name":"execute","doc":"Methods from\nhttps://crystal-lang.org/api/Dir.html and\nhttps://crystal-lang.org/api/File.html\n\nameba:disable Metrics/CyclomaticComplexity","summary":"<p>Methods from https://crystal-lang.org/api/Dir.html and https://crystal-lang.org/api/File.html</p>","abstract":false,"args":[{"name":"cmdline","doc":null,"default_value":"","external_name":"cmdline","restriction":"String"},{"name":"last_cond","doc":null,"default_value":"false","external_name":"last_cond","restriction":"Bool"}],"args_string":"(cmdline : String, last_cond : Bool = <span class=\"n\">false</span>) : String | Bool","source_link":"https://github.com/DFabric/dppm/blob/4a1bc37bc6872377dbc36759a4d46e84ec35bbb5/src/prefix/program_data_task.cr#L135","def":{"name":"execute","args":[{"name":"cmdline","doc":null,"default_value":"","external_name":"cmdline","restriction":"String"},{"name":"last_cond","doc":null,"default_value":"false","external_name":"last_cond","restriction":"Bool"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"String | Bool","visibility":"Public","body":"if line = (cmdline.lchop?('\\'')).try(&.rchop?('\\''))\n  return var_reader(line)\nelse\n  if variable = @vars[cmdline]?\n    return variable\n  end\nend\ncmd = cmdline.split(' ')\ncommand = cmd[0]\narguments = (cmdline.lchop(command)).lchop\ncase command = cmd[0]\nwhen \"if\"\n  ifexpr(arguments)\nwhen \"elif\"\n  last_cond ? false : ifexpr(arguments)\nwhen \"else\"\n  !last_cond\nwhen .starts_with?('/')\n  Host.exec(command, cmd[1..-1])\nwhen \"glob\"\n  if dir = cmd[3]?\n    Dir[cmd[2]].each do |entry|\n      execute(\"#{cmd[1]} #{entry} #{dir}/#{File.basename(entry)}\")\n    end\n  else\n    Dir[cmd[2]].each do |entry|\n      execute((cmd[1] + ' ') + entry)\n    end\n  end\n  \"\"\nwhen \"dir_current\"\n  Dir.current\nwhen \"dir_empty?\"\n  (Dir.empty?(arguments)).to_s\nwhen \"dir_exists?\"\n  (Dir.exists?(arguments)).to_s\nwhen \"file_empty?\"\n  (File.empty?(arguments)).to_s\nwhen \"file_exists?\"\n  (File.exists?(arguments)).to_s\nwhen \"file?\"\n  (File.file?(arguments)).to_s\nwhen \"root_user?\"\n  Process.root?.to_s\nwhen \"cd\"\n  Dir.cd(arguments)\n  \"working directory moved\"\nwhen \"mkdir\"\n  FileUtils.mkdir(cmd[1..-1])\n  \"directory created\"\nwhen \"mkdir_p\"\n  FileUtils.mkdir_p(cmd[1..-1])\n  \"directory created\"\nwhen \"mv\"\n  cmd[3]? ? FileUtils.mv(cmd[1..-2], cmd[-1]) : File.rename(cmd[1], cmd[2])\n  \"file moved\"\nwhen \"rmdir\"\n  FileUtils.rmdir(cmd[1..-1])\n  \"directory removed\"\nwhen \"rm\"\n  FileUtils.rm(cmd[1..-1])\n  \"file removed\"\nwhen \"rm_r\"\n  FileUtils.rm_r(cmd[1..-1])\n  \"directory removed\"\nwhen \"rm_rf\"\n  FileUtils.rm_rf(cmd[1..-1])\n  \"directory removed\"\nwhen \"dirname\"\n  File.dirname(arguments)\nwhen \"read\"\n  File.read(arguments)\nwhen \"file_size\"\n  (File.size(arguments)).to_s\nwhen \"touch\"\n  File.touch(arguments)\n  \"file created/updated\"\nwhen \"readable?\"\n  (File.readable?(arguments)).to_s\nwhen \"symlink?\"\n  (File.symlink?(arguments)).to_s\nwhen \"writable?\"\n  (File.writable?(arguments)).to_s\nwhen \"expand_path\"\n  File.expand_path(arguments)\nwhen \"real_path\"\n  File.real_path(arguments)\nwhen \"random_base64\"\n  (Random::Secure.urlsafe_base64(cmd[1].to_i)).to_s\nwhen \"append\"\n  File.open(cmd[1], \"a\", &.print(((cmd[2..-1].join(' ')).lchop('\\'')).rchop('\\'')))\n  \"text appended\"\nwhen \"cp\"\n  FileUtils.cp(cmd[1], cmd[2])\n  \"file copied\"\nwhen \"cp_r\"\n  FileUtils.cp_r(cmd[1], cmd[2])\n  \"directory copied\"\nwhen \"link\"\n  File.link(cmd[1], cmd[2])\n  \"hard link created\"\nwhen \"symlink\"\n  File.symlink(cmd[1], cmd[2])\n  \"symbolic link created\"\nwhen \"write\"\n  File.write(cmd[1], ((cmd[2..-1].join(' ')).lchop('\\'')).rchop('\\''))\n  \"text written\"\nwhen \"chmod\"\n  File.chmod(cmd[1], cmd[2].to_i(8))\n  \"permissions changed\"\nwhen \"dir\"\n  Dir.current\nwhen \"ls\"\n  directory = cmd[1]? || Dir.current\n  (Dir.new(directory)).children.join('\\n')\nwhen \"get\"\n  ((::Config.read(Path[cmd[1]])).get(cmd[2])).to_s\nwhen \"del\"\n  config_path = Path[cmd[1]]\n  config = ::Config.read(config_path)\n  result = (config.del(cmd[2])).to_s\n  File.write(config_path.to_s, config.build)\n  result\nwhen \"set\"\n  config_path = Path[cmd[1]]\n  config = ::Config.read(config_path)\n  result = (config.set(cmd[2], cmd[3..-1].join(' '))).to_s\n  File.write(config_path.to_s, config.build)\n  result\nwhen \"chmod_r\"\n  Utils.chmod_r(cmd[1], cmd[2].to_i(8))\n  \"permissions changed\"\nwhen \"getstring\"\n  HTTPHelper.get_string(cmd[1])\nwhen \"getfile\"\n  url = cmd[1]\n  file = cmd[2]? || (File.basename(url))\n  HTTPHelper.get_file(url, file)\n  \"file retrieved\"\nwhen \"untar_bz2\"\n  Host.exec(\"/bin/tar\", {\"jxf\", cmd[1], \"-C\", cmd[2]})\n  \"bzip2 archive extracted\"\nwhen \"untar_gz\"\n  Host.exec(\"/bin/tar\", {\"zxf\", cmd[1], \"-C\", cmd[2]})\n  \"gzip archive extracted\"\nwhen \"untar_lz\"\n  Host.exec(\"/bin/tar\", {\"axf\", cmd[1], \"-C\", cmd[2]})\n  \"lz archive extracted\"\nwhen \"untar_xz\"\n  Host.exec(\"/bin/tar\", {\"Jxf\", cmd[1], \"-C\", cmd[2]})\n  \"xz archive extracted\"\nwhen \"unzip\"\n  Host.exec(\"/usr/bin/unzip\", {\"-oq\", cmd[1], \"-d\", cmd[2]})\n  \"zip archive extracted\"\nwhen \"un7z\"\n  Host.exec(\"/usr/bin/7z\", {\"e\", \"-y\", cmd[1], \"-o\" + cmd[2]})\n  \"7z archive extracted\"\nwhen \"error\"\n  raise(arguments.lstrip)\nwhen \"true\"\n  \"true\"\nwhen \"false\"\n  \"false\"\nwhen \"puts\"\n  arguments.lstrip\nelse\n  if bin = (executable?(command)) || (Process.find_executable(command))\n    success = false\n    output, error = Exec.new(bin, cmd[1..-1], error: Logger.error, env: @vars) do |process|\n      if process.wait.success?\n        success = true\n      end\n    end\n    if success\n      output.to_s\n    else\n      raise(\"Execution returned an error: #{command} #{cmd.join(' ')}\\n#{output}\\n#{error}\")\n    end\n  else\n    raise(\"Unknown command or variable: #{cmd.join(' ')}\")\n  end\nend\n"}},{"id":"run(commands_array:Array)-instance-method","html_id":"run(commands_array:Array)-instance-method","name":"run","doc":"Run the commands.","summary":"<p>Run the commands.</p>","abstract":false,"args":[{"name":"commands_array","doc":null,"default_value":"","external_name":"commands_array","restriction":"Array"}],"args_string":"(commands_array : Array)","source_link":"https://github.com/DFabric/dppm/blob/4a1bc37bc6872377dbc36759a4d46e84ec35bbb5/src/prefix/program_data_task.cr#L21","def":{"name":"run","args":[{"name":"commands_array","doc":null,"default_value":"","external_name":"commands_array","restriction":"Array"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"begin\n  last_cond = false\n  commands_array.each do |raw_line|\n    if line = raw_line.as_s?\n      @line_number = @line_number + 1\n      if !(assign_variable?(line))\n        cmd = var_reader(line)\n        Logger.info(\"execute\", cmd)\n        case output = execute(cmd, last_cond)\n        when String\n          if !output.empty?\n            Logger.info(\"output\", output)\n          end\n        when Bool\n          last_cond = output\n        else\n          raise(\"Invalid output: #{output}\")\n        end\n      end\n    else\n      if last_cond\n        if array = raw_line.as_a?\n          run(array)\n        else\n          raise(\"Expected Array\")\n        end\n      end\n    end\n  end\nrescue ex\n  raise(Error.new(\"Error at line #{@line_number}\", ex))\nend"}},{"id":"vars:Hash(String,String)-instance-method","html_id":"vars:Hash(String,String)-instance-method","name":"vars","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Hash(String, String)","source_link":"https://github.com/DFabric/dppm/blob/4a1bc37bc6872377dbc36759a4d46e84ec35bbb5/src/prefix/program_data_task.cr#L4","def":{"name":"vars","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Hash(String, String)","visibility":"Public","body":"@vars"}}],"macros":[],"types":[]}]},{"html_id":"dppm/DPPM/Prefix/Src","path":"DPPM/Prefix/Src.html","kind":"struct","full_name":"DPPM::Prefix::Src","name":"Src","abstract":false,"superclass":{"html_id":"dppm/Struct","kind":"struct","full_name":"Struct","name":"Struct"},"ancestors":[{"html_id":"dppm/DPPM/Prefix/Base","kind":"module","full_name":"DPPM::Prefix::Base","name":"Base"},{"html_id":"dppm/Struct","kind":"struct","full_name":"Struct","name":"Struct"},{"html_id":"dppm/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"dppm/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/prefix/src.cr","line_number":3,"url":"https://github.com/DFabric/dppm/blob/4a1bc37bc6872377dbc36759a4d46e84ec35bbb5/src/prefix/src.cr#L3"}],"repository_name":"dppm","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[{"html_id":"dppm/DPPM/Prefix/Base","kind":"module","full_name":"DPPM::Prefix::Base","name":"Base"}],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"dppm/DPPM/Prefix","kind":"struct","full_name":"DPPM::Prefix","name":"Prefix"},"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[{"id":"each_config_key(&block:String->)-instance-method","html_id":"each_config_key(&block:String->)-instance-method","name":"each_config_key","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"(&block : String -> )","source_link":"https://github.com/DFabric/dppm/blob/4a1bc37bc6872377dbc36759a4d46e84ec35bbb5/src/prefix/src.cr#L28","def":{"name":"each_config_key","args":[],"double_splat":null,"splat_index":null,"yields":1,"block_arg":{"name":"block","doc":null,"default_value":"","external_name":"block","restriction":"(String -> )"},"return_type":"","visibility":"Public","body":"internal_each_config_key do |key|\n  yield key\nend\ndeps_with_expr.each_key(&.internal_each_config_key do |key|\n  yield key\nend)\n"}},{"id":"get_config(key:String,&)-instance-method","html_id":"get_config(key:String,&)-instance-method","name":"get_config","doc":"Gets the config key. Yields the block if not found.","summary":"<p>Gets the config key.</p>","abstract":false,"args":[{"name":"key","doc":null,"default_value":"","external_name":"key","restriction":"String"}],"args_string":"(key : String, &)","source_link":"https://github.com/DFabric/dppm/blob/4a1bc37bc6872377dbc36759a4d46e84ec35bbb5/src/prefix/src.cr#L18","def":{"name":"get_config","args":[{"name":"key","doc":null,"default_value":"","external_name":"key","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":0,"block_arg":null,"return_type":"","visibility":"Public","body":"config_from_pkg_file(key) do |config_file, config_key|\n  return config_file.get(config_key)\nend\ndeps_with_expr.each_key(&.config_from_pkg_file(key) do |config_file, config_key|\n  return config_file.get(config_key)\nend)\nyield\n"}},{"id":"new_pkg(pkg_name:String,version:String?):Pkg-instance-method","html_id":"new_pkg(pkg_name:String,version:String?):Pkg-instance-method","name":"new_pkg","doc":null,"summary":null,"abstract":false,"args":[{"name":"pkg_name","doc":null,"default_value":"","external_name":"pkg_name","restriction":"String"},{"name":"version","doc":null,"default_value":"","external_name":"version","restriction":"String | ::Nil"}],"args_string":"(pkg_name : String, version : String?) : Pkg","source_link":"https://github.com/DFabric/dppm/blob/4a1bc37bc6872377dbc36759a4d46e84ec35bbb5/src/prefix/src.cr#L13","def":{"name":"new_pkg","args":[{"name":"pkg_name","doc":null,"default_value":"","external_name":"pkg_name","restriction":"String"},{"name":"version","doc":null,"default_value":"","external_name":"version","restriction":"String | ::Nil"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Pkg","visibility":"Public","body":"Pkg.new(@prefix, pkg_name, version, pkg_file)"}}],"macros":[],"types":[]}]},{"html_id":"dppm/DPPM/Utils","path":"DPPM/Utils.html","kind":"module","full_name":"DPPM::Utils","name":"Utils","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"src/utils.cr","line_number":3,"url":"https://github.com/DFabric/dppm/blob/4a1bc37bc6872377dbc36759a4d46e84ec35bbb5/src/utils.cr#L3"}],"repository_name":"dppm","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[{"html_id":"dppm/DPPM/Utils","kind":"module","full_name":"DPPM::Utils","name":"Utils"}],"subclasses":[],"including_types":[],"namespace":{"html_id":"dppm/DPPM","kind":"module","full_name":"DPPM","name":"DPPM"},"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[{"id":"ascii_alphanumeric_dash?(name:String):Bool-instance-method","html_id":"ascii_alphanumeric_dash?(name:String):Bool-instance-method","name":"ascii_alphanumeric_dash?","doc":null,"summary":null,"abstract":false,"args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":"String"}],"args_string":"(name : String) : Bool","source_link":"https://github.com/DFabric/dppm/blob/4a1bc37bc6872377dbc36759a4d46e84ec35bbb5/src/utils.cr#L11","def":{"name":"ascii_alphanumeric_dash?","args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Bool","visibility":"Public","body":"if name.starts_with?('-')\n  raise(\"A name must starts with `a-z` or `0-9`, not a dash  `-`: \" + name)\nend\nname.each_char do |char|\n  ((char.ascii_lowercase? || char.ascii_number?) || (char == '-')) || (raise(\"A name contains other characters than `a-z`, `0-9` and `-`: \" + name))\nend\ntrue\n"}},{"id":"ascii_alphanumeric_underscore?(string:String):Bool-instance-method","html_id":"ascii_alphanumeric_underscore?(string:String):Bool-instance-method","name":"ascii_alphanumeric_underscore?","doc":null,"summary":null,"abstract":false,"args":[{"name":"string","doc":null,"default_value":"","external_name":"string","restriction":"String"}],"args_string":"(string : String) : Bool","source_link":"https://github.com/DFabric/dppm/blob/4a1bc37bc6872377dbc36759a4d46e84ec35bbb5/src/utils.cr#L6","def":{"name":"ascii_alphanumeric_underscore?","args":[{"name":"string","doc":null,"default_value":"","external_name":"string","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Bool","visibility":"Public","body":"string.each_char do |char|\n  ((char.ascii_lowercase? || char.ascii_number?) || (char == '_')) || (return false)\nend\ntrue\n"}},{"id":"chmod_r(path,mode:Int,follow_symlinks=false)-instance-method","html_id":"chmod_r(path,mode:Int,follow_symlinks=false)-instance-method","name":"chmod_r","doc":null,"summary":null,"abstract":false,"args":[{"name":"path","doc":null,"default_value":"","external_name":"path","restriction":""},{"name":"mode","doc":null,"default_value":"","external_name":"mode","restriction":"Int"},{"name":"follow_symlinks","doc":null,"default_value":"false","external_name":"follow_symlinks","restriction":""}],"args_string":"(path, mode : Int, follow_symlinks = <span class=\"n\">false</span>)","source_link":"https://github.com/DFabric/dppm/blob/4a1bc37bc6872377dbc36759a4d46e84ec35bbb5/src/utils.cr#L27","def":{"name":"chmod_r","args":[{"name":"path","doc":null,"default_value":"","external_name":"path","restriction":""},{"name":"mode","doc":null,"default_value":"","external_name":"mode","restriction":"Int"},{"name":"follow_symlinks","doc":null,"default_value":"false","external_name":"follow_symlinks","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"File.chmod(path, mode)\nif (follow_symlinks || (!(File.symlink?(path)))) && (Dir.exists?(path))\n  Dir.each_child(path) do |entry|\n    src = File.join(path, entry)\n    File.chmod(src, mode)\n    chmod_r(src, mode)\n  end\nend\n"}},{"id":"chown_r(path,uid:Int?=-1,gid:Int=-1,follow_symlinks=false)-instance-method","html_id":"chown_r(path,uid:Int?=-1,gid:Int=-1,follow_symlinks=false)-instance-method","name":"chown_r","doc":null,"summary":null,"abstract":false,"args":[{"name":"path","doc":null,"default_value":"","external_name":"path","restriction":""},{"name":"uid","doc":null,"default_value":"-1","external_name":"uid","restriction":"Int | ::Nil"},{"name":"gid","doc":null,"default_value":"-1","external_name":"gid","restriction":"Int"},{"name":"follow_symlinks","doc":null,"default_value":"false","external_name":"follow_symlinks","restriction":""}],"args_string":"(path, uid : Int? = <span class=\"n\">-1</span>, gid : Int = <span class=\"n\">-1</span>, follow_symlinks = <span class=\"n\">false</span>)","source_link":"https://github.com/DFabric/dppm/blob/4a1bc37bc6872377dbc36759a4d46e84ec35bbb5/src/utils.cr#L38","def":{"name":"chown_r","args":[{"name":"path","doc":null,"default_value":"","external_name":"path","restriction":""},{"name":"uid","doc":null,"default_value":"-1","external_name":"uid","restriction":"Int | ::Nil"},{"name":"gid","doc":null,"default_value":"-1","external_name":"gid","restriction":"Int"},{"name":"follow_symlinks","doc":null,"default_value":"false","external_name":"follow_symlinks","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"File.chown(path, uid, gid, follow_symlinks)\nif (follow_symlinks || (!(File.symlink?(path)))) && (Dir.exists?(path))\n  Dir.each_child(path) do |entry|\n    src = File.join(path, entry)\n    File.chown(src, uid, gid, follow_symlinks)\n    chown_r(src, uid, gid, follow_symlinks)\n  end\nend\n"}},{"id":"to_b(string:String):Bool-instance-method","html_id":"to_b(string:String):Bool-instance-method","name":"to_b","doc":null,"summary":null,"abstract":false,"args":[{"name":"string","doc":null,"default_value":"","external_name":"string","restriction":"String"}],"args_string":"(string : String) : Bool","source_link":"https://github.com/DFabric/dppm/blob/4a1bc37bc6872377dbc36759a4d46e84ec35bbb5/src/utils.cr#L19","def":{"name":"to_b","args":[{"name":"string","doc":null,"default_value":"","external_name":"string","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Bool","visibility":"Public","body":"case string\nwhen \"true\"\n  true\nwhen \"false\"\n  false\nelse\n  raise(\"Can't convert to a boolean: \" + string)\nend"}}],"macros":[],"types":[]}]},{"html_id":"dppm/PortChecker","path":"PortChecker.html","kind":"struct","full_name":"PortChecker","name":"PortChecker","abstract":false,"superclass":{"html_id":"dppm/Struct","kind":"struct","full_name":"Struct","name":"Struct"},"ancestors":[{"html_id":"dppm/Struct","kind":"struct","full_name":"Struct","name":"Struct"},{"html_id":"dppm/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"dppm/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/port_checker.cr","line_number":4,"url":"https://github.com/DFabric/dppm/blob/4a1bc37bc6872377dbc36759a4d46e84ec35bbb5/src/port_checker.cr#L4"}],"repository_name":"dppm","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":null,"doc":"Creates local Sockets to know local available ports.","summary":"<p>Creates local Sockets to know local available ports.</p>","class_methods":[],"constructors":[{"id":"new(host:String,tcp:Bool=false,udp:Bool=false)-class-method","html_id":"new(host:String,tcp:Bool=false,udp:Bool=false)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"host","doc":null,"default_value":"","external_name":"host","restriction":"String"},{"name":"tcp","doc":null,"default_value":"false","external_name":"tcp","restriction":"Bool"},{"name":"udp","doc":null,"default_value":"false","external_name":"udp","restriction":"Bool"}],"args_string":"(host : String, tcp : Bool = <span class=\"n\">false</span>, udp : Bool = <span class=\"n\">false</span>)","source_link":"https://github.com/DFabric/dppm/blob/4a1bc37bc6872377dbc36759a4d46e84ec35bbb5/src/port_checker.cr#L13","def":{"name":"new","args":[{"name":"host","doc":null,"default_value":"","external_name":"host","restriction":"String"},{"name":"tcp","doc":null,"default_value":"false","external_name":"tcp","restriction":"Bool"},{"name":"udp","doc":null,"default_value":"false","external_name":"udp","restriction":"Bool"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(host, tcp, udp)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"address=(host:String)-instance-method","html_id":"address=(host:String)-instance-method","name":"address=","doc":null,"summary":null,"abstract":false,"args":[{"name":"host","doc":null,"default_value":"","external_name":"host","restriction":"String"}],"args_string":"(host : String)","source_link":"https://github.com/DFabric/dppm/blob/4a1bc37bc6872377dbc36759a4d46e84ec35bbb5/src/port_checker.cr#L9","def":{"name":"address=","args":[{"name":"host","doc":null,"default_value":"","external_name":"host","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@ipaddress = address_normalizer(host)"}},{"id":"available_port?(port:Int32):Bool-instance-method","html_id":"available_port?(port:Int32):Bool-instance-method","name":"available_port?","doc":"Returns an available port.","summary":"<p>Returns an available port.</p>","abstract":false,"args":[{"name":"port","doc":null,"default_value":"","external_name":"port","restriction":"Int32"}],"args_string":"(port : Int32) : Bool","source_link":"https://github.com/DFabric/dppm/blob/4a1bc37bc6872377dbc36759a4d46e84ec35bbb5/src/port_checker.cr#L22","def":{"name":"available_port?","args":[{"name":"port","doc":null,"default_value":"","external_name":"port","restriction":"Int32"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Bool","visibility":"Public","body":"if @tcp\n  socket = TCPSocket.new(@ipaddress.family)\n  if !(internal_available_port?(socket, port))\n    return false\n  end\nend\nif @udp\n  socket = UDPSocket.new(@ipaddress.family)\n  if !(internal_available_port?(socket, port))\n    return false\n  end\nend\ntrue\n"}},{"id":"first_available_port(start_port:Int32=@ipaddress.port):Int32?-instance-method","html_id":"first_available_port(start_port:Int32=@ipaddress.port):Int32?-instance-method","name":"first_available_port","doc":"Returns the first available port.","summary":"<p>Returns the first available port.</p>","abstract":false,"args":[{"name":"start_port","doc":null,"default_value":"@ipaddress.port","external_name":"start_port","restriction":"Int32"}],"args_string":"(start_port : Int32 = @ipaddress.port) : Int32?","source_link":"https://github.com/DFabric/dppm/blob/4a1bc37bc6872377dbc36759a4d46e84ec35bbb5/src/port_checker.cr#L46","def":{"name":"first_available_port","args":[{"name":"start_port","doc":null,"default_value":"@ipaddress.port","external_name":"start_port","restriction":"Int32"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Int32 | ::Nil","visibility":"Public","body":"(start_port..UInt16::MAX).each do |port|\n  if available_port?(port)\n    return port\n  end\nend"}},{"id":"ipaddress:Socket::IPAddress-instance-method","html_id":"ipaddress:Socket::IPAddress-instance-method","name":"ipaddress","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Socket::IPAddress","source_link":"https://github.com/DFabric/dppm/blob/4a1bc37bc6872377dbc36759a4d46e84ec35bbb5/src/port_checker.cr#L7","def":{"name":"ipaddress","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Socket::IPAddress","visibility":"Public","body":"@ipaddress"}},{"id":"tcp:Bool-instance-method","html_id":"tcp:Bool-instance-method","name":"tcp","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Bool","source_link":"https://github.com/DFabric/dppm/blob/4a1bc37bc6872377dbc36759a4d46e84ec35bbb5/src/port_checker.cr#L5","def":{"name":"tcp","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Bool","visibility":"Public","body":"@tcp"}},{"id":"tcp=(tcp:Bool)-instance-method","html_id":"tcp=(tcp:Bool)-instance-method","name":"tcp=","doc":null,"summary":null,"abstract":false,"args":[{"name":"tcp","doc":null,"default_value":"","external_name":"tcp","restriction":"Bool"}],"args_string":"(tcp : Bool)","source_link":"https://github.com/DFabric/dppm/blob/4a1bc37bc6872377dbc36759a4d46e84ec35bbb5/src/port_checker.cr#L5","def":{"name":"tcp=","args":[{"name":"tcp","doc":null,"default_value":"","external_name":"tcp","restriction":"Bool"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@tcp = tcp"}},{"id":"udp:Bool-instance-method","html_id":"udp:Bool-instance-method","name":"udp","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Bool","source_link":"https://github.com/DFabric/dppm/blob/4a1bc37bc6872377dbc36759a4d46e84ec35bbb5/src/port_checker.cr#L6","def":{"name":"udp","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Bool","visibility":"Public","body":"@udp"}},{"id":"udp=(udp:Bool)-instance-method","html_id":"udp=(udp:Bool)-instance-method","name":"udp=","doc":null,"summary":null,"abstract":false,"args":[{"name":"udp","doc":null,"default_value":"","external_name":"udp","restriction":"Bool"}],"args_string":"(udp : Bool)","source_link":"https://github.com/DFabric/dppm/blob/4a1bc37bc6872377dbc36759a4d46e84ec35bbb5/src/port_checker.cr#L6","def":{"name":"udp=","args":[{"name":"udp","doc":null,"default_value":"","external_name":"udp","restriction":"Bool"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@udp = udp"}}],"macros":[],"types":[]},{"html_id":"dppm/Process","path":"Process.html","kind":"class","full_name":"Process","name":"Process","abstract":false,"superclass":{"html_id":"dppm/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"dppm/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"dppm/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/host.cr","line_number":8,"url":"https://github.com/DFabric/dppm/blob/4a1bc37bc6872377dbc36759a4d46e84ec35bbb5/src/host.cr#L8"}],"repository_name":"dppm","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":null,"doc":null,"summary":null,"class_methods":[{"id":"egid:LibC::GidT-class-method","html_id":"egid:LibC::GidT-class-method","name":"egid","doc":"Returns the effective group ID of the current process.","summary":"<p>Returns the effective group ID of the current process.</p>","abstract":false,"args":[],"args_string":" : LibC::GidT","source_link":"https://github.com/DFabric/dppm/blob/4a1bc37bc6872377dbc36759a4d46e84ec35bbb5/src/host.cr#L10","def":{"name":"egid","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"LibC::GidT","visibility":"Public","body":"LibC.getegid"}},{"id":"euid:LibC::UidT-class-method","html_id":"euid:LibC::UidT-class-method","name":"euid","doc":"Returns the effective user ID of the current process.","summary":"<p>Returns the effective user ID of the current process.</p>","abstract":false,"args":[],"args_string":" : LibC::UidT","source_link":"https://github.com/DFabric/dppm/blob/4a1bc37bc6872377dbc36759a4d46e84ec35bbb5/src/host.cr#L20","def":{"name":"euid","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"LibC::UidT","visibility":"Public","body":"LibC.geteuid"}},{"id":"gid:LibC::GidT-class-method","html_id":"gid:LibC::GidT-class-method","name":"gid","doc":"Returns the real group ID of the current process.","summary":"<p>Returns the real group ID of the current process.</p>","abstract":false,"args":[],"args_string":" : LibC::GidT","source_link":"https://github.com/DFabric/dppm/blob/4a1bc37bc6872377dbc36759a4d46e84ec35bbb5/src/host.cr#L15","def":{"name":"gid","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"LibC::GidT","visibility":"Public","body":"LibC.getgid"}},{"id":"root?:Bool-class-method","html_id":"root?:Bool-class-method","name":"root?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Bool","source_link":"https://github.com/DFabric/dppm/blob/4a1bc37bc6872377dbc36759a4d46e84ec35bbb5/src/host.cr#L29","def":{"name":"root?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Bool","visibility":"Public","body":"LibC.getgid == 0"}},{"id":"uid:LibC::UidT-class-method","html_id":"uid:LibC::UidT-class-method","name":"uid","doc":"Returns the real user ID of the current process.","summary":"<p>Returns the real user ID of the current process.</p>","abstract":false,"args":[],"args_string":" : LibC::UidT","source_link":"https://github.com/DFabric/dppm/blob/4a1bc37bc6872377dbc36759a4d46e84ec35bbb5/src/host.cr#L25","def":{"name":"uid","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"LibC::UidT","visibility":"Public","body":"LibC.getuid"}}],"constructors":[],"instance_methods":[],"macros":[],"types":[]},{"html_id":"dppm/Service","path":"Service.html","kind":"module","full_name":"Service","name":"Service","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"src/service.cr","line_number":4,"url":"https://github.com/DFabric/dppm/blob/4a1bc37bc6872377dbc36759a4d46e84ec35bbb5/src/service.cr#L4"},{"filename":"src/service/config.cr","line_number":1,"url":"https://github.com/DFabric/dppm/blob/4a1bc37bc6872377dbc36759a4d46e84ec35bbb5/src/service/config.cr#L1"}],"repository_name":"dppm","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[{"html_id":"dppm/Service","kind":"module","full_name":"Service","name":"Service"}],"subclasses":[],"including_types":[],"namespace":null,"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[{"id":"exec?(command:String,args:Array(String)|Tuple):Bool-instance-method","html_id":"exec?(command:String,args:Array(String)|Tuple):Bool-instance-method","name":"exec?","doc":null,"summary":null,"abstract":false,"args":[{"name":"command","doc":null,"default_value":"","external_name":"command","restriction":"String"},{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":"Array(String) | Tuple"}],"args_string":"(command : String, args : Array(String) | Tuple) : Bool","source_link":"https://github.com/DFabric/dppm/blob/4a1bc37bc6872377dbc36759a4d46e84ec35bbb5/src/service.cr#L30","def":{"name":"exec?","args":[{"name":"command","doc":null,"default_value":"","external_name":"command","restriction":"String"},{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":"Array(String) | Tuple"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Bool","visibility":"Public","body":"success = false\nExec.new(command, args, output: DPPM::Logger.output, error: DPPM::Logger.error) do |process|\n  success = process.wait.success?\nend\nsuccess\n"}},{"id":"init:Systemd.class|OpenRC.class-instance-method","html_id":"init:Systemd.class|OpenRC.class-instance-method","name":"init","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : <span class=\"t\">Systemd</span>.<span class=\"k\">class</span> | <span class=\"t\">OpenRC</span>.<span class=\"k\">class</span>","source_link":"https://github.com/DFabric/dppm/blob/4a1bc37bc6872377dbc36759a4d46e84ec35bbb5/src/service.cr#L26","def":{"name":"init","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Systemd.class | OpenRC.class","visibility":"Public","body":"init? || (raise(\"Unsupported init system\"))"}},{"id":"init?:Systemd.class|OpenRC.class|Nil-instance-method","html_id":"init?:Systemd.class|OpenRC.class|Nil-instance-method","name":"init?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : <span class=\"t\">Systemd</span>.<span class=\"k\">class</span> | <span class=\"t\">OpenRC</span>.<span class=\"k\">class</span> | Nil","source_link":"https://github.com/DFabric/dppm/blob/4a1bc37bc6872377dbc36759a4d46e84ec35bbb5/src/service.cr#L13","def":{"name":"init?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Systemd.class | OpenRC.class | Nil","visibility":"Public","body":"if !@@initialized\n  init_system = File.basename(File.real_path(\"/sbin/init\"))\n  if init_system == \"systemd\"\n    @@init = Service::Systemd\n  else\n    if File.exists?(\"/sbin/openrc\")\n      @@init = Service::OpenRC\n    end\n  end\n  @@initialized = true\nend\n@@init\n"}}],"macros":[],"types":[{"html_id":"dppm/Service/Config","path":"Service/Config.html","kind":"class","full_name":"Service::Config","name":"Config","abstract":true,"superclass":{"html_id":"dppm/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"dppm/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"dppm/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/service/config.cr","line_number":1,"url":"https://github.com/DFabric/dppm/blob/4a1bc37bc6872377dbc36759a4d46e84ec35bbb5/src/service/config.cr#L1"}],"repository_name":"dppm","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[{"html_id":"dppm/Service/OpenRC/Config","kind":"class","full_name":"Service::OpenRC::Config","name":"Config"},{"html_id":"dppm/Service/Systemd/Config","kind":"class","full_name":"Service::Systemd::Config","name":"Config"}],"including_types":[],"namespace":{"html_id":"dppm/Service","kind":"module","full_name":"Service","name":"Service"},"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[{"id":"after:Set(String)-instance-method","html_id":"after:Set(String)-instance-method","name":"after","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Set(String)","source_link":"https://github.com/DFabric/dppm/blob/4a1bc37bc6872377dbc36759a4d46e84ec35bbb5/src/service/config.cr#L2","def":{"name":"after","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Set(String)","visibility":"Public","body":"@after"}},{"id":"after=(after:Set(String))-instance-method","html_id":"after=(after:Set(String))-instance-method","name":"after=","doc":null,"summary":null,"abstract":false,"args":[{"name":"after","doc":null,"default_value":"","external_name":"after","restriction":"Set(String)"}],"args_string":"(after : Set(String))","source_link":"https://github.com/DFabric/dppm/blob/4a1bc37bc6872377dbc36759a4d46e84ec35bbb5/src/service/config.cr#L2","def":{"name":"after=","args":[{"name":"after","doc":null,"default_value":"","external_name":"after","restriction":"Set(String)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@after = after"}},{"id":"build(io:IO)-instance-method","html_id":"build(io:IO)-instance-method","name":"build","doc":null,"summary":null,"abstract":true,"args":[{"name":"io","doc":null,"default_value":"","external_name":"io","restriction":"IO"}],"args_string":"(io : IO)","source_link":"https://github.com/DFabric/dppm/blob/4a1bc37bc6872377dbc36759a4d46e84ec35bbb5/src/service/config.cr#L16","def":{"name":"build","args":[{"name":"io","doc":null,"default_value":"","external_name":"io","restriction":"IO"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":""}},{"id":"build_env_vars:String-instance-method","html_id":"build_env_vars:String-instance-method","name":"build_env_vars","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : String","source_link":"https://github.com/DFabric/dppm/blob/4a1bc37bc6872377dbc36759a4d46e84ec35bbb5/src/service/config.cr#L27","def":{"name":"build_env_vars","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"String","visibility":"Public","body":"String.build do |str|\n  build_env_vars(str)\nend"}},{"id":"build_env_vars(io)-instance-method","html_id":"build_env_vars(io)-instance-method","name":"build_env_vars","doc":null,"summary":null,"abstract":false,"args":[{"name":"io","doc":null,"default_value":"","external_name":"io","restriction":""}],"args_string":"(io)","source_link":"https://github.com/DFabric/dppm/blob/4a1bc37bc6872377dbc36759a4d46e84ec35bbb5/src/service/config.cr#L31","def":{"name":"build_env_vars","args":[{"name":"io","doc":null,"default_value":"","external_name":"io","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"start = true\n@env_vars.each do |variable, value|\n  if !start\n    io << ' '\n  end\n  (((io << variable) << \"=\\\"\") << value) << '\"'\n  start = false\nend\n"}},{"id":"command:String?-instance-method","html_id":"command:String?-instance-method","name":"command","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : String?","source_link":"https://github.com/DFabric/dppm/blob/4a1bc37bc6872377dbc36759a4d46e84ec35bbb5/src/service/config.cr#L2","def":{"name":"command","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"String | ::Nil","visibility":"Public","body":"@command"}},{"id":"command=(command:String?)-instance-method","html_id":"command=(command:String?)-instance-method","name":"command=","doc":null,"summary":null,"abstract":false,"args":[{"name":"command","doc":null,"default_value":"","external_name":"command","restriction":"String | ::Nil"}],"args_string":"(command : String?)","source_link":"https://github.com/DFabric/dppm/blob/4a1bc37bc6872377dbc36759a4d46e84ec35bbb5/src/service/config.cr#L2","def":{"name":"command=","args":[{"name":"command","doc":null,"default_value":"","external_name":"command","restriction":"String | ::Nil"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@command = command"}},{"id":"description:String?-instance-method","html_id":"description:String?-instance-method","name":"description","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : String?","source_link":"https://github.com/DFabric/dppm/blob/4a1bc37bc6872377dbc36759a4d46e84ec35bbb5/src/service/config.cr#L2","def":{"name":"description","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"String | ::Nil","visibility":"Public","body":"@description"}},{"id":"description=(description:String?)-instance-method","html_id":"description=(description:String?)-instance-method","name":"description=","doc":null,"summary":null,"abstract":false,"args":[{"name":"description","doc":null,"default_value":"","external_name":"description","restriction":"String | ::Nil"}],"args_string":"(description : String?)","source_link":"https://github.com/DFabric/dppm/blob/4a1bc37bc6872377dbc36759a4d46e84ec35bbb5/src/service/config.cr#L2","def":{"name":"description=","args":[{"name":"description","doc":null,"default_value":"","external_name":"description","restriction":"String | ::Nil"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@description = description"}},{"id":"directory:String?-instance-method","html_id":"directory:String?-instance-method","name":"directory","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : String?","source_link":"https://github.com/DFabric/dppm/blob/4a1bc37bc6872377dbc36759a4d46e84ec35bbb5/src/service/config.cr#L2","def":{"name":"directory","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"String | ::Nil","visibility":"Public","body":"@directory"}},{"id":"directory=(directory:String?)-instance-method","html_id":"directory=(directory:String?)-instance-method","name":"directory=","doc":null,"summary":null,"abstract":false,"args":[{"name":"directory","doc":null,"default_value":"","external_name":"directory","restriction":"String | ::Nil"}],"args_string":"(directory : String?)","source_link":"https://github.com/DFabric/dppm/blob/4a1bc37bc6872377dbc36759a4d46e84ec35bbb5/src/service/config.cr#L2","def":{"name":"directory=","args":[{"name":"directory","doc":null,"default_value":"","external_name":"directory","restriction":"String | ::Nil"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@directory = directory"}},{"id":"env_vars:Hash(String,String)-instance-method","html_id":"env_vars:Hash(String,String)-instance-method","name":"env_vars","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Hash(String, String)","source_link":"https://github.com/DFabric/dppm/blob/4a1bc37bc6872377dbc36759a4d46e84ec35bbb5/src/service/config.cr#L2","def":{"name":"env_vars","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Hash(String, String)","visibility":"Public","body":"@env_vars"}},{"id":"env_vars=(env_vars:Hash(String,String))-instance-method","html_id":"env_vars=(env_vars:Hash(String,String))-instance-method","name":"env_vars=","doc":null,"summary":null,"abstract":false,"args":[{"name":"env_vars","doc":null,"default_value":"","external_name":"env_vars","restriction":"Hash(String, String)"}],"args_string":"(env_vars : Hash(String, String))","source_link":"https://github.com/DFabric/dppm/blob/4a1bc37bc6872377dbc36759a4d46e84ec35bbb5/src/service/config.cr#L2","def":{"name":"env_vars=","args":[{"name":"env_vars","doc":null,"default_value":"","external_name":"env_vars","restriction":"Hash(String, String)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@env_vars = env_vars"}},{"id":"group:String?-instance-method","html_id":"group:String?-instance-method","name":"group","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : String?","source_link":"https://github.com/DFabric/dppm/blob/4a1bc37bc6872377dbc36759a4d46e84ec35bbb5/src/service/config.cr#L2","def":{"name":"group","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"String | ::Nil","visibility":"Public","body":"@group"}},{"id":"group=(group:String?)-instance-method","html_id":"group=(group:String?)-instance-method","name":"group=","doc":null,"summary":null,"abstract":false,"args":[{"name":"group","doc":null,"default_value":"","external_name":"group","restriction":"String | ::Nil"}],"args_string":"(group : String?)","source_link":"https://github.com/DFabric/dppm/blob/4a1bc37bc6872377dbc36759a4d46e84ec35bbb5/src/service/config.cr#L2","def":{"name":"group=","args":[{"name":"group","doc":null,"default_value":"","external_name":"group","restriction":"String | ::Nil"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@group = group"}},{"id":"log_error:String?-instance-method","html_id":"log_error:String?-instance-method","name":"log_error","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : String?","source_link":"https://github.com/DFabric/dppm/blob/4a1bc37bc6872377dbc36759a4d46e84ec35bbb5/src/service/config.cr#L2","def":{"name":"log_error","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"String | ::Nil","visibility":"Public","body":"@log_error"}},{"id":"log_error=(log_error:String?)-instance-method","html_id":"log_error=(log_error:String?)-instance-method","name":"log_error=","doc":null,"summary":null,"abstract":false,"args":[{"name":"log_error","doc":null,"default_value":"","external_name":"log_error","restriction":"String | ::Nil"}],"args_string":"(log_error : String?)","source_link":"https://github.com/DFabric/dppm/blob/4a1bc37bc6872377dbc36759a4d46e84ec35bbb5/src/service/config.cr#L2","def":{"name":"log_error=","args":[{"name":"log_error","doc":null,"default_value":"","external_name":"log_error","restriction":"String | ::Nil"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@log_error = log_error"}},{"id":"log_output:String?-instance-method","html_id":"log_output:String?-instance-method","name":"log_output","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : String?","source_link":"https://github.com/DFabric/dppm/blob/4a1bc37bc6872377dbc36759a4d46e84ec35bbb5/src/service/config.cr#L2","def":{"name":"log_output","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"String | ::Nil","visibility":"Public","body":"@log_output"}},{"id":"log_output=(log_output:String?)-instance-method","html_id":"log_output=(log_output:String?)-instance-method","name":"log_output=","doc":null,"summary":null,"abstract":false,"args":[{"name":"log_output","doc":null,"default_value":"","external_name":"log_output","restriction":"String | ::Nil"}],"args_string":"(log_output : String?)","source_link":"https://github.com/DFabric/dppm/blob/4a1bc37bc6872377dbc36759a4d46e84ec35bbb5/src/service/config.cr#L2","def":{"name":"log_output=","args":[{"name":"log_output","doc":null,"default_value":"","external_name":"log_output","restriction":"String | ::Nil"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@log_output = log_output"}},{"id":"parse_env_vars(env_vars:String)-instance-method","html_id":"parse_env_vars(env_vars:String)-instance-method","name":"parse_env_vars","doc":null,"summary":null,"abstract":false,"args":[{"name":"env_vars","doc":null,"default_value":"","external_name":"env_vars","restriction":"String"}],"args_string":"(env_vars : String)","source_link":"https://github.com/DFabric/dppm/blob/4a1bc37bc6872377dbc36759a4d46e84ec35bbb5/src/service/config.cr#L18","def":{"name":"parse_env_vars","args":[{"name":"env_vars","doc":null,"default_value":"","external_name":"env_vars","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"begin\n  (env_vars.rchop.split(\"\\\" \")).each do |env|\n    var, _, val = env.partition(\"=\\\"\")\n    @env_vars[var] = val\n  end\nrescue\nend"}},{"id":"reload_signal:String?-instance-method","html_id":"reload_signal:String?-instance-method","name":"reload_signal","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : String?","source_link":"https://github.com/DFabric/dppm/blob/4a1bc37bc6872377dbc36759a4d46e84ec35bbb5/src/service/config.cr#L2","def":{"name":"reload_signal","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"String | ::Nil","visibility":"Public","body":"@reload_signal"}},{"id":"reload_signal=(reload_signal:String?)-instance-method","html_id":"reload_signal=(reload_signal:String?)-instance-method","name":"reload_signal=","doc":null,"summary":null,"abstract":false,"args":[{"name":"reload_signal","doc":null,"default_value":"","external_name":"reload_signal","restriction":"String | ::Nil"}],"args_string":"(reload_signal : String?)","source_link":"https://github.com/DFabric/dppm/blob/4a1bc37bc6872377dbc36759a4d46e84ec35bbb5/src/service/config.cr#L2","def":{"name":"reload_signal=","args":[{"name":"reload_signal","doc":null,"default_value":"","external_name":"reload_signal","restriction":"String | ::Nil"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@reload_signal = reload_signal"}},{"id":"restart_delay:UInt32?-instance-method","html_id":"restart_delay:UInt32?-instance-method","name":"restart_delay","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : UInt32?","source_link":"https://github.com/DFabric/dppm/blob/4a1bc37bc6872377dbc36759a4d46e84ec35bbb5/src/service/config.cr#L2","def":{"name":"restart_delay","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"UInt32 | ::Nil","visibility":"Public","body":"@restart_delay"}},{"id":"restart_delay=(restart_delay:UInt32?)-instance-method","html_id":"restart_delay=(restart_delay:UInt32?)-instance-method","name":"restart_delay=","doc":null,"summary":null,"abstract":false,"args":[{"name":"restart_delay","doc":null,"default_value":"","external_name":"restart_delay","restriction":"UInt32 | ::Nil"}],"args_string":"(restart_delay : UInt32?)","source_link":"https://github.com/DFabric/dppm/blob/4a1bc37bc6872377dbc36759a4d46e84ec35bbb5/src/service/config.cr#L2","def":{"name":"restart_delay=","args":[{"name":"restart_delay","doc":null,"default_value":"","external_name":"restart_delay","restriction":"UInt32 | ::Nil"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@restart_delay = restart_delay"}},{"id":"umask:String?-instance-method","html_id":"umask:String?-instance-method","name":"umask","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : String?","source_link":"https://github.com/DFabric/dppm/blob/4a1bc37bc6872377dbc36759a4d46e84ec35bbb5/src/service/config.cr#L2","def":{"name":"umask","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"String | ::Nil","visibility":"Public","body":"@umask"}},{"id":"umask=(umask:String?)-instance-method","html_id":"umask=(umask:String?)-instance-method","name":"umask=","doc":null,"summary":null,"abstract":false,"args":[{"name":"umask","doc":null,"default_value":"","external_name":"umask","restriction":"String | ::Nil"}],"args_string":"(umask : String?)","source_link":"https://github.com/DFabric/dppm/blob/4a1bc37bc6872377dbc36759a4d46e84ec35bbb5/src/service/config.cr#L2","def":{"name":"umask=","args":[{"name":"umask","doc":null,"default_value":"","external_name":"umask","restriction":"String | ::Nil"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@umask = umask"}},{"id":"user:String?-instance-method","html_id":"user:String?-instance-method","name":"user","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : String?","source_link":"https://github.com/DFabric/dppm/blob/4a1bc37bc6872377dbc36759a4d46e84ec35bbb5/src/service/config.cr#L2","def":{"name":"user","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"String | ::Nil","visibility":"Public","body":"@user"}},{"id":"user=(user:String?)-instance-method","html_id":"user=(user:String?)-instance-method","name":"user=","doc":null,"summary":null,"abstract":false,"args":[{"name":"user","doc":null,"default_value":"","external_name":"user","restriction":"String | ::Nil"}],"args_string":"(user : String?)","source_link":"https://github.com/DFabric/dppm/blob/4a1bc37bc6872377dbc36759a4d46e84ec35bbb5/src/service/config.cr#L2","def":{"name":"user=","args":[{"name":"user","doc":null,"default_value":"","external_name":"user","restriction":"String | ::Nil"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@user = user"}},{"id":"want:Set(String)-instance-method","html_id":"want:Set(String)-instance-method","name":"want","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Set(String)","source_link":"https://github.com/DFabric/dppm/blob/4a1bc37bc6872377dbc36759a4d46e84ec35bbb5/src/service/config.cr#L2","def":{"name":"want","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Set(String)","visibility":"Public","body":"@want"}},{"id":"want=(want:Set(String))-instance-method","html_id":"want=(want:Set(String))-instance-method","name":"want=","doc":null,"summary":null,"abstract":false,"args":[{"name":"want","doc":null,"default_value":"","external_name":"want","restriction":"Set(String)"}],"args_string":"(want : Set(String))","source_link":"https://github.com/DFabric/dppm/blob/4a1bc37bc6872377dbc36759a4d46e84ec35bbb5/src/service/config.cr#L2","def":{"name":"want=","args":[{"name":"want","doc":null,"default_value":"","external_name":"want","restriction":"Set(String)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@want = want"}}],"macros":[],"types":[]},{"html_id":"dppm/Service/Error","path":"Service/Error.html","kind":"class","full_name":"Service::Error","name":"Error","abstract":false,"superclass":{"html_id":"dppm/Exception","kind":"class","full_name":"Exception","name":"Exception"},"ancestors":[{"html_id":"dppm/Exception","kind":"class","full_name":"Exception","name":"Exception"},{"html_id":"dppm/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"dppm/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/service.cr","line_number":5,"url":"https://github.com/DFabric/dppm/blob/4a1bc37bc6872377dbc36759a4d46e84ec35bbb5/src/service.cr#L5"}],"repository_name":"dppm","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"dppm/Service","kind":"module","full_name":"Service","name":"Service"},"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[]},{"html_id":"dppm/Service/InitSystem","path":"Service/InitSystem.html","kind":"module","full_name":"Service::InitSystem","name":"InitSystem","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"src/service/init_system.cr","line_number":1,"url":"https://github.com/DFabric/dppm/blob/4a1bc37bc6872377dbc36759a4d46e84ec35bbb5/src/service/init_system.cr#L1"}],"repository_name":"dppm","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[{"html_id":"dppm/Service/OpenRC","kind":"class","full_name":"Service::OpenRC","name":"OpenRC"},{"html_id":"dppm/Service/Systemd","kind":"class","full_name":"Service::Systemd","name":"Systemd"}],"namespace":{"html_id":"dppm/Service","kind":"module","full_name":"Service","name":"Service"},"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[{"id":"boot(value:Bool):Bool-instance-method","html_id":"boot(value:Bool):Bool-instance-method","name":"boot","doc":null,"summary":null,"abstract":false,"args":[{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":"Bool"}],"args_string":"(value : Bool) : Bool","source_link":"https://github.com/DFabric/dppm/blob/4a1bc37bc6872377dbc36759a4d46e84ec35bbb5/src/service/init_system.cr#L45","def":{"name":"boot","args":[{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":"Bool"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Bool","visibility":"Public","body":"case value\nwhen boot?\nwhen true\n  File.symlink(@file.to_s, @boot_file.to_s)\nwhen false\n  File.delete(@boot_file.to_s)\nend\nvalue\n"}},{"id":"boot?:Bool-instance-method","html_id":"boot?:Bool-instance-method","name":"boot?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Bool","source_link":"https://github.com/DFabric/dppm/blob/4a1bc37bc6872377dbc36759a4d46e84ec35bbb5/src/service/init_system.cr#L29","def":{"name":"boot?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Bool","visibility":"Public","body":"File.exists?(@boot_file.to_s)"}},{"id":"boot_file:Path-instance-method","html_id":"boot_file:Path-instance-method","name":"boot_file","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Path","source_link":"https://github.com/DFabric/dppm/blob/4a1bc37bc6872377dbc36759a4d46e84ec35bbb5/src/service/init_system.cr#L2","def":{"name":"boot_file","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Path","visibility":"Public","body":"@boot_file"}},{"id":"check_delete-instance-method","html_id":"check_delete-instance-method","name":"check_delete","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/DFabric/dppm/blob/4a1bc37bc6872377dbc36759a4d46e84ec35bbb5/src/service/init_system.cr#L64","def":{"name":"check_delete","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"if !writable?\n  raise(\"Root execution needed for system service deletion: \" + name)\nelse\n  if !exists?\n    raise(\"Service doesn't exist: \" + name)\n  end\nend"}},{"id":"config-instance-method","html_id":"config-instance-method","name":"config","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/DFabric/dppm/blob/4a1bc37bc6872377dbc36759a4d46e84ec35bbb5/src/service/init_system.cr#L6","def":{"name":"config","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"if (value = @config).nil?\n  @config = (if @file && (File.exists?(@file.to_s))\n    File.open(@file.to_s) do |io|\n      @config_class.new(io)\n    end\n  else\n    @config_class.new\n  end)\nelse\n  value\nend"}},{"id":"creatable?:Bool-instance-method","html_id":"creatable?:Bool-instance-method","name":"creatable?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Bool","source_link":"https://github.com/DFabric/dppm/blob/4a1bc37bc6872377dbc36759a4d46e84ec35bbb5/src/service/init_system.cr#L41","def":{"name":"creatable?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Bool","visibility":"Public","body":"File.writable?(@file.dirname)"}},{"id":"delete-instance-method","html_id":"delete-instance-method","name":"delete","doc":null,"summary":null,"abstract":true,"args":[],"args_string":"","source_link":"https://github.com/DFabric/dppm/blob/4a1bc37bc6872377dbc36759a4d46e84ec35bbb5/src/service/init_system.cr#L17","def":{"name":"delete","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":""}},{"id":"exists?:Bool-instance-method","html_id":"exists?:Bool-instance-method","name":"exists?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Bool","source_link":"https://github.com/DFabric/dppm/blob/4a1bc37bc6872377dbc36759a4d46e84ec35bbb5/src/service/init_system.cr#L33","def":{"name":"exists?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Bool","visibility":"Public","body":"(File.symlink?(@file.to_s)) || (File.exists?(@file.to_s))"}},{"id":"file:Path-instance-method","html_id":"file:Path-instance-method","name":"file","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Path","source_link":"https://github.com/DFabric/dppm/blob/4a1bc37bc6872377dbc36759a4d46e84ec35bbb5/src/service/init_system.cr#L2","def":{"name":"file","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Path","visibility":"Public","body":"@file"}},{"id":"name:String-instance-method","html_id":"name:String-instance-method","name":"name","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : String","source_link":"https://github.com/DFabric/dppm/blob/4a1bc37bc6872377dbc36759a4d46e84ec35bbb5/src/service/init_system.cr#L2","def":{"name":"name","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"String","visibility":"Public","body":"@name"}},{"id":"real_file:String-instance-method","html_id":"real_file:String-instance-method","name":"real_file","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : String","source_link":"https://github.com/DFabric/dppm/blob/4a1bc37bc6872377dbc36759a4d46e84ec35bbb5/src/service/init_system.cr#L54","def":{"name":"real_file","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"String","visibility":"Public","body":"File.real_path(@file.to_s)"}},{"id":"type:String-instance-method","html_id":"type:String-instance-method","name":"type","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : String","source_link":"https://github.com/DFabric/dppm/blob/4a1bc37bc6872377dbc36759a4d46e84ec35bbb5/src/service/init_system.cr#L25","def":{"name":"type","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"String","visibility":"Public","body":"self.class.type"}},{"id":"writable?:Bool-instance-method","html_id":"writable?:Bool-instance-method","name":"writable?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Bool","source_link":"https://github.com/DFabric/dppm/blob/4a1bc37bc6872377dbc36759a4d46e84ec35bbb5/src/service/init_system.cr#L37","def":{"name":"writable?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Bool","visibility":"Public","body":"File.writable?(@file.to_s)"}},{"id":"write_config-instance-method","html_id":"write_config-instance-method","name":"write_config","doc":null,"summary":null,"abstract":true,"args":[],"args_string":"","source_link":"https://github.com/DFabric/dppm/blob/4a1bc37bc6872377dbc36759a4d46e84ec35bbb5/src/service/init_system.cr#L16","def":{"name":"write_config","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":""}}],"macros":[],"types":[]},{"html_id":"dppm/Service/OpenRC","path":"Service/OpenRC.html","kind":"class","full_name":"Service::OpenRC","name":"OpenRC","abstract":false,"superclass":{"html_id":"dppm/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"dppm/Service/InitSystem","kind":"module","full_name":"Service::InitSystem","name":"InitSystem"},{"html_id":"dppm/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"dppm/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/service/openrc.cr","line_number":3,"url":"https://github.com/DFabric/dppm/blob/4a1bc37bc6872377dbc36759a4d46e84ec35bbb5/src/service/openrc.cr#L3"}],"repository_name":"dppm","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[{"html_id":"dppm/Service/InitSystem","kind":"module","full_name":"Service::InitSystem","name":"InitSystem"}],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"dppm/Service","kind":"module","full_name":"Service","name":"Service"},"doc":null,"summary":null,"class_methods":[{"id":"each(&block:String->_)-class-method","html_id":"each(&block:String->_)-class-method","name":"each","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"(&block : String -> _)","source_link":"https://github.com/DFabric/dppm/blob/4a1bc37bc6872377dbc36759a4d46e84ec35bbb5/src/service/openrc.cr#L20","def":{"name":"each","args":[],"double_splat":null,"splat_index":null,"yields":1,"block_arg":{"name":"block","doc":null,"default_value":"","external_name":"block","restriction":"(String -> _)"},"return_type":"","visibility":"Public","body":"Dir.each_child(\"/etc/init.d\") do |service|\n  yield service\nend"}},{"id":"type:String-class-method","html_id":"type:String-class-method","name":"type","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : String","source_link":"https://github.com/DFabric/dppm/blob/4a1bc37bc6872377dbc36759a4d46e84ec35bbb5/src/service/openrc.cr#L6","def":{"name":"type","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"String","visibility":"Public","body":"@@type"}},{"id":"version-class-method","html_id":"version-class-method","name":"version","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/DFabric/dppm/blob/4a1bc37bc6872377dbc36759a4d46e84ec35bbb5/src/service/openrc.cr#L8","def":{"name":"version","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"if (value = @@version).nil?\n  @@version = begin\n    output, error = Exec.new(\"/sbin/openrc\", {\"-V\"}, &.wait)\n    ((output.to_s.rpartition(' '))[-1].rpartition('.'))[-1]\n  rescue ex\n    raise(Error.new(\"Can't retrieve the OpenRC version (#{output}#{error})\", ex))\n  end\nelse\n  value\nend"}}],"constructors":[{"id":"new(name:String)-class-method","html_id":"new(name:String)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":"String"}],"args_string":"(name : String)","source_link":"https://github.com/DFabric/dppm/blob/4a1bc37bc6872377dbc36759a4d46e84ec35bbb5/src/service/openrc.cr#L15","def":{"name":"new","args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(name)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"delete-instance-method","html_id":"delete-instance-method","name":"delete","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/DFabric/dppm/blob/4a1bc37bc6872377dbc36759a4d46e84ec35bbb5/src/service/openrc.cr#L30","def":{"name":"delete","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"internal_delete"}},{"id":"reload:Bool-instance-method","html_id":"reload:Bool-instance-method","name":"reload","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Bool","source_link":"https://github.com/DFabric/dppm/blob/4a1bc37bc6872377dbc36759a4d46e84ec35bbb5/src/service/openrc.cr#L39","def":{"name":"reload","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Bool","visibility":"Public","body":"Service.exec?(\"/sbin/rc-service\", {@name, \"reload\"})"}},{"id":"restart:Bool-instance-method","html_id":"restart:Bool-instance-method","name":"restart","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Bool","source_link":"https://github.com/DFabric/dppm/blob/4a1bc37bc6872377dbc36759a4d46e84ec35bbb5/src/service/openrc.cr#L39","def":{"name":"restart","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Bool","visibility":"Public","body":"Service.exec?(\"/sbin/rc-service\", {@name, \"restart\"})"}},{"id":"run?:Bool-instance-method","html_id":"run?:Bool-instance-method","name":"run?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Bool","source_link":"https://github.com/DFabric/dppm/blob/4a1bc37bc6872377dbc36759a4d46e84ec35bbb5/src/service/openrc.cr#L26","def":{"name":"run?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Bool","visibility":"Public","body":"Service.exec?(\"/sbin/rc-service\", {@name, \"status\"})"}},{"id":"start:Bool-instance-method","html_id":"start:Bool-instance-method","name":"start","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Bool","source_link":"https://github.com/DFabric/dppm/blob/4a1bc37bc6872377dbc36759a4d46e84ec35bbb5/src/service/openrc.cr#L39","def":{"name":"start","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Bool","visibility":"Public","body":"Service.exec?(\"/sbin/rc-service\", {@name, \"start\"})"}},{"id":"stop:Bool-instance-method","html_id":"stop:Bool-instance-method","name":"stop","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Bool","source_link":"https://github.com/DFabric/dppm/blob/4a1bc37bc6872377dbc36759a4d46e84ec35bbb5/src/service/openrc.cr#L39","def":{"name":"stop","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Bool","visibility":"Public","body":"Service.exec?(\"/sbin/rc-service\", {@name, \"stop\"})"}},{"id":"write_config-instance-method","html_id":"write_config-instance-method","name":"write_config","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/DFabric/dppm/blob/4a1bc37bc6872377dbc36759a4d46e84ec35bbb5/src/service/openrc.cr#L34","def":{"name":"write_config","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"internal_write_config\nFile.chmod(@file.to_s, 488)\n"}}],"macros":[],"types":[{"html_id":"dppm/Service/OpenRC/Config","path":"Service/OpenRC/Config.html","kind":"class","full_name":"Service::OpenRC::Config","name":"Config","abstract":false,"superclass":{"html_id":"dppm/Service/Config","kind":"class","full_name":"Service::Config","name":"Config"},"ancestors":[{"html_id":"dppm/Service/Config","kind":"class","full_name":"Service::Config","name":"Config"},{"html_id":"dppm/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"dppm/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/service/openrc_config.cr","line_number":3,"url":"https://github.com/DFabric/dppm/blob/4a1bc37bc6872377dbc36759a4d46e84ec35bbb5/src/service/openrc_config.cr#L3"}],"repository_name":"dppm","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"dppm/Service/OpenRC","kind":"class","full_name":"Service::OpenRC","name":"OpenRC"},"doc":null,"summary":null,"class_methods":[],"constructors":[{"id":"new(data:String|IO)-class-method","html_id":"new(data:String|IO)-class-method","name":"new","doc":"ameba:disable Metrics/CyclomaticComplexity","summary":"<p>ameba:disable Metrics/CyclomaticComplexity</p>","abstract":false,"args":[{"name":"data","doc":null,"default_value":"","external_name":"data","restriction":"String | IO"}],"args_string":"(data : String | IO)","source_link":"https://github.com/DFabric/dppm/blob/4a1bc37bc6872377dbc36759a4d46e84ec35bbb5/src/service/openrc_config.cr#L15","def":{"name":"new","args":[{"name":"data","doc":null,"default_value":"","external_name":"data","restriction":"String | IO"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(data)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}},{"id":"new-class-method","html_id":"new-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/DFabric/dppm/blob/4a1bc37bc6872377dbc36759a4d46e84ec35bbb5/src/service/openrc_config.cr#L11","def":{"name":"new","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"build(io:IO):Nil-instance-method","html_id":"build(io:IO):Nil-instance-method","name":"build","doc":"ameba:disable Metrics/CyclomaticComplexity","summary":"<p>ameba:disable Metrics/CyclomaticComplexity</p>","abstract":false,"args":[{"name":"io","doc":null,"default_value":"","external_name":"io","restriction":"IO"}],"args_string":"(io : IO) : Nil","source_link":"https://github.com/DFabric/dppm/blob/4a1bc37bc6872377dbc36759a4d46e84ec35bbb5/src/service/openrc_config.cr#L76","def":{"name":"build","args":[{"name":"io","doc":null,"default_value":"","external_name":"io","restriction":"IO"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Nil","visibility":"Public","body":"(io << OPENRC_SHEBANG) << \"\\n\\n\"\n(io << OPENRC_SUPERVISOR) << '\\n'\nio << OPENRC_PIDFILE\nif @reload_signal\n  io << \"\\nextra_started_commands=reload\"\nend\nif @user || @group\n  io << \"\\ncommand_user='#{@user}:#{@group}'\"\nend\nif @directory\n  ((io << \"\\ndirectory='\") << @directory) << '\\''\nend\nif command = @command\n  command_elements = command.partition(' ')\n  ((io << \"\\ncommand='\") << command_elements[0]) << '\\''\n  if !command_elements[2].empty?\n    ((io << \"\\ncommand_args='\") << command_elements[2]) << '\\''\n  end\nend\nif @log_output\n  ((io << \"\\noutput_log='\") << @log_output) << '\\''\nend\nif @log_error\n  ((io << \"\\nerror_log='\") << @log_error) << '\\''\nend\nif @description\n  ((io << \"\\ndescription='\") << @description) << '\\''\nend\nif @restart_delay\n  (io << \"\\nrespawn_delay=\") << @restart_delay\nend\nif @umask\n  (io << \"\\numask=\") << @umask\nend\nif !@env_vars.empty?\n  (io << '\\n') << OPENRC_ENV_VARS_PREFIX\n  build_env_vars(io)\n  io << \"'\\\"\"\nend\nio << \"\\n\\ndepend() {\\n\\tafter \"\n@after << OPENRC_NETWORK_SERVICE\n@after.join(io, ' ')\nio << \"}\\n\"\nif @reload_signal\n  io << \"\\nreload() {\\n\\tebegin \\\"Reloading $RC_SVCNAME\\\"\\n\\t#{OPENRC_RELOAD_COMMAND}#{@reload_signal}\\n\\teend $? \\\"Failed to reload $RC_SVCNAME\\\"\\n}\\n\"\nend\n"}}],"macros":[],"types":[]}]},{"html_id":"dppm/Service/Systemd","path":"Service/Systemd.html","kind":"class","full_name":"Service::Systemd","name":"Systemd","abstract":false,"superclass":{"html_id":"dppm/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"dppm/Service/InitSystem","kind":"module","full_name":"Service::InitSystem","name":"InitSystem"},{"html_id":"dppm/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"dppm/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/service/systemd.cr","line_number":3,"url":"https://github.com/DFabric/dppm/blob/4a1bc37bc6872377dbc36759a4d46e84ec35bbb5/src/service/systemd.cr#L3"}],"repository_name":"dppm","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[{"html_id":"dppm/Service/InitSystem","kind":"module","full_name":"Service::InitSystem","name":"InitSystem"}],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"dppm/Service","kind":"module","full_name":"Service","name":"Service"},"doc":null,"summary":null,"class_methods":[{"id":"each(&block:String->_)-class-method","html_id":"each(&block:String->_)-class-method","name":"each","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"(&block : String -> _)","source_link":"https://github.com/DFabric/dppm/blob/4a1bc37bc6872377dbc36759a4d46e84ec35bbb5/src/service/systemd.cr#L24","def":{"name":"each","args":[],"double_splat":null,"splat_index":null,"yields":1,"block_arg":{"name":"block","doc":null,"default_value":"","external_name":"block","restriction":"(String -> _)"},"return_type":"","visibility":"Public","body":"{\"/lib/systemd/system\", \"/etc/systemd/system\"}.each do |service_dir|\n  Dir.each_child(service_dir) do |service|\n    if service_name = service.rchop?(\".service\")\n      if !(service_name.ends_with?('@'))\n        yield service_name\n      end\n    end\n  end\nend"}},{"id":"type:String-class-method","html_id":"type:String-class-method","name":"type","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : String","source_link":"https://github.com/DFabric/dppm/blob/4a1bc37bc6872377dbc36759a4d46e84ec35bbb5/src/service/systemd.cr#L6","def":{"name":"type","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"String","visibility":"Public","body":"@@type"}},{"id":"version-class-method","html_id":"version-class-method","name":"version","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/DFabric/dppm/blob/4a1bc37bc6872377dbc36759a4d46e84ec35bbb5/src/service/systemd.cr#L8","def":{"name":"version","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"if (value = @@version).nil?\n  @@version = begin\n    output, error = Exec.new(\"/bin/systemctl\", {\"--version\"}, &.wait)\n    (((output.to_s.lchop(\"systemd \")).partition('\\n'))[0].partition(' '))[0].to_i\n  rescue ex\n    raise(Error.new(\"Can't retrieve the systemd version (#{output}#{error})\", ex))\n  end\nelse\n  value\nend"}}],"constructors":[{"id":"new(name:String)-class-method","html_id":"new(name:String)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":"String"}],"args_string":"(name : String)","source_link":"https://github.com/DFabric/dppm/blob/4a1bc37bc6872377dbc36759a4d46e84ec35bbb5/src/service/systemd.cr#L15","def":{"name":"new","args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(name)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"delete-instance-method","html_id":"delete-instance-method","name":"delete","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/DFabric/dppm/blob/4a1bc37bc6872377dbc36759a4d46e84ec35bbb5/src/service/systemd.cr#L38","def":{"name":"delete","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"internal_delete\ndaemon_reload\n"}},{"id":"reload:Bool-instance-method","html_id":"reload:Bool-instance-method","name":"reload","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Bool","source_link":"https://github.com/DFabric/dppm/blob/4a1bc37bc6872377dbc36759a4d46e84ec35bbb5/src/service/systemd.cr#L48","def":{"name":"reload","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Bool","visibility":"Public","body":"Service.exec?(\"/bin/systemctl\", {\"-q\", \"--no-ask-password\", \"reload\", @name})"}},{"id":"restart:Bool-instance-method","html_id":"restart:Bool-instance-method","name":"restart","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Bool","source_link":"https://github.com/DFabric/dppm/blob/4a1bc37bc6872377dbc36759a4d46e84ec35bbb5/src/service/systemd.cr#L48","def":{"name":"restart","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Bool","visibility":"Public","body":"Service.exec?(\"/bin/systemctl\", {\"-q\", \"--no-ask-password\", \"restart\", @name})"}},{"id":"run?:Bool-instance-method","html_id":"run?:Bool-instance-method","name":"run?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Bool","source_link":"https://github.com/DFabric/dppm/blob/4a1bc37bc6872377dbc36759a4d46e84ec35bbb5/src/service/systemd.cr#L34","def":{"name":"run?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Bool","visibility":"Public","body":"Service.exec?(\"/bin/systemctl\", {\"-q\", \"--no-ask-password\", \"is-active\", @name})"}},{"id":"start:Bool-instance-method","html_id":"start:Bool-instance-method","name":"start","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Bool","source_link":"https://github.com/DFabric/dppm/blob/4a1bc37bc6872377dbc36759a4d46e84ec35bbb5/src/service/systemd.cr#L48","def":{"name":"start","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Bool","visibility":"Public","body":"Service.exec?(\"/bin/systemctl\", {\"-q\", \"--no-ask-password\", \"start\", @name})"}},{"id":"stop:Bool-instance-method","html_id":"stop:Bool-instance-method","name":"stop","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Bool","source_link":"https://github.com/DFabric/dppm/blob/4a1bc37bc6872377dbc36759a4d46e84ec35bbb5/src/service/systemd.cr#L48","def":{"name":"stop","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Bool","visibility":"Public","body":"Service.exec?(\"/bin/systemctl\", {\"-q\", \"--no-ask-password\", \"stop\", @name})"}},{"id":"write_config-instance-method","html_id":"write_config-instance-method","name":"write_config","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/DFabric/dppm/blob/4a1bc37bc6872377dbc36759a4d46e84ec35bbb5/src/service/systemd.cr#L43","def":{"name":"write_config","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"internal_write_config\ndaemon_reload\n"}}],"macros":[],"types":[{"html_id":"dppm/Service/Systemd/Config","path":"Service/Systemd/Config.html","kind":"class","full_name":"Service::Systemd::Config","name":"Config","abstract":false,"superclass":{"html_id":"dppm/Service/Config","kind":"class","full_name":"Service::Config","name":"Config"},"ancestors":[{"html_id":"dppm/Service/Config","kind":"class","full_name":"Service::Config","name":"Config"},{"html_id":"dppm/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"dppm/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/service/systemd_config.cr","line_number":4,"url":"https://github.com/DFabric/dppm/blob/4a1bc37bc6872377dbc36759a4d46e84ec35bbb5/src/service/systemd_config.cr#L4"}],"repository_name":"dppm","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"dppm/Service/Systemd","kind":"class","full_name":"Service::Systemd","name":"Systemd"},"doc":null,"summary":null,"class_methods":[],"constructors":[{"id":"new(data:String|IO)-class-method","html_id":"new(data:String|IO)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"data","doc":null,"default_value":"","external_name":"data","restriction":"String | IO"}],"args_string":"(data : String | IO)","source_link":"https://github.com/DFabric/dppm/blob/4a1bc37bc6872377dbc36759a4d46e84ec35bbb5/src/service/systemd_config.cr#L14","def":{"name":"new","args":[{"name":"data","doc":null,"default_value":"","external_name":"data","restriction":"String | IO"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(data)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}},{"id":"new-class-method","html_id":"new-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/DFabric/dppm/blob/4a1bc37bc6872377dbc36759a4d46e84ec35bbb5/src/service/systemd_config.cr#L11","def":{"name":"new","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"build(io:IO):Nil-instance-method","html_id":"build(io:IO):Nil-instance-method","name":"build","doc":"ameba:disable Metrics/CyclomaticComplexity","summary":"<p>ameba:disable Metrics/CyclomaticComplexity</p>","abstract":false,"args":[{"name":"io","doc":null,"default_value":"","external_name":"io","restriction":"IO"}],"args_string":"(io : IO) : Nil","source_link":"https://github.com/DFabric/dppm/blob/4a1bc37bc6872377dbc36759a4d46e84ec35bbb5/src/service/systemd_config.cr#L58","def":{"name":"build","args":[{"name":"io","doc":null,"default_value":"","external_name":"io","restriction":"IO"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Nil","visibility":"Public","body":"systemd = {\"Unit\" => Hash(String, String).new, \"Service\" => {\"Type\" => \"simple\", \"Restart\" => \"always\"}, \"Install\" => {\"WantedBy\" => \"multi-user.target\"}}\nsystemd[\"Service\"].merge!(@extra_service_options)\nif @reload_signal\n  systemd[\"Service\"][\"ExecReload\"] = \"/bin/kill -#{@reload_signal} $MAINPID\"\nend\nif user = @user\n  systemd[\"Service\"][\"User\"] = user\nend\nif group = @group\n  systemd[\"Service\"][\"Group\"] = group\nend\nif Systemd.version < 236\n  if ((command = @command) && (log_output = @log_output)) && (log_error = @log_error)\n    systemd[\"Service\"][\"ExecStart\"] = (((((SYSTEMD_SHELL_LOG_REDIRECT + log_error) + \" >>\") + log_output) + ' ') + command) + '\\''\n  end\nelse\n  if command = @command\n    systemd[\"Service\"][\"ExecStart\"] = command\n  end\n  if log_output = @log_output\n    systemd[\"Service\"][\"StandardOutput\"] = \"file:\" + log_output\n  end\n  if log_error = @log_error\n    systemd[\"Service\"][\"StandardError\"] = \"file:\" + log_error\n  end\nend\nif directory = @directory\n  systemd[\"Service\"][\"WorkingDirectory\"] = directory\nend\nif description = @description\n  systemd[\"Unit\"][\"Description\"] = description\nend\nif umask = @umask\n  systemd[\"Service\"][\"UMask\"] = umask\nend\nif restart_delay = @restart_delay\n  systemd[\"Service\"][\"RestartSec\"] = restart_delay.to_s\nend\n@after << SYSTEMD_NETWORK_SERVICE\nsystemd[\"Unit\"][\"After\"] = String.build do |str|\n  @after.join(str, ' ') do |service|\n    str << service\n    if service != SYSTEMD_NETWORK_SERVICE\n      str << \".service\"\n    end\n  end\nend\nif !@env_vars.empty?\n  systemd[\"Service\"][\"Environment\"] = build_env_vars\nend\nINI.build(io, systemd)\n"}}],"macros":[],"types":[]}]}]},{"html_id":"dppm/WebSite","path":"WebSite.html","kind":"module","full_name":"WebSite","name":"WebSite","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"src/web_site.cr","line_number":5,"url":"https://github.com/DFabric/dppm/blob/4a1bc37bc6872377dbc36759a4d46e84ec35bbb5/src/web_site.cr#L5"},{"filename":"src/web_site/site.cr","line_number":3,"url":"https://github.com/DFabric/dppm/blob/4a1bc37bc6872377dbc36759a4d46e84ec35bbb5/src/web_site/site.cr#L3"}],"repository_name":"dppm","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":null,"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[{"html_id":"dppm/WebSite/Caddy","path":"WebSite/Caddy.html","kind":"struct","full_name":"WebSite::Caddy","name":"Caddy","abstract":false,"superclass":{"html_id":"dppm/Struct","kind":"struct","full_name":"Struct","name":"Struct"},"ancestors":[{"html_id":"dppm/WebSite/Site","kind":"module","full_name":"WebSite::Site","name":"Site"},{"html_id":"dppm/Struct","kind":"struct","full_name":"Struct","name":"Struct"},{"html_id":"dppm/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"dppm/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/web_site/caddy.cr","line_number":4,"url":"https://github.com/DFabric/dppm/blob/4a1bc37bc6872377dbc36759a4d46e84ec35bbb5/src/web_site/caddy.cr#L4"}],"repository_name":"dppm","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[{"html_id":"dppm/WebSite/Site","kind":"module","full_name":"WebSite::Site","name":"Site"}],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"dppm/WebSite","kind":"module","full_name":"WebSite","name":"WebSite"},"doc":"Limited Caddyfile parser/builder","summary":"<p>Limited Caddyfile parser/builder</p>","class_methods":[],"constructors":[{"id":"new(file:Path)-class-method","html_id":"new(file:Path)-class-method","name":"new","doc":"Parses a Caddyfile from a path.\n\nameba:disable Metrics/CyclomaticComplexity","summary":"<p>Parses a Caddyfile from a path.</p>","abstract":false,"args":[{"name":"file","doc":null,"default_value":"","external_name":"file","restriction":"Path"}],"args_string":"(file : Path)","source_link":"https://github.com/DFabric/dppm/blob/4a1bc37bc6872377dbc36759a4d46e84ec35bbb5/src/web_site/caddy.cr#L11","def":{"name":"new","args":[{"name":"file","doc":null,"default_value":"","external_name":"file","restriction":"Path"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(file)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"write-instance-method","html_id":"write-instance-method","name":"write","doc":"Writes to the Caddyfile path.","summary":"<p>Writes to the Caddyfile path.</p>","abstract":false,"args":[],"args_string":"","source_link":"https://github.com/DFabric/dppm/blob/4a1bc37bc6872377dbc36759a4d46e84ec35bbb5/src/web_site/caddy.cr#L54","def":{"name":"write","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"File.open(@file.to_s, \"w\") do |io|\n  @hosts.try(&.each do |host|\n    (io << (host.to_s.lchop(\"//\"))) << ' '\n  end)\n  io << '{'\n  if @root\n    (io << \"\\n    root \") << @root\n  end\n  if proxy = @proxy\n    (io << \"\\n    proxy / \") << (proxy.to_s.lchop(\"//\"))\n  end\n  if @fastcgi\n    ((io << \"\\n    fastcgi / \") << @fastcgi) << \" php\"\n  end\n  (io << \"\\n    log \") << @log_file_output\n  (io << \"\\n    errors \") << @log_file_error\n  if @gzip\n    io << \"\\n    gzip\"\n  end\n  if !@headers.empty?\n    io << \"\\n\\n    header / {\"\n    @headers.each do |header, value|\n      ((((io << \"\\n        \") << header) << \" \\\"\") << value) << '\"'\n    end\n    io << \"\\n    }\\n\"\n  end\n  if @extra.empty?\n    io << \"}\\n\"\n  else\n    (io << '\\n') << @extra\n  end\nend"}}],"macros":[],"types":[]},{"html_id":"dppm/WebSite/Error","path":"WebSite/Error.html","kind":"class","full_name":"WebSite::Error","name":"Error","abstract":false,"superclass":{"html_id":"dppm/Exception","kind":"class","full_name":"Exception","name":"Exception"},"ancestors":[{"html_id":"dppm/Exception","kind":"class","full_name":"Exception","name":"Exception"},{"html_id":"dppm/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"dppm/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/web_site.cr","line_number":6,"url":"https://github.com/DFabric/dppm/blob/4a1bc37bc6872377dbc36759a4d46e84ec35bbb5/src/web_site.cr#L6"}],"repository_name":"dppm","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"dppm/WebSite","kind":"module","full_name":"WebSite","name":"WebSite"},"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[]},{"html_id":"dppm/WebSite/Site","path":"WebSite/Site.html","kind":"module","full_name":"WebSite::Site","name":"Site","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"src/web_site/site.cr","line_number":3,"url":"https://github.com/DFabric/dppm/blob/4a1bc37bc6872377dbc36759a4d46e84ec35bbb5/src/web_site/site.cr#L3"}],"repository_name":"dppm","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[{"html_id":"dppm/WebSite/Caddy","kind":"struct","full_name":"WebSite::Caddy","name":"Caddy"}],"namespace":{"html_id":"dppm/WebSite","kind":"module","full_name":"WebSite","name":"WebSite"},"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[{"id":"fastcgi:URI?-instance-method","html_id":"fastcgi:URI?-instance-method","name":"fastcgi","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : URI?","source_link":"https://github.com/DFabric/dppm/blob/4a1bc37bc6872377dbc36759a4d46e84ec35bbb5/src/web_site/site.cr#L4","def":{"name":"fastcgi","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"URI | ::Nil","visibility":"Public","body":"@fastcgi"}},{"id":"fastcgi=(fastcgi:URI?)-instance-method","html_id":"fastcgi=(fastcgi:URI?)-instance-method","name":"fastcgi=","doc":null,"summary":null,"abstract":false,"args":[{"name":"fastcgi","doc":null,"default_value":"","external_name":"fastcgi","restriction":"URI | ::Nil"}],"args_string":"(fastcgi : URI?)","source_link":"https://github.com/DFabric/dppm/blob/4a1bc37bc6872377dbc36759a4d46e84ec35bbb5/src/web_site/site.cr#L4","def":{"name":"fastcgi=","args":[{"name":"fastcgi","doc":null,"default_value":"","external_name":"fastcgi","restriction":"URI | ::Nil"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@fastcgi = fastcgi"}},{"id":"file:Path-instance-method","html_id":"file:Path-instance-method","name":"file","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Path","source_link":"https://github.com/DFabric/dppm/blob/4a1bc37bc6872377dbc36759a4d46e84ec35bbb5/src/web_site/site.cr#L4","def":{"name":"file","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Path","visibility":"Public","body":"@file"}},{"id":"file=(file:Path)-instance-method","html_id":"file=(file:Path)-instance-method","name":"file=","doc":null,"summary":null,"abstract":false,"args":[{"name":"file","doc":null,"default_value":"","external_name":"file","restriction":"Path"}],"args_string":"(file : Path)","source_link":"https://github.com/DFabric/dppm/blob/4a1bc37bc6872377dbc36759a4d46e84ec35bbb5/src/web_site/site.cr#L4","def":{"name":"file=","args":[{"name":"file","doc":null,"default_value":"","external_name":"file","restriction":"Path"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@file = file"}},{"id":"gzip:Bool-instance-method","html_id":"gzip:Bool-instance-method","name":"gzip","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Bool","source_link":"https://github.com/DFabric/dppm/blob/4a1bc37bc6872377dbc36759a4d46e84ec35bbb5/src/web_site/site.cr#L4","def":{"name":"gzip","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Bool","visibility":"Public","body":"@gzip"}},{"id":"gzip=(gzip:Bool)-instance-method","html_id":"gzip=(gzip:Bool)-instance-method","name":"gzip=","doc":null,"summary":null,"abstract":false,"args":[{"name":"gzip","doc":null,"default_value":"","external_name":"gzip","restriction":"Bool"}],"args_string":"(gzip : Bool)","source_link":"https://github.com/DFabric/dppm/blob/4a1bc37bc6872377dbc36759a4d46e84ec35bbb5/src/web_site/site.cr#L4","def":{"name":"gzip=","args":[{"name":"gzip","doc":null,"default_value":"","external_name":"gzip","restriction":"Bool"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@gzip = gzip"}},{"id":"headers:Hash(String,String)-instance-method","html_id":"headers:Hash(String,String)-instance-method","name":"headers","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Hash(String, String)","source_link":"https://github.com/DFabric/dppm/blob/4a1bc37bc6872377dbc36759a4d46e84ec35bbb5/src/web_site/site.cr#L4","def":{"name":"headers","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Hash(String, String)","visibility":"Public","body":"@headers"}},{"id":"headers=(headers:Hash(String,String))-instance-method","html_id":"headers=(headers:Hash(String,String))-instance-method","name":"headers=","doc":null,"summary":null,"abstract":false,"args":[{"name":"headers","doc":null,"default_value":"","external_name":"headers","restriction":"Hash(String, String)"}],"args_string":"(headers : Hash(String, String))","source_link":"https://github.com/DFabric/dppm/blob/4a1bc37bc6872377dbc36759a4d46e84ec35bbb5/src/web_site/site.cr#L4","def":{"name":"headers=","args":[{"name":"headers","doc":null,"default_value":"","external_name":"headers","restriction":"Hash(String, String)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@headers = headers"}},{"id":"hosts:Array(URI)-instance-method","html_id":"hosts:Array(URI)-instance-method","name":"hosts","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Array(URI)","source_link":"https://github.com/DFabric/dppm/blob/4a1bc37bc6872377dbc36759a4d46e84ec35bbb5/src/web_site/site.cr#L4","def":{"name":"hosts","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Array(URI)","visibility":"Public","body":"@hosts"}},{"id":"hosts=(hosts:Array(URI))-instance-method","html_id":"hosts=(hosts:Array(URI))-instance-method","name":"hosts=","doc":null,"summary":null,"abstract":false,"args":[{"name":"hosts","doc":null,"default_value":"","external_name":"hosts","restriction":"Array(URI)"}],"args_string":"(hosts : Array(URI))","source_link":"https://github.com/DFabric/dppm/blob/4a1bc37bc6872377dbc36759a4d46e84ec35bbb5/src/web_site/site.cr#L4","def":{"name":"hosts=","args":[{"name":"hosts","doc":null,"default_value":"","external_name":"hosts","restriction":"Array(URI)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@hosts = hosts"}},{"id":"log_file_error:Path?-instance-method","html_id":"log_file_error:Path?-instance-method","name":"log_file_error","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Path?","source_link":"https://github.com/DFabric/dppm/blob/4a1bc37bc6872377dbc36759a4d46e84ec35bbb5/src/web_site/site.cr#L4","def":{"name":"log_file_error","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Path | ::Nil","visibility":"Public","body":"@log_file_error"}},{"id":"log_file_error=(log_file_error:Path?)-instance-method","html_id":"log_file_error=(log_file_error:Path?)-instance-method","name":"log_file_error=","doc":null,"summary":null,"abstract":false,"args":[{"name":"log_file_error","doc":null,"default_value":"","external_name":"log_file_error","restriction":"Path | ::Nil"}],"args_string":"(log_file_error : Path?)","source_link":"https://github.com/DFabric/dppm/blob/4a1bc37bc6872377dbc36759a4d46e84ec35bbb5/src/web_site/site.cr#L4","def":{"name":"log_file_error=","args":[{"name":"log_file_error","doc":null,"default_value":"","external_name":"log_file_error","restriction":"Path | ::Nil"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@log_file_error = log_file_error"}},{"id":"log_file_output:Path?-instance-method","html_id":"log_file_output:Path?-instance-method","name":"log_file_output","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Path?","source_link":"https://github.com/DFabric/dppm/blob/4a1bc37bc6872377dbc36759a4d46e84ec35bbb5/src/web_site/site.cr#L4","def":{"name":"log_file_output","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Path | ::Nil","visibility":"Public","body":"@log_file_output"}},{"id":"log_file_output=(log_file_output:Path?)-instance-method","html_id":"log_file_output=(log_file_output:Path?)-instance-method","name":"log_file_output=","doc":null,"summary":null,"abstract":false,"args":[{"name":"log_file_output","doc":null,"default_value":"","external_name":"log_file_output","restriction":"Path | ::Nil"}],"args_string":"(log_file_output : Path?)","source_link":"https://github.com/DFabric/dppm/blob/4a1bc37bc6872377dbc36759a4d46e84ec35bbb5/src/web_site/site.cr#L4","def":{"name":"log_file_output=","args":[{"name":"log_file_output","doc":null,"default_value":"","external_name":"log_file_output","restriction":"Path | ::Nil"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@log_file_output = log_file_output"}},{"id":"proxy:URI?-instance-method","html_id":"proxy:URI?-instance-method","name":"proxy","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : URI?","source_link":"https://github.com/DFabric/dppm/blob/4a1bc37bc6872377dbc36759a4d46e84ec35bbb5/src/web_site/site.cr#L4","def":{"name":"proxy","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"URI | ::Nil","visibility":"Public","body":"@proxy"}},{"id":"proxy=(proxy:URI?)-instance-method","html_id":"proxy=(proxy:URI?)-instance-method","name":"proxy=","doc":null,"summary":null,"abstract":false,"args":[{"name":"proxy","doc":null,"default_value":"","external_name":"proxy","restriction":"URI | ::Nil"}],"args_string":"(proxy : URI?)","source_link":"https://github.com/DFabric/dppm/blob/4a1bc37bc6872377dbc36759a4d46e84ec35bbb5/src/web_site/site.cr#L4","def":{"name":"proxy=","args":[{"name":"proxy","doc":null,"default_value":"","external_name":"proxy","restriction":"URI | ::Nil"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@proxy = proxy"}},{"id":"root:Path?-instance-method","html_id":"root:Path?-instance-method","name":"root","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Path?","source_link":"https://github.com/DFabric/dppm/blob/4a1bc37bc6872377dbc36759a4d46e84ec35bbb5/src/web_site/site.cr#L4","def":{"name":"root","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Path | ::Nil","visibility":"Public","body":"@root"}},{"id":"root=(root:Path?)-instance-method","html_id":"root=(root:Path?)-instance-method","name":"root=","doc":null,"summary":null,"abstract":false,"args":[{"name":"root","doc":null,"default_value":"","external_name":"root","restriction":"Path | ::Nil"}],"args_string":"(root : Path?)","source_link":"https://github.com/DFabric/dppm/blob/4a1bc37bc6872377dbc36759a4d46e84ec35bbb5/src/web_site/site.cr#L4","def":{"name":"root=","args":[{"name":"root","doc":null,"default_value":"","external_name":"root","restriction":"Path | ::Nil"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@root = root"}}],"macros":[],"types":[]}]}]}}